{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/field/bubble.js","webpack:///./node_modules/three/build/three.module.js","webpack:///./src/index.js","webpack:///./src/field/field.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Bubble","this","canvas","document","getElementById","ctx","getContext","width","offsetWidth","height","offsetHeight","dx","dy","radius","left","Math","floor","random","top","clickHandler","onMouseMove","emptyArray","animatePop","clearScore","generateRandomPosition","bubbles","speed","requestPointerLock","mozRequestPointerLock","exitPointerLock","mozExitPointerLock","addEventListener","scoreHigh","score","totalScore","highScore","saveHighScore","circlePos","clearRect","fillStyle","beginPath","arc","PI","fill","push","requestAnimationFrame","cancelAnimationFrame","newPos","drawRandomCircle","innerText","e","mouseX","movementX","mouseY","movementY","console","log","bubble","length","newBubbleX","newbubbleX","newBubbleY","newbubbleY","splice","updateScore","scoreStr","localStorage","getItem","parseInt","preventDefault","forEach","ele","gunshot","Audio","volume","play","setItem","EventDispatcher","assign","type","listener","undefined","_listeners","listeners","indexOf","hasEventListener","removeEventListener","listenerArray","index","dispatchEvent","event","target","array","slice","_lut","toString","_seed","MathUtils","DEG2RAD","RAD2DEG","generateUUID","d0","d1","d2","d3","toUpperCase","clamp","min","max","euclideanModulo","mapLinear","x","a1","a2","b1","b2","lerp","y","damp","lambda","dt","exp","pingpong","abs","smoothstep","smootherstep","randInt","low","high","randFloat","randFloatSpread","range","seededRandom","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","a","b","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","warn","Vector2","scalar","Error","constructor","v","w","addVectors","subVectors","multiplyScalar","elements","minVal","maxVal","divideScalar","round","sqrt","atan2","distanceToSquared","normalize","alpha","v1","v2","offset","attribute","getX","getY","center","angle","Matrix3","arguments","error","n11","n12","n13","n21","n22","n23","n31","n32","n33","te","fromArray","me","xAxis","yAxis","zAxis","setFromMatrix3Column","multiplyMatrices","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","f","g","h","t11","t12","t13","det","detInv","tmp","matrix4","setFromMatrix4","copy","invert","transpose","tx","ty","sx","sy","rotation","cx","cy","theta","matrix","_canvas","ImageUtils","getDataURL","image","test","src","HTMLCanvasElement","createElementNS","context","ImageData","putImageData","drawImage","toDataURL","textureId","Texture","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","encoding","uuid","mipmaps","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","version","onUpdate","serializeImage","HTMLImageElement","ImageBitmap","data","Array","isTexture","updateMatrix","setUvTransform","clone","source","toJSON","meta","isRootObject","textures","output","metadata","generator","wrap","images","url","isArray","isDataTexture","dispose","transformUv","uv","applyMatrix3","Vector4","z","acos","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getZ","getW","WebGLRenderTarget","options","super","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","Quaternion","_x","_y","_z","_w","qa","qb","qm","slerp","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","Number","EPSILON","len","tDir","_onChangeCallback","quaternion","euler","update","isEuler","_order","c1","c3","s1","s3","axis","halfAngle","trace","vFrom","vTo","dot","step","angleTo","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","callback","Vector3","multiplyVectors","applyQuaternion","_quaternion","setFromEuler","setFromAxisAngle","qx","qy","qz","qw","ix","iy","iz","iw","camera","applyMatrix4","matrixWorldInverse","projectionMatrix","projectionMatrixInverse","matrixWorld","crossVectors","ax","ay","az","bx","by","bz","denominator","lengthSq","planeNormal","_vector","projectOnVector","sub","normal","dz","setFromSphericalCoords","phi","sinPhiRadius","setFromCylindricalCoords","setFromMatrixColumn","sz","Box3","Infinity","minX","minY","minZ","maxX","maxY","maxZ","count","points","makeEmpty","il","expandByPoint","size","halfSize","_vector$1","add","expandByObject","box","isEmpty","point","vector","addScalar","updateWorldMatrix","geometry","boundingBox","computeBoundingBox","_box","union","children","sphere","clampPoint","plane","constant","triangle","getCenter","_center","_extents","_v0","_v1","_v2","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","getSize","_points","setFromPoints","equals","v0","extents","j","_testAxis","p0","p1","p2","_box$1","Sphere","optionalCenter","maxRadiusSq","distanceTo","radiusSum","intersectsSphere","distanceToPoint","deltaLengthSq","expandByScalar","getMaxScaleOnAxis","_vector$2","_segCenter","_segDir","_diff","_edge1","_edge2","_normal","Ray","origin","direction","ray","at","directionDistance","distanceSqToPoint","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","tca","radius2","thc","t0","t1","distanceToPlane","distToPoint","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectBox","backfaceCulling","sign","DdN","DdQxE2","DdE1xQ","cross","QdN","transformDirection","Matrix4","n14","n24","n34","n41","n42","n43","n44","scaleX","_v1$1","scaleY","scaleZ","af","bf","ce","cf","de","df","ac","ad","bc","bd","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","isVector3","t14","scaleXSq","scaleYSq","scaleZSq","position","scale","x2","y2","z2","wx","wy","wz","determinant","_m1","invSX","invSY","invSZ","setFromRotationMatrix","right","bottom","near","far","Euler","DefaultOrder","asin","_matrix","makeRotationFromQuaternion","newOrder","_quaternion$1","setFromQuaternion","optionalResult","RotationOrders","Layers","mask","channel","layers","_object3DId","_v1$2","_q1","_m1$1","_target","_position","_scale","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","Object3D","parent","DefaultUp","_onChange","defineProperties","configurable","modelViewMatrix","normalMatrix","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","userData","isObject3D","onBeforeRender","onAfterRender","premultiply","decompose","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","multiply","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","translateX","translateY","translateZ","localToWorld","worldToLocal","lookAt","setFromMatrixPosition","isCamera","isLight","extractRotation","remove","clear","attach","getObjectById","id","getObjectByProperty","getObjectByName","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","updateMatrixWorld","force","updateParents","updateChildren","geometries","materials","shapes","skeletons","serialize","library","element","JSON","stringify","toArray","isInstancedMesh","instanceMatrix","isMesh","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","values","recursive","parse","child","_vector1","_vector2","_normalMatrix","Plane","setFromNormalAndCoplanarPoint","inverseNormalLength","negate","line","delta","start","startSign","endSign","end","intersectsPlane","optionalNormalMatrix","getNormalMatrix","referencePoint","coplanarPoint","_v0$1","_v1$3","_v2$1","_v3","_vab","_vac","_vbc","_vap","_vbp","_vcp","Triangle","targetLengthSq","dot00","dot01","dot02","dot11","dot12","denom","invDenom","u","getBarycoord","p3","uv1","uv2","uv3","addScaledVector","i0","i1","i2","getNormal","setFromCoplanarPoints","getUV","containsPoint","isFrontFacing","intersectsTriangle","d4","vc","d5","d6","vb","va","_colorKeywords","_hslA","_hslB","hue2rgb","SRGBToLinear","LinearToSRGB","Color","setRGB","isColor","setHex","setStyle","hex","style","handleAlpha","string","parseFloat","exec","color","components","setHSL","charAt","setColorName","gammaFactor","safeInverse","copyGammaToLinear","copyLinearToGamma","copySRGBToLinear","copyLinearToSRGB","getHex","hue","saturation","lightness","getHSL","color1","color2","normalized","NAMES","Face3","materialIndex","vertexNormals","vertexColors","materialId","Material","fog","blending","side","flatShading","opacity","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaTest","premultipliedAlpha","toneMapped","MeshBasicMaterial","map","lightMap","lightMapIntensity","aoMap","aoMapIntensity","specularMap","alphaMap","envMap","combine","reflectivity","refractionRatio","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","skinning","morphTargets","setValues","isMaterial","onBeforeCompile","customProgramCacheKey","newValue","currentValue","isRoot","roughness","metalness","sheen","emissive","emissiveIntensity","specular","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","matcap","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","envMapIntensity","gradientMap","sizeAttenuation","linewidth","dashSize","gapSize","morphNormals","srcPlanes","dstPlanes","isMeshBasicMaterial","_vector$3","_vector2$1","BufferAttribute","itemSize","TypeError","usage","updateRange","Int8BufferAttribute","Int8Array","Uint8BufferAttribute","Uint8Array","Uint8ClampedBufferAttribute","Uint8ClampedArray","Int16BufferAttribute","Int16Array","Uint16BufferAttribute","Uint16Array","Int32BufferAttribute","Int32Array","Uint32BufferAttribute","Uint32Array","Float16BufferAttribute","Float32BufferAttribute","Float32Array","Float64BufferAttribute","Float64Array","arrayMax","isBufferAttribute","onUploadCallback","setUsage","copyAt","index1","index2","copyArray","copyColorsArray","colors","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","fromBufferAttribute","setXY","setXYZ","applyNormalMatrix","setX","setY","setZ","setW","setXYZW","onUpload","isFloat16BufferAttribute","TYPED_ARRAYS","getTypedArray","buffer","_id","_m1$2","_obj","_offset","_box$2","_boxMorphTargets","_vector$4","BufferGeometry","attributes","morphAttributes","morphTargetsRelative","groups","boundingSphere","drawRange","isBufferGeometry","getIndex","setIndex","getAttribute","setAttribute","deleteAttribute","hasAttribute","addGroup","clearGroups","setDrawRange","needsUpdate","tangent","computeBoundingSphere","makeRotationX","makeRotationY","makeRotationZ","translate","makeTranslation","makeScale","morphAttributesPosition","isGLBufferAttribute","setFromBufferAttribute","morphAttribute","isNaN","jl","computeFaceNormals","computeTangents","indices","positions","normals","uvs","nVertices","tangents","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","computeVertexNormals","positionAttribute","normalAttribute","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","merge","attributeArray1","attribute2","attributeArray2","attributeOffset","toNonIndexed","convertBufferAttribute","array2","geometry2","newAttribute","morphArray","keys","attributeData","hasMorphAttributes","attributeArray","_inverseMatrix","_ray","_sphere","_vA","_vB","_vC","_tempA","_tempB","_tempC","_morphA","_morphB","_morphC","_uvA","_uvB","_uvC","_intersectionPoint","_intersectionPointWorld","Mesh","updateMorphTargets","checkBufferGeometryIntersection","raycaster","morphPosition","morphInfluences","morphTargetInfluences","influence","boneTransform","intersection","intersect","intersectTriangle","checkIntersection","face","morphTargetDictionary","ml","String","intersects","intersectsBox","groupMaterial","faceIndex","isGeometry","BoxGeometry","depth","widthSegments","heightSegments","depthSegments","scope","vertices","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","cloneUniforms","isMatrix3","isMatrix4","isVector2","isVector4","mergeUniforms","uniforms","merged","UniformsUtils","ShaderMaterial","defines","vertexShader","fragmentShader","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","Camera","PerspectiveCamera","fov","aspect","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","isShaderMaterial","isPerspectiveCamera","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","enabled","offsetX","offsetY","clearViewOffset","skew","makePerspective","CubeCamera","renderTarget","isWebGLCubeRenderTarget","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","renderer","scene","currentXrEnabled","xr","currentRenderTarget","getRenderTarget","setRenderTarget","render","CubeTexture","_needsFlipEnvMap","isCubeTexture","WebGLCubeRenderTarget","dummy","isInteger","shader","tEquirect","mesh","currentMinFilter","stencil","DataTexture","_sphere$1","_vector$5","Frustum","p4","p5","planes","frustum","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","setComponents","sprite","negRadius","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","stop","setAnimationLoop","setContext","WebGLAttributes","gl","capabilities","isWebGL2","buffers","WeakMap","isInterleavedBufferAttribute","deleteBuffer","delete","bufferType","cached","bytesPerElement","elementSize","createBuffer","bindBuffer","bufferData","BYTES_PER_ELEMENT","bufferSubData","subarray","updateBuffer","PlaneGeometry","width_half","height_half","segment_width","segment_height","ShaderChunk","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_physical_pars_fragment","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars_begin","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmissionmap_fragment","transmissionmap_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","background_frag","background_vert","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshmatcap_frag","meshmatcap_vert","meshtoon_frag","meshtoon_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","sprite_frag","sprite_vert","UniformsLib","diffuse","uvTransform","uv2Transform","specularmap","envmap","flipEnvMap","maxMipLevel","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","roughnessmap","metalnessmap","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotShadowMap","spotShadowMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","background","t2D","cube","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","WebGLBackground","cubemaps","state","objects","clearColor","planeMesh","boxMesh","clearAlpha","currentBackground","currentBackgroundVersion","currentTonemapping","setClear","getClearColor","setClearColor","getClearAlpha","setClearAlpha","renderList","forceClear","isScene","session","getSession","environmentBlendMode","autoClear","autoClearColor","autoClearDepth","autoClearStencil","copyPosition","toneMapping","unshift","WebGLBindingStates","maxVertexAttributes","getParameter","extension","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","bindVertexArrayObject","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","newAttributes","enabledAttributes","attributeDivisors","program","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","stride","vertexAttribIPointer","reset","resetDefaultState","setup","updateBuffers","programMap","stateMap","createVertexArray","createVertexArrayOES","getBindingState","cachedAttributes","geometryAttributes","attributesNum","cachedAttribute","geometryAttribute","saveCache","isInstancedBufferGeometry","programAttributes","getAttributes","materialDefaultAttributeValues","programAttribute","isInstancedInterleavedBuffer","_maxInstanceCount","isInstancedBufferAttribute","instanceColor","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","setupVertexAttributes","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","WebGLBufferRenderer","info","setMode","drawArrays","renderInstances","primcount","methodName","WebGLCapabilities","maxAnisotropy","getMaxPrecision","getShaderPrecisionFormat","WebGL2RenderingContext","WebGL2ComputeRenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","maxVertexTextures","maxTextureSize","maxCubemapSize","maxAttributes","maxVertexUniforms","maxVaryings","maxFragmentUniforms","vertexTextures","floatFragmentTextures","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","floatVertexTextures","maxSamples","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","uniform","resetGlobalState","numPlanes","numIntersection","projectPlanes","skipTransform","nPlanes","dstArray","flatSize","viewMatrix","i4","init","enableLocalClipping","beginShadows","endShadows","setState","useCache","materialProperties","nGlobal","lGlobal","clippingState","WebGLCubeMaps","mapTextureMapping","onTextureDispose","cubemap","has","currentRenderList","getRenderList","fromEquirectangularTexture","setRenderList","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","memory","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","calls","triangles","lines","programs","autoReset","instanceCount","numericalSort","absNumericalSort","WebGLMorphtargets","influencesList","workInfluences","objectInfluences","influences","sort","MAX_SAFE_INTEGER","morphInfluencesSum","morphBaseInfluence","getUniforms","setValue","WebGLObjects","updateMap","onInstancedMeshDispose","instancedMesh","buffergeometry","DataTexture2DArray","wrapR","DataTexture3D","physical","transmission","transmissionMap","isDataTexture2DArray","isDataTexture3D","emptyTexture","emptyTexture2dArray","emptyTexture3d","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueT1","unit","uniform1i","safeSetTexture2D","setValueT2DArray1","setTexture2DArray","setValueT3D1","setTexture3D","setValueT6","safeSetTextureCube","setValueV1i","setValueV2i","uniform2iv","setValueV3i","uniform3iv","setValueV4i","uniform4iv","setValueV1ui","uniform1ui","setValueV1fArray","uniform1fv","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueT1Array","units","setValueT6Array","SingleUniform","activeInfo","getSingularSetter","PureArrayUniform","getPureArraySetter","StructuredUniform","seq","updateCache","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","match","matchEnd","idIsIndex","subscript","next","WebGLUniforms","getProgramParameter","getActiveUniform","getUniformLocation","WebGLShader","createShader","shaderSource","compileShader","setOptional","upload","seqWithValue","programIdCount","getEncodingComponents","getShaderErrors","status","getShaderParameter","getShaderInfoLog","trim","split","join","addLineNumbers","getShaderSource","getTexelDecodingFunction","functionName","getTexelEncodingFunction","getToneMappingFunction","toneMappingName","filterEmptyLine","replaceLightNums","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numSpotLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","include","deprecatedUnrollLoopPattern","unrollLoopPattern","unrollLoops","loopReplacer","deprecatedLoopReplacer","snippet","generatePrecision","precisionstring","WebGLProgram","cacheKey","shadowMapTypeDefine","shadowMapType","generateShadowMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapTypeDefine","envMapModeDefine","generateEnvMapModeDefine","envMapBlendingDefine","generateEnvMapBlendingDefine","gammaFactorDefine","customExtensions","extensionDerivatives","envMapCubeUV","tangentSpaceNormalMap","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","filter","generateExtensions","customDefines","chunks","generateDefines","createProgram","prefixVertex","prefixFragment","versionString","isRawShaderMaterial","shaderName","instancing","instancingColor","supportsVertexTextures","maxBones","useFog","fogExp2","objectSpaceNormalMap","vertexTangents","vertexUvs","uvsVertexOnly","useVertexTexture","doubleSided","flipSided","shadowMapEnabled","physicallyCorrectLights","mapEncoding","matcapEncoding","envMapEncoding","emissiveMapEncoding","lightMapEncoding","outputEncoding","depthPacking","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","vertexErrors","fragmentErrors","getError","diagnostics","prefix","cachedUniforms","deleteShader","getActiveAttrib","getAttribLocation","fetchAttributeLocations","destroy","deleteProgram","usedTimes","WebGLPrograms","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","parameterNames","getTextureEncodingFromMap","isWebGLRenderTarget","getParameters","shadows","environment","isMeshStandardMaterial","bones","nVertexUniforms","nVertexMatrices","getMaxBones","isFogExp2","maxMorphTargets","maxMorphNormals","directional","spot","rectArea","hemi","shadowMap","getProgramCacheKey","acquireProgram","pl","preexistingProgram","releaseProgram","pop","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","opaque","defaultProgram","getNextRenderItem","renderItem","finish","customOpaqueSort","customTransparentSort","WebGLRenderLists","lists","cameras","list","UniformsCache","light","halfWidth","halfHeight","nextVersion","shadowCastingLightsFirst","lightA","lightB","WebGLLights","shadowCache","ShadowUniformsCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","ambient","probe","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","penumbra","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","identity","WebGLRenderState","lightsArray","shadowsArray","setupLights","setupLightsView","pushLight","pushShadow","shadowLight","WebGLRenderStates","renderStates","renderCallDepth","renderState","isMeshDepthMaterial","isMeshDistanceMaterial","WebGLShadowMap","_renderer","_objects","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterials","_distanceMaterials","_materialCache","0","1","2","shadowMaterialVertical","SAMPLE_RATE","HALF_SAMPLE_RATE","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","VSMPass","mapPass","renderBufferDirect","getDepthMaterialVariant","useMorphing","useSkinning","useInstancing","getDistanceMaterialVariant","getDepthMaterial","result","getMaterialVariant","customMaterial","customDepthMaterial","customDistanceMaterial","keyA","keyB","materialsForVariant","cachedMaterial","renderObject","shadowCamera","intersectsObject","k","kl","depthMaterial","autoUpdate","activeCubeFace","getActiveCubeFace","activeMipmapLevel","getActiveMipmapLevel","_state","setBlending","setTest","setScissorTest","shadowFrameExtents","getFrameExtents","isPointLightShadow","pars","viewportCount","getViewportCount","vp","getViewport","updateMatrices","getFrustum","WebGLState","colorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","currentDepthMask","currentDepthFunc","currentDepthClear","enable","disable","depthMask","setFunc","clearDepth","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","stencilMask","setOp","stencilOp","clearStencil","enabledCapabilities","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","lineWidthAvailable","glVersion","currentTextureSlot","currentBoundTextures","currentScissor","currentViewport","createTexture","bindTexture","texParameteri","texImage2D","emptyTextures","setFlipSided","setCullFace","equationToGL","MIN_EXT","MAX_EXT","factorToGL","blendEquationSeparate","blendFuncSeparate","blendFunc","frontFace","cullFace","setPolygonOffset","factor","activeTexture","webglSlot","useProgram","setMaterial","frontFaceCW","setLineWidth","lineWidth","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","apply","texImage3D","WebGLTextures","_gl","utils","_videoTextures","useOffscreenCanvas","OffscreenCanvas","err","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","__maxMipLevel","LOG2E","getInternalFormat","internalFormatName","glFormat","glType","filterFallback","textureProperties","__webglInit","deleteTexture","__webglTexture","deallocateTexture","isVideoTexture","onRenderTargetDispose","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","deallocateRenderTarget","textureUnits","setTexture2D","slot","updateVideoTexture","__version","complete","uploadTexture","setTextureCube","initTexture","pixelStorei","isCompressed","isCompressedTexture","cubeImage","convert","glInternalFormat","setTextureParameters","mipmap","mipmapImage","uploadCubeTexture","wrappingToGL","filterToGL","textureType","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","textureNeedsPowerOfTwo","isDepthTexture","setupFrameBufferTexture","framebuffer","attachment","textureTarget","bindFramebuffer","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","samples","getRenderTargetSamples","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","setupDepthRenderbuffer","isCube","webglDepthTexture","setupDepthTexture","createRenderbuffer","isWebGLMultisampleRenderTarget","warnedTexture2D","warnedTextureCube","textureUnit","resetTextureUnits","setupRenderTarget","createFramebuffer","updateRenderTargetMipmap","updateMultisampleRenderTarget","blitFramebuffer","WebGLUtils","HALF_FLOAT_OES","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_RGB8_ETC2","COMPRESSED_RGBA8_ETC2_EAC","UNSIGNED_INT_24_8_WEBGL","ArrayCamera","Group","WebXRController","_targetRay","_grip","_hand","WebXRManager","framebufferScaleFactor","referenceSpace","referenceSpaceType","pose","controllers","inputSourcesMap","Map","cameraL","cameraR","cameraVR","_currentDepthNear","_currentDepthFar","onSessionEvent","controller","inputSource","onSessionEnd","disconnect","setFramebuffer","isPresenting","onInputSourcesChange","inputSources","removed","added","getController","getTargetRaySpace","getControllerGrip","getGripSpace","getHand","getHandSpace","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setSession","async","getContextAttributes","xrCompatible","makeXRCompatible","layerInit","antialias","baseLayer","XRWebGLLayer","updateRenderState","requestReferenceSpace","cameraLPos","cameraRPos","updateCamera","getCamera","depthNear","depthFar","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","setProjectionFromUnion","onAnimationFrameCallback","getViewerPose","views","cameraVRNeedsUpdate","transform","WebGLMaterials","refreshUniformsCommon","uvScaleMap","uv2ScaleMap","refreshUniformsStandard","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","isMeshLambertMaterial","refreshUniformsLambert","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","isMeshPhysicalMaterial","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDepth","refreshUniformsDistance","isMeshNormalMaterial","refreshUniformsNormal","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","WebGLRenderer","display","createCanvasElement","_context","_alpha","_depth","_stencil","_antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","_failIfMajorPerformanceCaveat","failIfMajorPerformanceCaveat","currentRenderState","renderStateStack","domElement","sortObjects","toneMappingExposure","_this","_isContextLost","_framebuffer","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentFramebuffer","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clippingEnabled","_localClippingEnabled","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","getTargetPixelRatio","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","isWebGL1Renderer","shift","message","initGLContext","onMaterialDispose","releaseMaterialProgramReference","deallocateMaterial","programInfo","forceContextLoss","loseContext","forceContextRestore","restoreContext","getPixelRatio","setPixelRatio","setSize","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","method","setTransparentSort","bits","renderBufferImmediate","hasPositions","hasNormals","hasUvs","hasColors","positionArray","normalArray","uvArray","colorArray","setProgram","rangeFactor","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","compile","compiled","material2","initMaterial","projectObject","isGroup","isLOD","intersectsSprite","isImmediateRenderObject","renderObjects","isArrayCamera","camera2","renderObjectImmediate","lightsStateVersion","programCacheKey","programChange","needsLights","materialNeedsLights","progUniforms","uniformsList","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","isOrthographicCamera","boneTexture","boneMatrices","boneTextureSize","window","setFromProjectionMatrix","opaqueObjects","transparentObjects","readRenderTargetPixels","activeCubeFaceIndex","restore","textureFormat","halfFloatSupportedByExt","checkFramebufferStatus","readPixels","copyFramebufferToTexture","level","levelScale","copyTexImage2D","copyTextureToTexture","srcTexture","dstTexture","texSubImage2D","compressedTexSubImage2D","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","WebGL1Renderer","joints","inputState","pinching","inputPose","gripPose","handPose","targetRay","grip","hand","visibilityState","inputjoint","jointPose","getJointPose","jointName","joint","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","getPose","targetRaySpace","gripSpace","Scene","InterleavedBuffer","isInterleavedBuffer","arrayBuffers","_uuid","ib","_vector$6","InterleavedBufferAttribute","interleavedBuffer","_geometry","interleavedBuffers","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA$1","_vB$1","_vC$1","_uvA$1","_uvB$1","_uvC$1","Sprite","transformVertex","vertexPosition","mvPosition","setFromMatrixScale","_v1$4","_v2$2","LOD","_currentLevel","levels","addLevel","getCurrentLevel","getObjectForDistance","_basePosition","_skinIndex","_skinWeight","_vector$7","_matrix$1","SkinnedMesh","bindMatrixInverse","Bone","calculateInverses","normalizeSkinWeights","skinWeight","manhattanLength","skinIndex","weight","getComponent","boneIndex","boneInverses","isBone","_offsetMatrix","_identityMatrix","Skeleton","inverse","bone","getBoneByName","fromJSON","json","boneInverse","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_mesh","InstancedMesh","linecap","linejoin","getColorAt","getMatrixAt","raycastTimes","instanceId","setColorAt","setMatrixAt","_start","_end","_inverseMatrix$1","_ray$1","_sphere$2","Line","computeLineDistances","lineDistances","params","localThreshold","localThresholdSq","vStart","vEnd","interSegment","interRay","distanceSqToSegment","_start$1","_end$1","LineSegments","LineLoop","_inverseMatrix$2","_ray$2","_sphere$3","_position$1","Points","testPoint","rayPointDistanceSq","intersectPoint","closestPointToPoint","distanceToRay","VideoTexture","video","requestVideoFrameCallback","updateVideo","CompressedTexture","CanvasTexture","DepthTexture","readyState","HAVE_CURRENT_DATA","isCanvasTexture","Earcut","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","prev","invSize","queue","steiner","getLeftmost","compareX","eliminateHole","filterPoints","eliminateHoles","earcutLinked","clockwise","last","sum","signedArea","insertNode","removeNode","again","ear","pass","zOrder","prevZ","nextZ","tail","numMerges","pSize","qSize","inSize","sortLinked","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","locallyInside","isValidDiagonal","splitPolygon","hole","hx","hy","mx","my","tanMin","sectorContainsSector","findHoleBridge","leftmost","px","py","intersectsPolygon","inside","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","Node","an","bp","ShapeUtils","area","contour","isClockWise","pts","triangulateShape","holes","faces","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","verticesArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","amount","extrudePts","splineTube","binormal","position2","extrudeByPath","getSpacedPoints","computeFrenetFrames","shapePoints","extractPoints","reverse","hl","ahole","concat","scalePt2","pt","vec","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","binormals","sidewalls","layeroffset","sl","slen1","slen2","f4","f3","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","layer","buildLidFaces","buildSideFaces","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","ParametricGeometry","func","slices","stacks","EPS","pu","pv","sliceCount","ShapeGeometry","indexOffset","shapeVertices","shapeHoles","shapeHole","vertex","toJSON$1","RawShaderMaterial","ior","Materials","freeze","__proto__","AnimationUtils","arraySlice","from","to","isTypedArray","convertArray","forceClone","ArrayBuffer","isView","DataView","getKeyframeOrder","times","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetOffset","targetValueSize","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","numTimes","valueStart","multiplyQuaternionsFlat","valueEnd","blendMode","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","LinearInterpolant","DiscreteInterpolant","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","BooleanKeyframeTrack","ColorKeyframeTrack","NumberKeyframeTrack","QuaternionLinearInterpolant","QuaternionKeyframeTrack","StringKeyframeTrack","VectorKeyframeTrack","AnimationClip","duration","parseKeyframeTrack","trackType","typeName","toLowerCase","getTrackTypeForValueTypeName","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","settings","DefaultSettings_","getSettings_","copySampleValue_","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","offset1","offset0","weight1","weight0","getInterpolation","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","slerpFlat","jsonTracks","frameTime","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","morphTarget","parts","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","global","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","load","loadAsync","Promise","resolve","reject","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","loading","FileLoader","AnimationLoader","CompressedTextureLoader","ImageLoader","CubeTextureLoader","DataTextureLoader","TextureLoader","Curve","arcLengthDivisions","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","ArcCurve","aRadius","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","t2","calc","setTimeout","dataUriRegexResult","request","mimeType","isBase64","decodeURIComponent","atob","response","responseType","charCodeAt","Blob","parser","DOMParser","parseFromString","XMLHttpRequest","open","callbacks","overrideMimeType","header","send","setResponseType","setMimeType","text","loaded","loadTexture","texDatas","mipmapCount","isCubemap","onImageLoad","onImageError","substr","urls","texData","isJPEG","search","getPoint","getPointAt","optionalTarget","getUtoTmapping","getPoints","divisions","getLength","lengths","getLengths","cacheArcLengths","current","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","getTangent","pt1","pt2","getTangentAt","segments","closed","mat","MAX_VALUE","tz","makeRotationAxis","isEllipseCurve","twoPi","deltaAngle","samePoints","isArcCurve","pz","CatmullRomCurve3","curveType","CatmullRom","QuadraticBezier","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","CubicBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezierCurve","v3","CubicBezierCurve3","LineCurve","LineCurve3","QuadraticBezierCurve","QuadraticBezierCurve3","SplineCurve","isCatmullRomCurve3","intPoint","isCubicBezierCurve","isCubicBezierCurve3","isLineCurve","isLineCurve3","isQuadraticBezierCurve","isQuadraticBezierCurve3","isSplineCurve","Curves","CurvePath","curves","autoClose","Path","currentPoint","Shape","Light","HemisphereLight","LightShadow","_frameExtents","_viewportCount","_viewports","SpotLightShadow","SpotLight","power","PointLightShadow","_cubeDirections","_cubeUps","PointLight","OrthographicCamera","DirectionalLightShadow","DirectionalLight","AmbientLight","RectAreaLight","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","diff","segmentLength","lens","cacheLengths","sums","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","absarc","absellipse","ellipse","firstPoint","lastPoint","getPointsHoles","holesPts","_lightPositionWorld","_lookTarget","shadowMatrix","projScreenMatrix","lookTarget","lightPositionWorld","viewportIndex","isSpotLightShadow","scaleW","scaleH","makeOrthographic","isDirectionalLightShadow","SphericalHarmonics3","coeff","shBasis","LightProbe","MaterialLoader","getTexture","shading","setTextures","LoaderUtils","lastIndexOf","InstancedBufferGeometry","InstancedBufferAttribute","BufferGeometryLoader","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","arrayBuffer","getArrayBuffer","typedArray","bufferAttribute","drawcalls","offsets","ImageBitmapLoader","createImageBitmap","fetch","ShapePath","subPaths","currentPath","isImageBitmapLoader","setOptions","fetchOptions","credentials","then","res","blob","imageBitmap","catch","toShapes","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","tmpPoints","tmpHoles","newShapeHoles","mainIdx","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","froms","tos","Font","paths","chars","line_height","yMax","yMin","underlineThickness","char","ret","createPath","createPaths","glyph","glyphs","familyName","cpx","cpy","cpx1","cpy1","cpx2","cpy2","outline","_cachedOutline","ha","FontLoader","substring","font","AudioContext","webkitAudioContext","AudioLoader","HemisphereLightProbe","sky","ground","AmbientLightProbe","bufferCopy","decodeAudioData","audioBuffer","isHemisphereLightProbe","isAmbientLightProbe","_eyeRight","_eyeLeft","eyeSep","_cache","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","gain","createGain","connect","getInput","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","audioNode","mediaElement","createMediaElementSource","mediaStream","createMediaStreamSource","delay","currentTime","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","getOutput","setTargetAtTime","getFilters","setFilters","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","accumulateAdditive","weightAdditive","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","targetIndex","workOffset","_reservedRe","RegExp","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","rootNode","node","findNode","nodeName","firstValidIndex","nCachedObjects_","bindings","unbind","root","isAnimationObjectGroup","sanitizeNodeName","matches","results","objectName","objectIndex","propertyIndex","lastDot","searchNodeSubtree","childNode","subTreeNode","_getValue_unavailable","_setValue_unavailable","BindingType","Direct","EntireArray","ArrayElement","HasFromToArray","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","GetterByBindingType","resolvedProperty","SetterByBindingTypeAndVersioning","targetObject","dest","targetArray","sourceArray","nodeProperty","versioning","bindingType","_getValue_unbound","_setValue_unbound","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","total","indicesByUUID","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","_isActiveAction","_scheduleFading","fadeOutAction","warp","fadeOut","fadeIn","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","fadeInAction","crossFadeFrom","weightInterpolant","_takeBackControlInterpolant","action","startTimeScale","endTimeScale","now","_lendControlInterpolant","timeScaleInterpolant","_root","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","AnimationMixer","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","_update","setTime","timeInSeconds","getRoot","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","Uniform","InstancedInterleavedBuffer","GLBufferAttribute","Raycaster","PointCloud","ascSort","intersectObject","setBuffer","setType","setItemSize","setCount","setFromCamera","coords","unproject","intersectObjects","_vector$8","_startP","_startEnd","ImmediateRenderObject","_vector$a","_boneMatrix","_matrixWorldInv","_floatView","EXTRA_LOD_SIGMA","TOTAL_LODS","LOD_MAX","backgroundMaterial","_lodPlanes","_sizeLods","_sigmas","_createPlanes","lod","sizeLod","sigma","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","Spline","construct","fromPoints","initFromArray","getControlPointsArray","reparametrizeByArcLength","setColors","getBoneList","boneList","isSkeletonHelper","extractUrlBase","Handlers","empty","isIntersectionBox","isIntersectionSphere","setFromMatrix","clampToLine","startEnd2","closestPointToPointParameter","random16","nearestPowerOfTwo","nextPowerOfTwo","flattenToArrayOffset","multiplyVector3","multiplyVector3Array","applyToBufferAttribute","applyToVector3Array","getInverse","extractPosition","getPosition","multiplyToArray","multiplyVector4","rotateAxis","crossVector","rotateByAxis","makeFrustum","isIntersectionLine","intersectsLine","isIntersectionPlane","getArea","barycoordFromPoint","midpoint","getMidpoint","getPlane","extractAllPoints","extrude","makeGeometry","fromAttribute","distanceToManhattan","manhattanDistanceTo","lengthManhattan","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","applyProjection","getChildByName","renderDepth","getWorldRotation","applyMatrix","eulerOrder","useQuaternion","setDrawMode","drawMode","initBones","setLens","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","dynamic","setDynamic","copyIndicesArray","setArray","addIndex","addAttribute","addDrawCall","clearDrawCalls","computeOffsets","removeAttribute","maxInstancedCount","linePrecision","getArrays","addShapeList","wrapAround","overdraw","wrapRGB","metal","transparency","clearTarget","animate","getCurrentRenderTarget","getPrecision","resetGLState","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","addPrePlugin","addPostPlugin","updateShadowMap","setFaceCulling","allocTextureUnit","setTexture","getActiveMipMapLevel","shadowMapCullFace","vr","gammaInput","gammaOutput","toneMappingWhitePoint","renderReverseSided","renderSingleSided","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getByteFrequencyData","getFrequencyData","getData","updateCubeMap","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","revision","__THREE__","field","totalTime","startGame","restartGame","restart","tick","endGame","classList","querySelector","alert","pause","modal","modalButton","closeButton"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","class Bubble {\r\n    constructor() {\r\n        this.canvas = document.getElementById('gameScreen')\r\n        this.ctx = this.canvas.getContext('2d')\r\n        this.width = this.canvas.offsetWidth;\r\n        this.height = this.canvas.offsetHeight;\r\n        this.dx = 2;\r\n        this.dy = -2;\r\n        this.radius = 25;\r\n        this.left = Math.floor(Math.random() * ((this.width - 200) - 204) + 204)\r\n        this.top = Math.floor(Math.random() * ((this.height - 300) - 200) + 200)\r\n        this.clickHandler = this.clickHandler.bind(this);\r\n        this.onMouseMove = this.onMouseMove.bind(this);\r\n        this.emptyArray = this.emptyArray.bind(this);\r\n        this.animatePop = this.animatePop.bind(this);\r\n        this.clearScore = this.clearScore.bind(this);\r\n        this.generateRandomPosition = this.generateRandomPosition.bind(this);\r\n        this.bubbles = [];\r\n        this.speed = 5;\r\n        this.canvas.requestPointerLock= this.canvas.requestPointerLock || this.canvas.mozRequestPointerLock;\r\n        document.exitPointerLock = document.exitPointerLock || document.mozExitPointerLock;\r\n        document.addEventListener('mousedown', this.clickHandler, false); \r\n        this.canvas.addEventListener('mousemove', this.onMouseMove, false);\r\n        this.scoreHigh = document.getElementById('highScore');\r\n        this.score = document.getElementById('score');\r\n        this.totalScore = 0;\r\n        this.highScore = 0;\r\n        this.saveHighScore = 'highscore';\r\n    }\r\n\r\n    drawRandomCircle(circlePos){\r\n        this.ctx.clearRect(0,0, 1700, 700);\r\n        this.ctx.fillStyle='#33ccff';\r\n        this.ctx.beginPath();\r\n        this.ctx.arc(circlePos.left, circlePos.top, 25, 0, 2 * Math.PI);\r\n        this.ctx.fill();\r\n        this.bubbles.push({\r\n            width: 50,\r\n            height: 50,\r\n            top: circlePos.top,\r\n            left: circlePos.left,\r\n        })\r\n    }\r\n    \r\n    animatePop(circlePos) {\r\n        this.canvas.requestAnimationFrame(this.animatePop(circlePos))\r\n        this.ctx.clearRect(0, 0, 1700, 700);\r\n        this.ctx.fillStyle='#33ccff';\r\n        this.ctx.beginPath();\r\n        this.ctx.arc(circlePos.left, circlePos.top, this.radius, 0, 2 * Math.PI);\r\n        this.ctx.fill();\r\n        this.radius -= 2\r\n        if (radius === 0) {\r\n            this.canvas.cancelAnimationFrame()\r\n            this.radius = 25;\r\n            let newPos = this.generateRandomPosition()\r\n            this.drawRandomCircle(newPos);\r\n        }\r\n    }\r\n\r\n    updateScore() {\r\n        this.score.innerText = `Score: ${this.totalScore}`\r\n    } \r\n\r\n    onMouseMove(e) {\r\n        let circlePos = ({left: 0, top: 0})\r\n        let mouseX = (e.movementX )\r\n        let mouseY = (e.movementY )\r\n        console.log(mouseX, mouseY)\r\n        if (mouseX < 0) {\r\n            let bubble = this.bubbles[this.bubbles.length - 1];\r\n            let bubbleX = bubble.left;\r\n            let newBubbleX = bubbleX + this.speed\r\n            if (newBubbleX < 0 || newBubbleX > this.width) {\r\n                newbubbleX = this.width - bubble.left;\r\n            }\r\n            circlePos.left = newBubbleX; \r\n            console.log(newBubbleX);\r\n        } else if (mouseX > 0) {\r\n            let bubble = this.bubbles[this.bubbles.length - 1];\r\n            let bubbleX = bubble.left;\r\n            let newBubbleX = bubbleX - this.speed;\r\n            if (newBubbleX < 0 || newBubbleX > this.width) {\r\n                newbubbleX = this.width - bubble.left;\r\n            }\r\n            console.log(newBubbleX)\r\n            circlePos.left = newBubbleX\r\n        } else {\r\n            let bubble = this.bubbles[this.bubbles.length - 1];\r\n            circlePos.left = bubble.left;\r\n        }\r\n        if (mouseY < 0) {\r\n            let bubble = this.bubbles[this.bubbles.length - 1];\r\n            let bubbleY = bubble.top; \r\n            let newBubbleY = bubbleY + this.speed \r\n            if (newBubbleY < 0 || newBubbleY > this.height) {\r\n                newbubbleY = this.height - bubble.top;\r\n            }\r\n            circlePos.top = newBubbleY;\r\n            console.log(newBubbleY)\r\n        } else if (mouseY > 0) {\r\n            let bubble = this.bubbles[this.bubbles.length - 1];\r\n            let bubbleY = bubble.top; \r\n            let newBubbleY = bubbleY - this.speed\r\n            if (newBubbleY < 0 || newBubbleY > this.height) {\r\n                newbubbleY = this.height - bubble.top;\r\n            }\r\n            circlePos.top = newBubbleY;\r\n            console.log(newBubbleY)\r\n        } else {\r\n            let bubble = this.bubbles[this.bubbles.length - 1];\r\n            circlePos.top = bubble.top;\r\n        }\r\n        console.log(circlePos);\r\n        this.drawRandomCircle(circlePos)\r\n    }\r\n\r\n    emptyArray() {\r\n        this.bubbles.splice(0, this.bubbles.length);\r\n    }\r\n\r\n    clearScore() {\r\n        this.totalScore = 0;\r\n        this.updateScore();\r\n        this.scoreHigh.innerText = `High Score: ${this.highScore}`\r\n        let scoreStr = localStorage.getItem(this.saveHighScore);\r\n        if (scoreStr === null) {\r\n            this.saveHighScore = 0;\r\n        } else {\r\n            this.highScore = parseInt(scoreStr);\r\n        }\r\n    }\r\n\r\n    generateRandomPosition(){\r\n        let circlePos = ({left: 0, top: 0});\r\n        circlePos.left = Math.floor(Math.random() * ((this.width - 200) - 204) + 204)\r\n        circlePos.top = Math.floor(Math.random() * ((this.height - 300) - 200) + 200)\r\n        return circlePos\r\n    }\r\n\r\n    clickHandler(e) {\r\n        e.preventDefault();\r\n        let x = 890;\r\n        let y = 400;\r\n        this.bubbles.forEach(ele => {\r\n            if ( y > ele.top && y < ele.top + ele.height && x > ele.left && x < ele.left + ele.width ) {\r\n                // this.animatePop(ele);\r\n                this.totalScore += 1;\r\n                this.updateScore();\r\n                // const gunshot = new Audio('../styles/pistolshot.mp3');\r\n                // gunshot.play();\r\n                this.emptyArray();\r\n                let newPos = this.generateRandomPosition();\r\n                this.drawRandomCircle(newPos)\r\n                let gunshot = new Audio('gunshot.mp3');\r\n                gunshot.volume = 0.2;\r\n                gunshot.play();\r\n                if (this.totalScore > this.highScore) {\r\n                    this.highScore = this.totalScore;\r\n                    localStorage.setItem(this.saveHighScore, this.highScore);\r\n                    this.scoreHigh.innerText = `High Score: ${this.highScore}`;\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport default Bubble;\r\n\r\n\r\n","// threejs.org/license\nconst REVISION='125';const MOUSE={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2};const TOUCH={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3};const CullFaceNone=0;const CullFaceBack=1;const CullFaceFront=2;const CullFaceFrontBack=3;const BasicShadowMap=0;const PCFShadowMap=1;const PCFSoftShadowMap=2;const VSMShadowMap=3;const FrontSide=0;const BackSide=1;const DoubleSide=2;const FlatShading=1;const SmoothShading=2;const NoBlending=0;const NormalBlending=1;const AdditiveBlending=2;const SubtractiveBlending=3;const MultiplyBlending=4;const CustomBlending=5;const AddEquation=100;const SubtractEquation=101;const ReverseSubtractEquation=102;const MinEquation=103;const MaxEquation=104;const ZeroFactor=200;const OneFactor=201;const SrcColorFactor=202;const OneMinusSrcColorFactor=203;const SrcAlphaFactor=204;const OneMinusSrcAlphaFactor=205;const DstAlphaFactor=206;const OneMinusDstAlphaFactor=207;const DstColorFactor=208;const OneMinusDstColorFactor=209;const SrcAlphaSaturateFactor=210;const NeverDepth=0;const AlwaysDepth=1;const LessDepth=2;const LessEqualDepth=3;const EqualDepth=4;const GreaterEqualDepth=5;const GreaterDepth=6;const NotEqualDepth=7;const MultiplyOperation=0;const MixOperation=1;const AddOperation=2;const NoToneMapping=0;const LinearToneMapping=1;const ReinhardToneMapping=2;const CineonToneMapping=3;const ACESFilmicToneMapping=4;const CustomToneMapping=5;const UVMapping=300;const CubeReflectionMapping=301;const CubeRefractionMapping=302;const EquirectangularReflectionMapping=303;const EquirectangularRefractionMapping=304;const CubeUVReflectionMapping=306;const CubeUVRefractionMapping=307;const RepeatWrapping=1000;const ClampToEdgeWrapping=1001;const MirroredRepeatWrapping=1002;const NearestFilter=1003;const NearestMipmapNearestFilter=1004;const NearestMipMapNearestFilter=1004;const NearestMipmapLinearFilter=1005;const NearestMipMapLinearFilter=1005;const LinearFilter=1006;const LinearMipmapNearestFilter=1007;const LinearMipMapNearestFilter=1007;const LinearMipmapLinearFilter=1008;const LinearMipMapLinearFilter=1008;const UnsignedByteType=1009;const ByteType=1010;const ShortType=1011;const UnsignedShortType=1012;const IntType=1013;const UnsignedIntType=1014;const FloatType=1015;const HalfFloatType=1016;const UnsignedShort4444Type=1017;const UnsignedShort5551Type=1018;const UnsignedShort565Type=1019;const UnsignedInt248Type=1020;const AlphaFormat=1021;const RGBFormat=1022;const RGBAFormat=1023;const LuminanceFormat=1024;const LuminanceAlphaFormat=1025;const RGBEFormat=RGBAFormat;const DepthFormat=1026;const DepthStencilFormat=1027;const RedFormat=1028;const RedIntegerFormat=1029;const RGFormat=1030;const RGIntegerFormat=1031;const RGBIntegerFormat=1032;const RGBAIntegerFormat=1033;const RGB_S3TC_DXT1_Format=33776;const RGBA_S3TC_DXT1_Format=33777;const RGBA_S3TC_DXT3_Format=33778;const RGBA_S3TC_DXT5_Format=33779;const RGB_PVRTC_4BPPV1_Format=35840;const RGB_PVRTC_2BPPV1_Format=35841;const RGBA_PVRTC_4BPPV1_Format=35842;const RGBA_PVRTC_2BPPV1_Format=35843;const RGB_ETC1_Format=36196;const RGB_ETC2_Format=37492;const RGBA_ETC2_EAC_Format=37496;const RGBA_ASTC_4x4_Format=37808;const RGBA_ASTC_5x4_Format=37809;const RGBA_ASTC_5x5_Format=37810;const RGBA_ASTC_6x5_Format=37811;const RGBA_ASTC_6x6_Format=37812;const RGBA_ASTC_8x5_Format=37813;const RGBA_ASTC_8x6_Format=37814;const RGBA_ASTC_8x8_Format=37815;const RGBA_ASTC_10x5_Format=37816;const RGBA_ASTC_10x6_Format=37817;const RGBA_ASTC_10x8_Format=37818;const RGBA_ASTC_10x10_Format=37819;const RGBA_ASTC_12x10_Format=37820;const RGBA_ASTC_12x12_Format=37821;const RGBA_BPTC_Format=36492;const SRGB8_ALPHA8_ASTC_4x4_Format=37840;const SRGB8_ALPHA8_ASTC_5x4_Format=37841;const SRGB8_ALPHA8_ASTC_5x5_Format=37842;const SRGB8_ALPHA8_ASTC_6x5_Format=37843;const SRGB8_ALPHA8_ASTC_6x6_Format=37844;const SRGB8_ALPHA8_ASTC_8x5_Format=37845;const SRGB8_ALPHA8_ASTC_8x6_Format=37846;const SRGB8_ALPHA8_ASTC_8x8_Format=37847;const SRGB8_ALPHA8_ASTC_10x5_Format=37848;const SRGB8_ALPHA8_ASTC_10x6_Format=37849;const SRGB8_ALPHA8_ASTC_10x8_Format=37850;const SRGB8_ALPHA8_ASTC_10x10_Format=37851;const SRGB8_ALPHA8_ASTC_12x10_Format=37852;const SRGB8_ALPHA8_ASTC_12x12_Format=37853;const LoopOnce=2200;const LoopRepeat=2201;const LoopPingPong=2202;const InterpolateDiscrete=2300;const InterpolateLinear=2301;const InterpolateSmooth=2302;const ZeroCurvatureEnding=2400;const ZeroSlopeEnding=2401;const WrapAroundEnding=2402;const NormalAnimationBlendMode=2500;const AdditiveAnimationBlendMode=2501;const TrianglesDrawMode=0;const TriangleStripDrawMode=1;const TriangleFanDrawMode=2;const LinearEncoding=3000;const sRGBEncoding=3001;const GammaEncoding=3007;const RGBEEncoding=3002;const LogLuvEncoding=3003;const RGBM7Encoding=3004;const RGBM16Encoding=3005;const RGBDEncoding=3006;const BasicDepthPacking=3200;const RGBADepthPacking=3201;const TangentSpaceNormalMap=0;const ObjectSpaceNormalMap=1;const ZeroStencilOp=0;const KeepStencilOp=7680;const ReplaceStencilOp=7681;const IncrementStencilOp=7682;const DecrementStencilOp=7683;const IncrementWrapStencilOp=34055;const DecrementWrapStencilOp=34056;const InvertStencilOp=5386;const NeverStencilFunc=512;const LessStencilFunc=513;const EqualStencilFunc=514;const LessEqualStencilFunc=515;const GreaterStencilFunc=516;const NotEqualStencilFunc=517;const GreaterEqualStencilFunc=518;const AlwaysStencilFunc=519;const StaticDrawUsage=35044;const DynamicDrawUsage=35048;const StreamDrawUsage=35040;const StaticReadUsage=35045;const DynamicReadUsage=35049;const StreamReadUsage=35041;const StaticCopyUsage=35046;const DynamicCopyUsage=35050;const StreamCopyUsage=35042;const GLSL1='100';const GLSL3='300 es';/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */function EventDispatcher(){}Object.assign(EventDispatcher.prototype,{addEventListener:function(type,listener){if(this._listeners===undefined)this._listeners={};const listeners=this._listeners;if(listeners[type]===undefined){listeners[type]=[];}if(listeners[type].indexOf(listener)===-1){listeners[type].push(listener);}},hasEventListener:function(type,listener){if(this._listeners===undefined)return false;const listeners=this._listeners;return listeners[type]!==undefined&&listeners[type].indexOf(listener)!==-1;},removeEventListener:function(type,listener){if(this._listeners===undefined)return;const listeners=this._listeners;const listenerArray=listeners[type];if(listenerArray!==undefined){const index=listenerArray.indexOf(listener);if(index!==-1){listenerArray.splice(index,1);}}},dispatchEvent:function(event){if(this._listeners===undefined)return;const listeners=this._listeners;const listenerArray=listeners[event.type];if(listenerArray!==undefined){event.target=this;// Make a copy, in case listeners are removed while iterating.\nconst array=listenerArray.slice(0);for(let i=0,l=array.length;i<l;i++){array[i].call(this,event);}}}});const _lut=[];for(let i=0;i<256;i++){_lut[i]=(i<16?'0':'')+i.toString(16);}let _seed=1234567;const MathUtils={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nconst d0=Math.random()*0xffffffff|0;const d1=Math.random()*0xffffffff|0;const d2=Math.random()*0xffffffff|0;const d3=Math.random()*0xffffffff|0;const uuid=_lut[d0&0xff]+_lut[d0>>8&0xff]+_lut[d0>>16&0xff]+_lut[d0>>24&0xff]+'-'+_lut[d1&0xff]+_lut[d1>>8&0xff]+'-'+_lut[d1>>16&0x0f|0x40]+_lut[d1>>24&0xff]+'-'+_lut[d2&0x3f|0x80]+_lut[d2>>8&0xff]+'-'+_lut[d2>>16&0xff]+_lut[d2>>24&0xff]+_lut[d3&0xff]+_lut[d3>>8&0xff]+_lut[d3>>16&0xff]+_lut[d3>>24&0xff];// .toUpperCase() here flattens concatenated strings to save heap memory space.\nreturn uuid.toUpperCase();},clamp:function(value,min,max){return Math.max(min,Math.min(max,value));},// compute euclidian modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\neuclideanModulo:function(n,m){return(n%m+m)%m;},// Linear mapping from range <a1, a2> to range <b1, b2>\nmapLinear:function(x,a1,a2,b1,b2){return b1+(x-a1)*(b2-b1)/(a2-a1);},// https://en.wikipedia.org/wiki/Linear_interpolation\nlerp:function(x,y,t){return(1-t)*x+t*y;},// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\ndamp:function(x,y,lambda,dt){return MathUtils.lerp(x,y,1-Math.exp(-lambda*dt));},// https://www.desmos.com/calculator/vcsjnyz7x4\npingpong:function(x,length=1){return length-Math.abs(MathUtils.euclideanModulo(x,length*2)-length);},// http://en.wikipedia.org/wiki/Smoothstep\nsmoothstep:function(x,min,max){if(x<=min)return 0;if(x>=max)return 1;x=(x-min)/(max-min);return x*x*(3-2*x);},smootherstep:function(x,min,max){if(x<=min)return 0;if(x>=max)return 1;x=(x-min)/(max-min);return x*x*x*(x*(x*6-15)+10);},// Random integer from <low, high> interval\nrandInt:function(low,high){return low+Math.floor(Math.random()*(high-low+1));},// Random float from <low, high> interval\nrandFloat:function(low,high){return low+Math.random()*(high-low);},// Random float from <-range/2, range/2> interval\nrandFloatSpread:function(range){return range*(0.5-Math.random());},// Deterministic pseudo-random float in the interval [ 0, 1 ]\nseededRandom:function(s){if(s!==undefined)_seed=s%2147483647;// Park-Miller algorithm\n_seed=_seed*16807%2147483647;return(_seed-1)/2147483646;},degToRad:function(degrees){return degrees*MathUtils.DEG2RAD;},radToDeg:function(radians){return radians*MathUtils.RAD2DEG;},isPowerOfTwo:function(value){return(value&value-1)===0&&value!==0;},ceilPowerOfTwo:function(value){return Math.pow(2,Math.ceil(Math.log(value)/Math.LN2));},floorPowerOfTwo:function(value){return Math.pow(2,Math.floor(Math.log(value)/Math.LN2));},setQuaternionFromProperEuler:function(q,a,b,c,order){// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n// rotations are applied to the axes in the order specified by 'order'\n// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n// angles are in radians\nconst cos=Math.cos;const sin=Math.sin;const c2=cos(b/2);const s2=sin(b/2);const c13=cos((a+c)/2);const s13=sin((a+c)/2);const c1_3=cos((a-c)/2);const s1_3=sin((a-c)/2);const c3_1=cos((c-a)/2);const s3_1=sin((c-a)/2);switch(order){case'XYX':q.set(c2*s13,s2*c1_3,s2*s1_3,c2*c13);break;case'YZY':q.set(s2*s1_3,c2*s13,s2*c1_3,c2*c13);break;case'ZXZ':q.set(s2*c1_3,s2*s1_3,c2*s13,c2*c13);break;case'XZX':q.set(c2*s13,s2*s3_1,s2*c3_1,c2*c13);break;case'YXY':q.set(s2*c3_1,c2*s13,s2*s3_1,c2*c13);break;case'ZYZ':q.set(s2*s3_1,s2*c3_1,c2*s13,c2*c13);break;default:console.warn('THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: '+order);}}};class Vector2{constructor(x=0,y=0){Object.defineProperty(this,'isVector2',{value:true});this.x=x;this.y=y;}get width(){return this.x;}set width(value){this.x=value;}get height(){return this.y;}set height(value){this.y=value;}set(x,y){this.x=x;this.y=y;return this;}setScalar(scalar){this.x=scalar;this.y=scalar;return this;}setX(x){this.x=x;return this;}setY(y){this.y=y;return this;}setComponent(index,value){switch(index){case 0:this.x=value;break;case 1:this.y=value;break;default:throw new Error('index is out of range: '+index);}return this;}getComponent(index){switch(index){case 0:return this.x;case 1:return this.y;default:throw new Error('index is out of range: '+index);}}clone(){return new this.constructor(this.x,this.y);}copy(v){this.x=v.x;this.y=v.y;return this;}add(v,w){if(w!==undefined){console.warn('THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');return this.addVectors(v,w);}this.x+=v.x;this.y+=v.y;return this;}addScalar(s){this.x+=s;this.y+=s;return this;}addVectors(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this;}addScaledVector(v,s){this.x+=v.x*s;this.y+=v.y*s;return this;}sub(v,w){if(w!==undefined){console.warn('THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');return this.subVectors(v,w);}this.x-=v.x;this.y-=v.y;return this;}subScalar(s){this.x-=s;this.y-=s;return this;}subVectors(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this;}multiply(v){this.x*=v.x;this.y*=v.y;return this;}multiplyScalar(scalar){this.x*=scalar;this.y*=scalar;return this;}divide(v){this.x/=v.x;this.y/=v.y;return this;}divideScalar(scalar){return this.multiplyScalar(1/scalar);}applyMatrix3(m){const x=this.x,y=this.y;const e=m.elements;this.x=e[0]*x+e[3]*y+e[6];this.y=e[1]*x+e[4]*y+e[7];return this;}min(v){this.x=Math.min(this.x,v.x);this.y=Math.min(this.y,v.y);return this;}max(v){this.x=Math.max(this.x,v.x);this.y=Math.max(this.y,v.y);return this;}clamp(min,max){// assumes min < max, componentwise\nthis.x=Math.max(min.x,Math.min(max.x,this.x));this.y=Math.max(min.y,Math.min(max.y,this.y));return this;}clampScalar(minVal,maxVal){this.x=Math.max(minVal,Math.min(maxVal,this.x));this.y=Math.max(minVal,Math.min(maxVal,this.y));return this;}clampLength(min,max){const length=this.length();return this.divideScalar(length||1).multiplyScalar(Math.max(min,Math.min(max,length)));}floor(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);return this;}ceil(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);return this;}round(){this.x=Math.round(this.x);this.y=Math.round(this.y);return this;}roundToZero(){this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x);this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y);return this;}negate(){this.x=-this.x;this.y=-this.y;return this;}dot(v){return this.x*v.x+this.y*v.y;}cross(v){return this.x*v.y-this.y*v.x;}lengthSq(){return this.x*this.x+this.y*this.y;}length(){return Math.sqrt(this.x*this.x+this.y*this.y);}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y);}normalize(){return this.divideScalar(this.length()||1);}angle(){// computes the angle in radians with respect to the positive x-axis\nconst angle=Math.atan2(-this.y,-this.x)+Math.PI;return angle;}distanceTo(v){return Math.sqrt(this.distanceToSquared(v));}distanceToSquared(v){const dx=this.x-v.x,dy=this.y-v.y;return dx*dx+dy*dy;}manhattanDistanceTo(v){return Math.abs(this.x-v.x)+Math.abs(this.y-v.y);}setLength(length){return this.normalize().multiplyScalar(length);}lerp(v,alpha){this.x+=(v.x-this.x)*alpha;this.y+=(v.y-this.y)*alpha;return this;}lerpVectors(v1,v2,alpha){this.x=v1.x+(v2.x-v1.x)*alpha;this.y=v1.y+(v2.y-v1.y)*alpha;return this;}equals(v){return v.x===this.x&&v.y===this.y;}fromArray(array,offset=0){this.x=array[offset];this.y=array[offset+1];return this;}toArray(array=[],offset=0){array[offset]=this.x;array[offset+1]=this.y;return array;}fromBufferAttribute(attribute,index,offset){if(offset!==undefined){console.warn('THREE.Vector2: offset has been removed from .fromBufferAttribute().');}this.x=attribute.getX(index);this.y=attribute.getY(index);return this;}rotateAround(center,angle){const c=Math.cos(angle),s=Math.sin(angle);const x=this.x-center.x;const y=this.y-center.y;this.x=x*c-y*s+center.x;this.y=x*s+y*c+center.y;return this;}random(){this.x=Math.random();this.y=Math.random();return this;}}class Matrix3{constructor(){Object.defineProperty(this,'isMatrix3',{value:true});this.elements=[1,0,0,0,1,0,0,0,1];if(arguments.length>0){console.error('THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.');}}set(n11,n12,n13,n21,n22,n23,n31,n32,n33){const te=this.elements;te[0]=n11;te[1]=n21;te[2]=n31;te[3]=n12;te[4]=n22;te[5]=n32;te[6]=n13;te[7]=n23;te[8]=n33;return this;}identity(){this.set(1,0,0,0,1,0,0,0,1);return this;}clone(){return new this.constructor().fromArray(this.elements);}copy(m){const te=this.elements;const me=m.elements;te[0]=me[0];te[1]=me[1];te[2]=me[2];te[3]=me[3];te[4]=me[4];te[5]=me[5];te[6]=me[6];te[7]=me[7];te[8]=me[8];return this;}extractBasis(xAxis,yAxis,zAxis){xAxis.setFromMatrix3Column(this,0);yAxis.setFromMatrix3Column(this,1);zAxis.setFromMatrix3Column(this,2);return this;}setFromMatrix4(m){const me=m.elements;this.set(me[0],me[4],me[8],me[1],me[5],me[9],me[2],me[6],me[10]);return this;}multiply(m){return this.multiplyMatrices(this,m);}premultiply(m){return this.multiplyMatrices(m,this);}multiplyMatrices(a,b){const ae=a.elements;const be=b.elements;const te=this.elements;const a11=ae[0],a12=ae[3],a13=ae[6];const a21=ae[1],a22=ae[4],a23=ae[7];const a31=ae[2],a32=ae[5],a33=ae[8];const b11=be[0],b12=be[3],b13=be[6];const b21=be[1],b22=be[4],b23=be[7];const b31=be[2],b32=be[5],b33=be[8];te[0]=a11*b11+a12*b21+a13*b31;te[3]=a11*b12+a12*b22+a13*b32;te[6]=a11*b13+a12*b23+a13*b33;te[1]=a21*b11+a22*b21+a23*b31;te[4]=a21*b12+a22*b22+a23*b32;te[7]=a21*b13+a22*b23+a23*b33;te[2]=a31*b11+a32*b21+a33*b31;te[5]=a31*b12+a32*b22+a33*b32;te[8]=a31*b13+a32*b23+a33*b33;return this;}multiplyScalar(s){const te=this.elements;te[0]*=s;te[3]*=s;te[6]*=s;te[1]*=s;te[4]*=s;te[7]*=s;te[2]*=s;te[5]*=s;te[8]*=s;return this;}determinant(){const te=this.elements;const a=te[0],b=te[1],c=te[2],d=te[3],e=te[4],f=te[5],g=te[6],h=te[7],i=te[8];return a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g;}invert(){const te=this.elements,n11=te[0],n21=te[1],n31=te[2],n12=te[3],n22=te[4],n32=te[5],n13=te[6],n23=te[7],n33=te[8],t11=n33*n22-n32*n23,t12=n32*n13-n33*n12,t13=n23*n12-n22*n13,det=n11*t11+n21*t12+n31*t13;if(det===0)return this.set(0,0,0,0,0,0,0,0,0);const detInv=1/det;te[0]=t11*detInv;te[1]=(n31*n23-n33*n21)*detInv;te[2]=(n32*n21-n31*n22)*detInv;te[3]=t12*detInv;te[4]=(n33*n11-n31*n13)*detInv;te[5]=(n31*n12-n32*n11)*detInv;te[6]=t13*detInv;te[7]=(n21*n13-n23*n11)*detInv;te[8]=(n22*n11-n21*n12)*detInv;return this;}transpose(){let tmp;const m=this.elements;tmp=m[1];m[1]=m[3];m[3]=tmp;tmp=m[2];m[2]=m[6];m[6]=tmp;tmp=m[5];m[5]=m[7];m[7]=tmp;return this;}getNormalMatrix(matrix4){return this.setFromMatrix4(matrix4).copy(this).invert().transpose();}transposeIntoArray(r){const m=this.elements;r[0]=m[0];r[1]=m[3];r[2]=m[6];r[3]=m[1];r[4]=m[4];r[5]=m[7];r[6]=m[2];r[7]=m[5];r[8]=m[8];return this;}setUvTransform(tx,ty,sx,sy,rotation,cx,cy){const c=Math.cos(rotation);const s=Math.sin(rotation);this.set(sx*c,sx*s,-sx*(c*cx+s*cy)+cx+tx,-sy*s,sy*c,-sy*(-s*cx+c*cy)+cy+ty,0,0,1);return this;}scale(sx,sy){const te=this.elements;te[0]*=sx;te[3]*=sx;te[6]*=sx;te[1]*=sy;te[4]*=sy;te[7]*=sy;return this;}rotate(theta){const c=Math.cos(theta);const s=Math.sin(theta);const te=this.elements;const a11=te[0],a12=te[3],a13=te[6];const a21=te[1],a22=te[4],a23=te[7];te[0]=c*a11+s*a21;te[3]=c*a12+s*a22;te[6]=c*a13+s*a23;te[1]=-s*a11+c*a21;te[4]=-s*a12+c*a22;te[7]=-s*a13+c*a23;return this;}translate(tx,ty){const te=this.elements;te[0]+=tx*te[2];te[3]+=tx*te[5];te[6]+=tx*te[8];te[1]+=ty*te[2];te[4]+=ty*te[5];te[7]+=ty*te[8];return this;}equals(matrix){const te=this.elements;const me=matrix.elements;for(let i=0;i<9;i++){if(te[i]!==me[i])return false;}return true;}fromArray(array,offset=0){for(let i=0;i<9;i++){this.elements[i]=array[i+offset];}return this;}toArray(array=[],offset=0){const te=this.elements;array[offset]=te[0];array[offset+1]=te[1];array[offset+2]=te[2];array[offset+3]=te[3];array[offset+4]=te[4];array[offset+5]=te[5];array[offset+6]=te[6];array[offset+7]=te[7];array[offset+8]=te[8];return array;}}let _canvas;const ImageUtils={getDataURL:function(image){if(/^data:/i.test(image.src)){return image.src;}if(typeof HTMLCanvasElement=='undefined'){return image.src;}let canvas;if(image instanceof HTMLCanvasElement){canvas=image;}else{if(_canvas===undefined)_canvas=document.createElementNS('http://www.w3.org/1999/xhtml','canvas');_canvas.width=image.width;_canvas.height=image.height;const context=_canvas.getContext('2d');if(image instanceof ImageData){context.putImageData(image,0,0);}else{context.drawImage(image,0,0,image.width,image.height);}canvas=_canvas;}if(canvas.width>2048||canvas.height>2048){return canvas.toDataURL('image/jpeg',0.6);}else{return canvas.toDataURL('image/png');}}};let textureId=0;function Texture(image=Texture.DEFAULT_IMAGE,mapping=Texture.DEFAULT_MAPPING,wrapS=ClampToEdgeWrapping,wrapT=ClampToEdgeWrapping,magFilter=LinearFilter,minFilter=LinearMipmapLinearFilter,format=RGBAFormat,type=UnsignedByteType,anisotropy=1,encoding=LinearEncoding){Object.defineProperty(this,'id',{value:textureId++});this.uuid=MathUtils.generateUUID();this.name='';this.image=image;this.mipmaps=[];this.mapping=mapping;this.wrapS=wrapS;this.wrapT=wrapT;this.magFilter=magFilter;this.minFilter=minFilter;this.anisotropy=anisotropy;this.format=format;this.internalFormat=null;this.type=type;this.offset=new Vector2(0,0);this.repeat=new Vector2(1,1);this.center=new Vector2(0,0);this.rotation=0;this.matrixAutoUpdate=true;this.matrix=new Matrix3();this.generateMipmaps=true;this.premultiplyAlpha=false;this.flipY=true;this.unpackAlignment=4;// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n//\n// Also changing the encoding after already used by a Material will not automatically make the Material\n// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\nthis.encoding=encoding;this.version=0;this.onUpdate=null;}Texture.DEFAULT_IMAGE=undefined;Texture.DEFAULT_MAPPING=UVMapping;Texture.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:Texture,isTexture:true,updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y);},clone:function(){return new this.constructor().copy(this);},copy:function(source){this.name=source.name;this.image=source.image;this.mipmaps=source.mipmaps.slice(0);this.mapping=source.mapping;this.wrapS=source.wrapS;this.wrapT=source.wrapT;this.magFilter=source.magFilter;this.minFilter=source.minFilter;this.anisotropy=source.anisotropy;this.format=source.format;this.internalFormat=source.internalFormat;this.type=source.type;this.offset.copy(source.offset);this.repeat.copy(source.repeat);this.center.copy(source.center);this.rotation=source.rotation;this.matrixAutoUpdate=source.matrixAutoUpdate;this.matrix.copy(source.matrix);this.generateMipmaps=source.generateMipmaps;this.premultiplyAlpha=source.premultiplyAlpha;this.flipY=source.flipY;this.unpackAlignment=source.unpackAlignment;this.encoding=source.encoding;return this;},toJSON:function(meta){const isRootObject=meta===undefined||typeof meta==='string';if(!isRootObject&&meta.textures[this.uuid]!==undefined){return meta.textures[this.uuid];}const output={metadata:{version:4.5,type:'Texture',generator:'Texture.toJSON'},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(this.image!==undefined){// TODO: Move to THREE.Image\nconst image=this.image;if(image.uuid===undefined){image.uuid=MathUtils.generateUUID();// UGH\n}if(!isRootObject&&meta.images[image.uuid]===undefined){let url;if(Array.isArray(image)){// process array of images e.g. CubeTexture\nurl=[];for(let i=0,l=image.length;i<l;i++){// check cube texture with data textures\nif(image[i].isDataTexture){url.push(serializeImage(image[i].image));}else{url.push(serializeImage(image[i]));}}}else{// process single image\nurl=serializeImage(image);}meta.images[image.uuid]={uuid:image.uuid,url:url};}output.image=image.uuid;}if(!isRootObject){meta.textures[this.uuid]=output;}return output;},dispose:function(){this.dispatchEvent({type:'dispose'});},transformUv:function(uv){if(this.mapping!==UVMapping)return uv;uv.applyMatrix3(this.matrix);if(uv.x<0||uv.x>1){switch(this.wrapS){case RepeatWrapping:uv.x=uv.x-Math.floor(uv.x);break;case ClampToEdgeWrapping:uv.x=uv.x<0?0:1;break;case MirroredRepeatWrapping:if(Math.abs(Math.floor(uv.x)%2)===1){uv.x=Math.ceil(uv.x)-uv.x;}else{uv.x=uv.x-Math.floor(uv.x);}break;}}if(uv.y<0||uv.y>1){switch(this.wrapT){case RepeatWrapping:uv.y=uv.y-Math.floor(uv.y);break;case ClampToEdgeWrapping:uv.y=uv.y<0?0:1;break;case MirroredRepeatWrapping:if(Math.abs(Math.floor(uv.y)%2)===1){uv.y=Math.ceil(uv.y)-uv.y;}else{uv.y=uv.y-Math.floor(uv.y);}break;}}if(this.flipY){uv.y=1-uv.y;}return uv;}});Object.defineProperty(Texture.prototype,'needsUpdate',{set:function(value){if(value===true)this.version++;}});function serializeImage(image){if(typeof HTMLImageElement!=='undefined'&&image instanceof HTMLImageElement||typeof HTMLCanvasElement!=='undefined'&&image instanceof HTMLCanvasElement||typeof ImageBitmap!=='undefined'&&image instanceof ImageBitmap){// default images\nreturn ImageUtils.getDataURL(image);}else{if(image.data){// images of DataTexture\nreturn{data:Array.prototype.slice.call(image.data),width:image.width,height:image.height,type:image.data.constructor.name};}else{console.warn('THREE.Texture: Unable to serialize Texture.');return{};}}}class Vector4{constructor(x=0,y=0,z=0,w=1){Object.defineProperty(this,'isVector4',{value:true});this.x=x;this.y=y;this.z=z;this.w=w;}get width(){return this.z;}set width(value){this.z=value;}get height(){return this.w;}set height(value){this.w=value;}set(x,y,z,w){this.x=x;this.y=y;this.z=z;this.w=w;return this;}setScalar(scalar){this.x=scalar;this.y=scalar;this.z=scalar;this.w=scalar;return this;}setX(x){this.x=x;return this;}setY(y){this.y=y;return this;}setZ(z){this.z=z;return this;}setW(w){this.w=w;return this;}setComponent(index,value){switch(index){case 0:this.x=value;break;case 1:this.y=value;break;case 2:this.z=value;break;case 3:this.w=value;break;default:throw new Error('index is out of range: '+index);}return this;}getComponent(index){switch(index){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error('index is out of range: '+index);}}clone(){return new this.constructor(this.x,this.y,this.z,this.w);}copy(v){this.x=v.x;this.y=v.y;this.z=v.z;this.w=v.w!==undefined?v.w:1;return this;}add(v,w){if(w!==undefined){console.warn('THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');return this.addVectors(v,w);}this.x+=v.x;this.y+=v.y;this.z+=v.z;this.w+=v.w;return this;}addScalar(s){this.x+=s;this.y+=s;this.z+=s;this.w+=s;return this;}addVectors(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this;}addScaledVector(v,s){this.x+=v.x*s;this.y+=v.y*s;this.z+=v.z*s;this.w+=v.w*s;return this;}sub(v,w){if(w!==undefined){console.warn('THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');return this.subVectors(v,w);}this.x-=v.x;this.y-=v.y;this.z-=v.z;this.w-=v.w;return this;}subScalar(s){this.x-=s;this.y-=s;this.z-=s;this.w-=s;return this;}subVectors(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this;}multiply(v){this.x*=v.x;this.y*=v.y;this.z*=v.z;this.w*=v.w;return this;}multiplyScalar(scalar){this.x*=scalar;this.y*=scalar;this.z*=scalar;this.w*=scalar;return this;}applyMatrix4(m){const x=this.x,y=this.y,z=this.z,w=this.w;const e=m.elements;this.x=e[0]*x+e[4]*y+e[8]*z+e[12]*w;this.y=e[1]*x+e[5]*y+e[9]*z+e[13]*w;this.z=e[2]*x+e[6]*y+e[10]*z+e[14]*w;this.w=e[3]*x+e[7]*y+e[11]*z+e[15]*w;return this;}divideScalar(scalar){return this.multiplyScalar(1/scalar);}setAxisAngleFromQuaternion(q){// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n// q is assumed to be normalized\nthis.w=2*Math.acos(q.w);const s=Math.sqrt(1-q.w*q.w);if(s<0.0001){this.x=1;this.y=0;this.z=0;}else{this.x=q.x/s;this.y=q.y/s;this.z=q.z/s;}return this;}setAxisAngleFromRotationMatrix(m){// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\nlet angle,x,y,z;// variables for result\nconst epsilon=0.01,// margin to allow for rounding errors\nepsilon2=0.1,// margin to distinguish between 0 and 180 degrees\nte=m.elements,m11=te[0],m12=te[4],m13=te[8],m21=te[1],m22=te[5],m23=te[9],m31=te[2],m32=te[6],m33=te[10];if(Math.abs(m12-m21)<epsilon&&Math.abs(m13-m31)<epsilon&&Math.abs(m23-m32)<epsilon){// singularity found\n// first check for identity matrix which must have +1 for all terms\n// in leading diagonal and zero in other terms\nif(Math.abs(m12+m21)<epsilon2&&Math.abs(m13+m31)<epsilon2&&Math.abs(m23+m32)<epsilon2&&Math.abs(m11+m22+m33-3)<epsilon2){// this singularity is identity matrix so angle = 0\nthis.set(1,0,0,0);return this;// zero angle, arbitrary axis\n}// otherwise this singularity is angle = 180\nangle=Math.PI;const xx=(m11+1)/2;const yy=(m22+1)/2;const zz=(m33+1)/2;const xy=(m12+m21)/4;const xz=(m13+m31)/4;const yz=(m23+m32)/4;if(xx>yy&&xx>zz){// m11 is the largest diagonal term\nif(xx<epsilon){x=0;y=0.707106781;z=0.707106781;}else{x=Math.sqrt(xx);y=xy/x;z=xz/x;}}else if(yy>zz){// m22 is the largest diagonal term\nif(yy<epsilon){x=0.707106781;y=0;z=0.707106781;}else{y=Math.sqrt(yy);x=xy/y;z=yz/y;}}else{// m33 is the largest diagonal term so base result on this\nif(zz<epsilon){x=0.707106781;y=0.707106781;z=0;}else{z=Math.sqrt(zz);x=xz/z;y=yz/z;}}this.set(x,y,z,angle);return this;// return 180 deg rotation\n}// as we have reached here there are no singularities so we can handle normally\nlet s=Math.sqrt((m32-m23)*(m32-m23)+(m13-m31)*(m13-m31)+(m21-m12)*(m21-m12));// used to normalize\nif(Math.abs(s)<0.001)s=1;// prevent divide by zero, should not happen if matrix is orthogonal and should be\n// caught by singularity test above, but I've left it in just in case\nthis.x=(m32-m23)/s;this.y=(m13-m31)/s;this.z=(m21-m12)/s;this.w=Math.acos((m11+m22+m33-1)/2);return this;}min(v){this.x=Math.min(this.x,v.x);this.y=Math.min(this.y,v.y);this.z=Math.min(this.z,v.z);this.w=Math.min(this.w,v.w);return this;}max(v){this.x=Math.max(this.x,v.x);this.y=Math.max(this.y,v.y);this.z=Math.max(this.z,v.z);this.w=Math.max(this.w,v.w);return this;}clamp(min,max){// assumes min < max, componentwise\nthis.x=Math.max(min.x,Math.min(max.x,this.x));this.y=Math.max(min.y,Math.min(max.y,this.y));this.z=Math.max(min.z,Math.min(max.z,this.z));this.w=Math.max(min.w,Math.min(max.w,this.w));return this;}clampScalar(minVal,maxVal){this.x=Math.max(minVal,Math.min(maxVal,this.x));this.y=Math.max(minVal,Math.min(maxVal,this.y));this.z=Math.max(minVal,Math.min(maxVal,this.z));this.w=Math.max(minVal,Math.min(maxVal,this.w));return this;}clampLength(min,max){const length=this.length();return this.divideScalar(length||1).multiplyScalar(Math.max(min,Math.min(max,length)));}floor(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);this.w=Math.floor(this.w);return this;}ceil(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);this.w=Math.ceil(this.w);return this;}round(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);this.w=Math.round(this.w);return this;}roundToZero(){this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x);this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y);this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z);this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w);return this;}negate(){this.x=-this.x;this.y=-this.y;this.z=-this.z;this.w=-this.w;return this;}dot(v){return this.x*v.x+this.y*v.y+this.z*v.z+this.w*v.w;}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w;}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w);}normalize(){return this.divideScalar(this.length()||1);}setLength(length){return this.normalize().multiplyScalar(length);}lerp(v,alpha){this.x+=(v.x-this.x)*alpha;this.y+=(v.y-this.y)*alpha;this.z+=(v.z-this.z)*alpha;this.w+=(v.w-this.w)*alpha;return this;}lerpVectors(v1,v2,alpha){this.x=v1.x+(v2.x-v1.x)*alpha;this.y=v1.y+(v2.y-v1.y)*alpha;this.z=v1.z+(v2.z-v1.z)*alpha;this.w=v1.w+(v2.w-v1.w)*alpha;return this;}equals(v){return v.x===this.x&&v.y===this.y&&v.z===this.z&&v.w===this.w;}fromArray(array,offset=0){this.x=array[offset];this.y=array[offset+1];this.z=array[offset+2];this.w=array[offset+3];return this;}toArray(array=[],offset=0){array[offset]=this.x;array[offset+1]=this.y;array[offset+2]=this.z;array[offset+3]=this.w;return array;}fromBufferAttribute(attribute,index,offset){if(offset!==undefined){console.warn('THREE.Vector4: offset has been removed from .fromBufferAttribute().');}this.x=attribute.getX(index);this.y=attribute.getY(index);this.z=attribute.getZ(index);this.w=attribute.getW(index);return this;}random(){this.x=Math.random();this.y=Math.random();this.z=Math.random();this.w=Math.random();return this;}}/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/class WebGLRenderTarget extends EventDispatcher{constructor(width,height,options){super();Object.defineProperty(this,'isWebGLRenderTarget',{value:true});this.width=width;this.height=height;this.scissor=new Vector4(0,0,width,height);this.scissorTest=false;this.viewport=new Vector4(0,0,width,height);options=options||{};this.texture=new Texture(undefined,options.mapping,options.wrapS,options.wrapT,options.magFilter,options.minFilter,options.format,options.type,options.anisotropy,options.encoding);this.texture.image={};this.texture.image.width=width;this.texture.image.height=height;this.texture.generateMipmaps=options.generateMipmaps!==undefined?options.generateMipmaps:false;this.texture.minFilter=options.minFilter!==undefined?options.minFilter:LinearFilter;this.depthBuffer=options.depthBuffer!==undefined?options.depthBuffer:true;this.stencilBuffer=options.stencilBuffer!==undefined?options.stencilBuffer:false;this.depthTexture=options.depthTexture!==undefined?options.depthTexture:null;}setSize(width,height){if(this.width!==width||this.height!==height){this.width=width;this.height=height;this.texture.image.width=width;this.texture.image.height=height;this.dispose();}this.viewport.set(0,0,width,height);this.scissor.set(0,0,width,height);}clone(){return new this.constructor().copy(this);}copy(source){this.width=source.width;this.height=source.height;this.viewport.copy(source.viewport);this.texture=source.texture.clone();this.depthBuffer=source.depthBuffer;this.stencilBuffer=source.stencilBuffer;this.depthTexture=source.depthTexture;return this;}dispose(){this.dispatchEvent({type:'dispose'});}}class WebGLMultisampleRenderTarget extends WebGLRenderTarget{constructor(width,height,options){super(width,height,options);Object.defineProperty(this,'isWebGLMultisampleRenderTarget',{value:true});this.samples=4;}copy(source){super.copy.call(this,source);this.samples=source.samples;return this;}}class Quaternion{constructor(x=0,y=0,z=0,w=1){Object.defineProperty(this,'isQuaternion',{value:true});this._x=x;this._y=y;this._z=z;this._w=w;}static slerp(qa,qb,qm,t){return qm.copy(qa).slerp(qb,t);}static slerpFlat(dst,dstOffset,src0,srcOffset0,src1,srcOffset1,t){// fuzz-free, array-based Quaternion SLERP operation\nlet x0=src0[srcOffset0+0],y0=src0[srcOffset0+1],z0=src0[srcOffset0+2],w0=src0[srcOffset0+3];const x1=src1[srcOffset1+0],y1=src1[srcOffset1+1],z1=src1[srcOffset1+2],w1=src1[srcOffset1+3];if(w0!==w1||x0!==x1||y0!==y1||z0!==z1){let s=1-t;const cos=x0*x1+y0*y1+z0*z1+w0*w1,dir=cos>=0?1:-1,sqrSin=1-cos*cos;// Skip the Slerp for tiny steps to avoid numeric problems:\nif(sqrSin>Number.EPSILON){const sin=Math.sqrt(sqrSin),len=Math.atan2(sin,cos*dir);s=Math.sin(s*len)/sin;t=Math.sin(t*len)/sin;}const tDir=t*dir;x0=x0*s+x1*tDir;y0=y0*s+y1*tDir;z0=z0*s+z1*tDir;w0=w0*s+w1*tDir;// Normalize in case we just did a lerp:\nif(s===1-t){const f=1/Math.sqrt(x0*x0+y0*y0+z0*z0+w0*w0);x0*=f;y0*=f;z0*=f;w0*=f;}}dst[dstOffset]=x0;dst[dstOffset+1]=y0;dst[dstOffset+2]=z0;dst[dstOffset+3]=w0;}static multiplyQuaternionsFlat(dst,dstOffset,src0,srcOffset0,src1,srcOffset1){const x0=src0[srcOffset0];const y0=src0[srcOffset0+1];const z0=src0[srcOffset0+2];const w0=src0[srcOffset0+3];const x1=src1[srcOffset1];const y1=src1[srcOffset1+1];const z1=src1[srcOffset1+2];const w1=src1[srcOffset1+3];dst[dstOffset]=x0*w1+w0*x1+y0*z1-z0*y1;dst[dstOffset+1]=y0*w1+w0*y1+z0*x1-x0*z1;dst[dstOffset+2]=z0*w1+w0*z1+x0*y1-y0*x1;dst[dstOffset+3]=w0*w1-x0*x1-y0*y1-z0*z1;return dst;}get x(){return this._x;}set x(value){this._x=value;this._onChangeCallback();}get y(){return this._y;}set y(value){this._y=value;this._onChangeCallback();}get z(){return this._z;}set z(value){this._z=value;this._onChangeCallback();}get w(){return this._w;}set w(value){this._w=value;this._onChangeCallback();}set(x,y,z,w){this._x=x;this._y=y;this._z=z;this._w=w;this._onChangeCallback();return this;}clone(){return new this.constructor(this._x,this._y,this._z,this._w);}copy(quaternion){this._x=quaternion.x;this._y=quaternion.y;this._z=quaternion.z;this._w=quaternion.w;this._onChangeCallback();return this;}setFromEuler(euler,update){if(!(euler&&euler.isEuler)){throw new Error('THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.');}const x=euler._x,y=euler._y,z=euler._z,order=euler._order;// http://www.mathworks.com/matlabcentral/fileexchange/\n// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n//\tcontent/SpinCalc.m\nconst cos=Math.cos;const sin=Math.sin;const c1=cos(x/2);const c2=cos(y/2);const c3=cos(z/2);const s1=sin(x/2);const s2=sin(y/2);const s3=sin(z/2);switch(order){case'XYZ':this._x=s1*c2*c3+c1*s2*s3;this._y=c1*s2*c3-s1*c2*s3;this._z=c1*c2*s3+s1*s2*c3;this._w=c1*c2*c3-s1*s2*s3;break;case'YXZ':this._x=s1*c2*c3+c1*s2*s3;this._y=c1*s2*c3-s1*c2*s3;this._z=c1*c2*s3-s1*s2*c3;this._w=c1*c2*c3+s1*s2*s3;break;case'ZXY':this._x=s1*c2*c3-c1*s2*s3;this._y=c1*s2*c3+s1*c2*s3;this._z=c1*c2*s3+s1*s2*c3;this._w=c1*c2*c3-s1*s2*s3;break;case'ZYX':this._x=s1*c2*c3-c1*s2*s3;this._y=c1*s2*c3+s1*c2*s3;this._z=c1*c2*s3-s1*s2*c3;this._w=c1*c2*c3+s1*s2*s3;break;case'YZX':this._x=s1*c2*c3+c1*s2*s3;this._y=c1*s2*c3+s1*c2*s3;this._z=c1*c2*s3-s1*s2*c3;this._w=c1*c2*c3-s1*s2*s3;break;case'XZY':this._x=s1*c2*c3-c1*s2*s3;this._y=c1*s2*c3-s1*c2*s3;this._z=c1*c2*s3+s1*s2*c3;this._w=c1*c2*c3+s1*s2*s3;break;default:console.warn('THREE.Quaternion: .setFromEuler() encountered an unknown order: '+order);}if(update!==false)this._onChangeCallback();return this;}setFromAxisAngle(axis,angle){// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n// assumes axis is normalized\nconst halfAngle=angle/2,s=Math.sin(halfAngle);this._x=axis.x*s;this._y=axis.y*s;this._z=axis.z*s;this._w=Math.cos(halfAngle);this._onChangeCallback();return this;}setFromRotationMatrix(m){// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\nconst te=m.elements,m11=te[0],m12=te[4],m13=te[8],m21=te[1],m22=te[5],m23=te[9],m31=te[2],m32=te[6],m33=te[10],trace=m11+m22+m33;if(trace>0){const s=0.5/Math.sqrt(trace+1.0);this._w=0.25/s;this._x=(m32-m23)*s;this._y=(m13-m31)*s;this._z=(m21-m12)*s;}else if(m11>m22&&m11>m33){const s=2.0*Math.sqrt(1.0+m11-m22-m33);this._w=(m32-m23)/s;this._x=0.25*s;this._y=(m12+m21)/s;this._z=(m13+m31)/s;}else if(m22>m33){const s=2.0*Math.sqrt(1.0+m22-m11-m33);this._w=(m13-m31)/s;this._x=(m12+m21)/s;this._y=0.25*s;this._z=(m23+m32)/s;}else{const s=2.0*Math.sqrt(1.0+m33-m11-m22);this._w=(m21-m12)/s;this._x=(m13+m31)/s;this._y=(m23+m32)/s;this._z=0.25*s;}this._onChangeCallback();return this;}setFromUnitVectors(vFrom,vTo){// assumes direction vectors vFrom and vTo are normalized\nconst EPS=0.000001;let r=vFrom.dot(vTo)+1;if(r<EPS){r=0;if(Math.abs(vFrom.x)>Math.abs(vFrom.z)){this._x=-vFrom.y;this._y=vFrom.x;this._z=0;this._w=r;}else{this._x=0;this._y=-vFrom.z;this._z=vFrom.y;this._w=r;}}else{// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\nthis._x=vFrom.y*vTo.z-vFrom.z*vTo.y;this._y=vFrom.z*vTo.x-vFrom.x*vTo.z;this._z=vFrom.x*vTo.y-vFrom.y*vTo.x;this._w=r;}return this.normalize();}angleTo(q){return 2*Math.acos(Math.abs(MathUtils.clamp(this.dot(q),-1,1)));}rotateTowards(q,step){const angle=this.angleTo(q);if(angle===0)return this;const t=Math.min(1,step/angle);this.slerp(q,t);return this;}identity(){return this.set(0,0,0,1);}invert(){// quaternion is assumed to have unit length\nreturn this.conjugate();}conjugate(){this._x*=-1;this._y*=-1;this._z*=-1;this._onChangeCallback();return this;}dot(v){return this._x*v._x+this._y*v._y+this._z*v._z+this._w*v._w;}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w;}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w);}normalize(){let l=this.length();if(l===0){this._x=0;this._y=0;this._z=0;this._w=1;}else{l=1/l;this._x=this._x*l;this._y=this._y*l;this._z=this._z*l;this._w=this._w*l;}this._onChangeCallback();return this;}multiply(q,p){if(p!==undefined){console.warn('THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.');return this.multiplyQuaternions(q,p);}return this.multiplyQuaternions(this,q);}premultiply(q){return this.multiplyQuaternions(q,this);}multiplyQuaternions(a,b){// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\nconst qax=a._x,qay=a._y,qaz=a._z,qaw=a._w;const qbx=b._x,qby=b._y,qbz=b._z,qbw=b._w;this._x=qax*qbw+qaw*qbx+qay*qbz-qaz*qby;this._y=qay*qbw+qaw*qby+qaz*qbx-qax*qbz;this._z=qaz*qbw+qaw*qbz+qax*qby-qay*qbx;this._w=qaw*qbw-qax*qbx-qay*qby-qaz*qbz;this._onChangeCallback();return this;}slerp(qb,t){if(t===0)return this;if(t===1)return this.copy(qb);const x=this._x,y=this._y,z=this._z,w=this._w;// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\nlet cosHalfTheta=w*qb._w+x*qb._x+y*qb._y+z*qb._z;if(cosHalfTheta<0){this._w=-qb._w;this._x=-qb._x;this._y=-qb._y;this._z=-qb._z;cosHalfTheta=-cosHalfTheta;}else{this.copy(qb);}if(cosHalfTheta>=1.0){this._w=w;this._x=x;this._y=y;this._z=z;return this;}const sqrSinHalfTheta=1.0-cosHalfTheta*cosHalfTheta;if(sqrSinHalfTheta<=Number.EPSILON){const s=1-t;this._w=s*w+t*this._w;this._x=s*x+t*this._x;this._y=s*y+t*this._y;this._z=s*z+t*this._z;this.normalize();this._onChangeCallback();return this;}const sinHalfTheta=Math.sqrt(sqrSinHalfTheta);const halfTheta=Math.atan2(sinHalfTheta,cosHalfTheta);const ratioA=Math.sin((1-t)*halfTheta)/sinHalfTheta,ratioB=Math.sin(t*halfTheta)/sinHalfTheta;this._w=w*ratioA+this._w*ratioB;this._x=x*ratioA+this._x*ratioB;this._y=y*ratioA+this._y*ratioB;this._z=z*ratioA+this._z*ratioB;this._onChangeCallback();return this;}equals(quaternion){return quaternion._x===this._x&&quaternion._y===this._y&&quaternion._z===this._z&&quaternion._w===this._w;}fromArray(array,offset=0){this._x=array[offset];this._y=array[offset+1];this._z=array[offset+2];this._w=array[offset+3];this._onChangeCallback();return this;}toArray(array=[],offset=0){array[offset]=this._x;array[offset+1]=this._y;array[offset+2]=this._z;array[offset+3]=this._w;return array;}fromBufferAttribute(attribute,index){this._x=attribute.getX(index);this._y=attribute.getY(index);this._z=attribute.getZ(index);this._w=attribute.getW(index);return this;}_onChange(callback){this._onChangeCallback=callback;return this;}_onChangeCallback(){}}class Vector3{constructor(x=0,y=0,z=0){Object.defineProperty(this,'isVector3',{value:true});this.x=x;this.y=y;this.z=z;}set(x,y,z){if(z===undefined)z=this.z;// sprite.scale.set(x,y)\nthis.x=x;this.y=y;this.z=z;return this;}setScalar(scalar){this.x=scalar;this.y=scalar;this.z=scalar;return this;}setX(x){this.x=x;return this;}setY(y){this.y=y;return this;}setZ(z){this.z=z;return this;}setComponent(index,value){switch(index){case 0:this.x=value;break;case 1:this.y=value;break;case 2:this.z=value;break;default:throw new Error('index is out of range: '+index);}return this;}getComponent(index){switch(index){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error('index is out of range: '+index);}}clone(){return new this.constructor(this.x,this.y,this.z);}copy(v){this.x=v.x;this.y=v.y;this.z=v.z;return this;}add(v,w){if(w!==undefined){console.warn('THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');return this.addVectors(v,w);}this.x+=v.x;this.y+=v.y;this.z+=v.z;return this;}addScalar(s){this.x+=s;this.y+=s;this.z+=s;return this;}addVectors(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this;}addScaledVector(v,s){this.x+=v.x*s;this.y+=v.y*s;this.z+=v.z*s;return this;}sub(v,w){if(w!==undefined){console.warn('THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');return this.subVectors(v,w);}this.x-=v.x;this.y-=v.y;this.z-=v.z;return this;}subScalar(s){this.x-=s;this.y-=s;this.z-=s;return this;}subVectors(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this;}multiply(v,w){if(w!==undefined){console.warn('THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.');return this.multiplyVectors(v,w);}this.x*=v.x;this.y*=v.y;this.z*=v.z;return this;}multiplyScalar(scalar){this.x*=scalar;this.y*=scalar;this.z*=scalar;return this;}multiplyVectors(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this;}applyEuler(euler){if(!(euler&&euler.isEuler)){console.error('THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.');}return this.applyQuaternion(_quaternion.setFromEuler(euler));}applyAxisAngle(axis,angle){return this.applyQuaternion(_quaternion.setFromAxisAngle(axis,angle));}applyMatrix3(m){const x=this.x,y=this.y,z=this.z;const e=m.elements;this.x=e[0]*x+e[3]*y+e[6]*z;this.y=e[1]*x+e[4]*y+e[7]*z;this.z=e[2]*x+e[5]*y+e[8]*z;return this;}applyNormalMatrix(m){return this.applyMatrix3(m).normalize();}applyMatrix4(m){const x=this.x,y=this.y,z=this.z;const e=m.elements;const w=1/(e[3]*x+e[7]*y+e[11]*z+e[15]);this.x=(e[0]*x+e[4]*y+e[8]*z+e[12])*w;this.y=(e[1]*x+e[5]*y+e[9]*z+e[13])*w;this.z=(e[2]*x+e[6]*y+e[10]*z+e[14])*w;return this;}applyQuaternion(q){const x=this.x,y=this.y,z=this.z;const qx=q.x,qy=q.y,qz=q.z,qw=q.w;// calculate quat * vector\nconst ix=qw*x+qy*z-qz*y;const iy=qw*y+qz*x-qx*z;const iz=qw*z+qx*y-qy*x;const iw=-qx*x-qy*y-qz*z;// calculate result * inverse quat\nthis.x=ix*qw+iw*-qx+iy*-qz-iz*-qy;this.y=iy*qw+iw*-qy+iz*-qx-ix*-qz;this.z=iz*qw+iw*-qz+ix*-qy-iy*-qx;return this;}project(camera){return this.applyMatrix4(camera.matrixWorldInverse).applyMatrix4(camera.projectionMatrix);}unproject(camera){return this.applyMatrix4(camera.projectionMatrixInverse).applyMatrix4(camera.matrixWorld);}transformDirection(m){// input: THREE.Matrix4 affine matrix\n// vector interpreted as a direction\nconst x=this.x,y=this.y,z=this.z;const e=m.elements;this.x=e[0]*x+e[4]*y+e[8]*z;this.y=e[1]*x+e[5]*y+e[9]*z;this.z=e[2]*x+e[6]*y+e[10]*z;return this.normalize();}divide(v){this.x/=v.x;this.y/=v.y;this.z/=v.z;return this;}divideScalar(scalar){return this.multiplyScalar(1/scalar);}min(v){this.x=Math.min(this.x,v.x);this.y=Math.min(this.y,v.y);this.z=Math.min(this.z,v.z);return this;}max(v){this.x=Math.max(this.x,v.x);this.y=Math.max(this.y,v.y);this.z=Math.max(this.z,v.z);return this;}clamp(min,max){// assumes min < max, componentwise\nthis.x=Math.max(min.x,Math.min(max.x,this.x));this.y=Math.max(min.y,Math.min(max.y,this.y));this.z=Math.max(min.z,Math.min(max.z,this.z));return this;}clampScalar(minVal,maxVal){this.x=Math.max(minVal,Math.min(maxVal,this.x));this.y=Math.max(minVal,Math.min(maxVal,this.y));this.z=Math.max(minVal,Math.min(maxVal,this.z));return this;}clampLength(min,max){const length=this.length();return this.divideScalar(length||1).multiplyScalar(Math.max(min,Math.min(max,length)));}floor(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);return this;}ceil(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);return this;}round(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);return this;}roundToZero(){this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x);this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y);this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z);return this;}negate(){this.x=-this.x;this.y=-this.y;this.z=-this.z;return this;}dot(v){return this.x*v.x+this.y*v.y+this.z*v.z;}// TODO lengthSquared?\nlengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z;}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z);}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z);}normalize(){return this.divideScalar(this.length()||1);}setLength(length){return this.normalize().multiplyScalar(length);}lerp(v,alpha){this.x+=(v.x-this.x)*alpha;this.y+=(v.y-this.y)*alpha;this.z+=(v.z-this.z)*alpha;return this;}lerpVectors(v1,v2,alpha){this.x=v1.x+(v2.x-v1.x)*alpha;this.y=v1.y+(v2.y-v1.y)*alpha;this.z=v1.z+(v2.z-v1.z)*alpha;return this;}cross(v,w){if(w!==undefined){console.warn('THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.');return this.crossVectors(v,w);}return this.crossVectors(this,v);}crossVectors(a,b){const ax=a.x,ay=a.y,az=a.z;const bx=b.x,by=b.y,bz=b.z;this.x=ay*bz-az*by;this.y=az*bx-ax*bz;this.z=ax*by-ay*bx;return this;}projectOnVector(v){const denominator=v.lengthSq();if(denominator===0)return this.set(0,0,0);const scalar=v.dot(this)/denominator;return this.copy(v).multiplyScalar(scalar);}projectOnPlane(planeNormal){_vector.copy(this).projectOnVector(planeNormal);return this.sub(_vector);}reflect(normal){// reflect incident vector off plane orthogonal to normal\n// normal is assumed to have unit length\nreturn this.sub(_vector.copy(normal).multiplyScalar(2*this.dot(normal)));}angleTo(v){const denominator=Math.sqrt(this.lengthSq()*v.lengthSq());if(denominator===0)return Math.PI/2;const theta=this.dot(v)/denominator;// clamp, to handle numerical problems\nreturn Math.acos(MathUtils.clamp(theta,-1,1));}distanceTo(v){return Math.sqrt(this.distanceToSquared(v));}distanceToSquared(v){const dx=this.x-v.x,dy=this.y-v.y,dz=this.z-v.z;return dx*dx+dy*dy+dz*dz;}manhattanDistanceTo(v){return Math.abs(this.x-v.x)+Math.abs(this.y-v.y)+Math.abs(this.z-v.z);}setFromSpherical(s){return this.setFromSphericalCoords(s.radius,s.phi,s.theta);}setFromSphericalCoords(radius,phi,theta){const sinPhiRadius=Math.sin(phi)*radius;this.x=sinPhiRadius*Math.sin(theta);this.y=Math.cos(phi)*radius;this.z=sinPhiRadius*Math.cos(theta);return this;}setFromCylindrical(c){return this.setFromCylindricalCoords(c.radius,c.theta,c.y);}setFromCylindricalCoords(radius,theta,y){this.x=radius*Math.sin(theta);this.y=y;this.z=radius*Math.cos(theta);return this;}setFromMatrixPosition(m){const e=m.elements;this.x=e[12];this.y=e[13];this.z=e[14];return this;}setFromMatrixScale(m){const sx=this.setFromMatrixColumn(m,0).length();const sy=this.setFromMatrixColumn(m,1).length();const sz=this.setFromMatrixColumn(m,2).length();this.x=sx;this.y=sy;this.z=sz;return this;}setFromMatrixColumn(m,index){return this.fromArray(m.elements,index*4);}setFromMatrix3Column(m,index){return this.fromArray(m.elements,index*3);}equals(v){return v.x===this.x&&v.y===this.y&&v.z===this.z;}fromArray(array,offset=0){this.x=array[offset];this.y=array[offset+1];this.z=array[offset+2];return this;}toArray(array=[],offset=0){array[offset]=this.x;array[offset+1]=this.y;array[offset+2]=this.z;return array;}fromBufferAttribute(attribute,index,offset){if(offset!==undefined){console.warn('THREE.Vector3: offset has been removed from .fromBufferAttribute().');}this.x=attribute.getX(index);this.y=attribute.getY(index);this.z=attribute.getZ(index);return this;}random(){this.x=Math.random();this.y=Math.random();this.z=Math.random();return this;}}const _vector=/*@__PURE__*/new Vector3();const _quaternion=/*@__PURE__*/new Quaternion();class Box3{constructor(min,max){Object.defineProperty(this,'isBox3',{value:true});this.min=min!==undefined?min:new Vector3(+Infinity,+Infinity,+Infinity);this.max=max!==undefined?max:new Vector3(-Infinity,-Infinity,-Infinity);}set(min,max){this.min.copy(min);this.max.copy(max);return this;}setFromArray(array){let minX=+Infinity;let minY=+Infinity;let minZ=+Infinity;let maxX=-Infinity;let maxY=-Infinity;let maxZ=-Infinity;for(let i=0,l=array.length;i<l;i+=3){const x=array[i];const y=array[i+1];const z=array[i+2];if(x<minX)minX=x;if(y<minY)minY=y;if(z<minZ)minZ=z;if(x>maxX)maxX=x;if(y>maxY)maxY=y;if(z>maxZ)maxZ=z;}this.min.set(minX,minY,minZ);this.max.set(maxX,maxY,maxZ);return this;}setFromBufferAttribute(attribute){let minX=+Infinity;let minY=+Infinity;let minZ=+Infinity;let maxX=-Infinity;let maxY=-Infinity;let maxZ=-Infinity;for(let i=0,l=attribute.count;i<l;i++){const x=attribute.getX(i);const y=attribute.getY(i);const z=attribute.getZ(i);if(x<minX)minX=x;if(y<minY)minY=y;if(z<minZ)minZ=z;if(x>maxX)maxX=x;if(y>maxY)maxY=y;if(z>maxZ)maxZ=z;}this.min.set(minX,minY,minZ);this.max.set(maxX,maxY,maxZ);return this;}setFromPoints(points){this.makeEmpty();for(let i=0,il=points.length;i<il;i++){this.expandByPoint(points[i]);}return this;}setFromCenterAndSize(center,size){const halfSize=_vector$1.copy(size).multiplyScalar(0.5);this.min.copy(center).sub(halfSize);this.max.copy(center).add(halfSize);return this;}setFromObject(object){this.makeEmpty();return this.expandByObject(object);}clone(){return new this.constructor().copy(this);}copy(box){this.min.copy(box.min);this.max.copy(box.max);return this;}makeEmpty(){this.min.x=this.min.y=this.min.z=+Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return this;}isEmpty(){// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\nreturn this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z;}getCenter(target){if(target===undefined){console.warn('THREE.Box3: .getCenter() target is now required');target=new Vector3();}return this.isEmpty()?target.set(0,0,0):target.addVectors(this.min,this.max).multiplyScalar(0.5);}getSize(target){if(target===undefined){console.warn('THREE.Box3: .getSize() target is now required');target=new Vector3();}return this.isEmpty()?target.set(0,0,0):target.subVectors(this.max,this.min);}expandByPoint(point){this.min.min(point);this.max.max(point);return this;}expandByVector(vector){this.min.sub(vector);this.max.add(vector);return this;}expandByScalar(scalar){this.min.addScalar(-scalar);this.max.addScalar(scalar);return this;}expandByObject(object){// Computes the world-axis-aligned bounding box of an object (including its children),\n// accounting for both the object's, and children's, world transforms\nobject.updateWorldMatrix(false,false);const geometry=object.geometry;if(geometry!==undefined){if(geometry.boundingBox===null){geometry.computeBoundingBox();}_box.copy(geometry.boundingBox);_box.applyMatrix4(object.matrixWorld);this.union(_box);}const children=object.children;for(let i=0,l=children.length;i<l;i++){this.expandByObject(children[i]);}return this;}containsPoint(point){return point.x<this.min.x||point.x>this.max.x||point.y<this.min.y||point.y>this.max.y||point.z<this.min.z||point.z>this.max.z?false:true;}containsBox(box){return this.min.x<=box.min.x&&box.max.x<=this.max.x&&this.min.y<=box.min.y&&box.max.y<=this.max.y&&this.min.z<=box.min.z&&box.max.z<=this.max.z;}getParameter(point,target){// This can potentially have a divide by zero if the box\n// has a size dimension of 0.\nif(target===undefined){console.warn('THREE.Box3: .getParameter() target is now required');target=new Vector3();}return target.set((point.x-this.min.x)/(this.max.x-this.min.x),(point.y-this.min.y)/(this.max.y-this.min.y),(point.z-this.min.z)/(this.max.z-this.min.z));}intersectsBox(box){// using 6 splitting planes to rule out intersections.\nreturn box.max.x<this.min.x||box.min.x>this.max.x||box.max.y<this.min.y||box.min.y>this.max.y||box.max.z<this.min.z||box.min.z>this.max.z?false:true;}intersectsSphere(sphere){// Find the point on the AABB closest to the sphere center.\nthis.clampPoint(sphere.center,_vector$1);// If that point is inside the sphere, the AABB and sphere intersect.\nreturn _vector$1.distanceToSquared(sphere.center)<=sphere.radius*sphere.radius;}intersectsPlane(plane){// We compute the minimum and maximum dot product values. If those values\n// are on the same side (back or front) of the plane, then there is no intersection.\nlet min,max;if(plane.normal.x>0){min=plane.normal.x*this.min.x;max=plane.normal.x*this.max.x;}else{min=plane.normal.x*this.max.x;max=plane.normal.x*this.min.x;}if(plane.normal.y>0){min+=plane.normal.y*this.min.y;max+=plane.normal.y*this.max.y;}else{min+=plane.normal.y*this.max.y;max+=plane.normal.y*this.min.y;}if(plane.normal.z>0){min+=plane.normal.z*this.min.z;max+=plane.normal.z*this.max.z;}else{min+=plane.normal.z*this.max.z;max+=plane.normal.z*this.min.z;}return min<=-plane.constant&&max>=-plane.constant;}intersectsTriangle(triangle){if(this.isEmpty()){return false;}// compute box center and extents\nthis.getCenter(_center);_extents.subVectors(this.max,_center);// translate triangle to aabb origin\n_v0.subVectors(triangle.a,_center);_v1.subVectors(triangle.b,_center);_v2.subVectors(triangle.c,_center);// compute edge vectors for triangle\n_f0.subVectors(_v1,_v0);_f1.subVectors(_v2,_v1);_f2.subVectors(_v0,_v2);// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\nlet axes=[0,-_f0.z,_f0.y,0,-_f1.z,_f1.y,0,-_f2.z,_f2.y,_f0.z,0,-_f0.x,_f1.z,0,-_f1.x,_f2.z,0,-_f2.x,-_f0.y,_f0.x,0,-_f1.y,_f1.x,0,-_f2.y,_f2.x,0];if(!satForAxes(axes,_v0,_v1,_v2,_extents)){return false;}// test 3 face normals from the aabb\naxes=[1,0,0,0,1,0,0,0,1];if(!satForAxes(axes,_v0,_v1,_v2,_extents)){return false;}// finally testing the face normal of the triangle\n// use already existing triangle edge vectors here\n_triangleNormal.crossVectors(_f0,_f1);axes=[_triangleNormal.x,_triangleNormal.y,_triangleNormal.z];return satForAxes(axes,_v0,_v1,_v2,_extents);}clampPoint(point,target){if(target===undefined){console.warn('THREE.Box3: .clampPoint() target is now required');target=new Vector3();}return target.copy(point).clamp(this.min,this.max);}distanceToPoint(point){const clampedPoint=_vector$1.copy(point).clamp(this.min,this.max);return clampedPoint.sub(point).length();}getBoundingSphere(target){if(target===undefined){console.error('THREE.Box3: .getBoundingSphere() target is now required');//target = new Sphere(); // removed to avoid cyclic dependency\n}this.getCenter(target.center);target.radius=this.getSize(_vector$1).length()*0.5;return target;}intersect(box){this.min.max(box.min);this.max.min(box.max);// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\nif(this.isEmpty())this.makeEmpty();return this;}union(box){this.min.min(box.min);this.max.max(box.max);return this;}applyMatrix4(matrix){// transform of empty box is an empty box.\nif(this.isEmpty())return this;// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n_points[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(matrix);// 000\n_points[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(matrix);// 001\n_points[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(matrix);// 010\n_points[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(matrix);// 011\n_points[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(matrix);// 100\n_points[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(matrix);// 101\n_points[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(matrix);// 110\n_points[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(matrix);// 111\nthis.setFromPoints(_points);return this;}translate(offset){this.min.add(offset);this.max.add(offset);return this;}equals(box){return box.min.equals(this.min)&&box.max.equals(this.max);}}function satForAxes(axes,v0,v1,v2,extents){for(let i=0,j=axes.length-3;i<=j;i+=3){_testAxis.fromArray(axes,i);// project the aabb onto the seperating axis\nconst r=extents.x*Math.abs(_testAxis.x)+extents.y*Math.abs(_testAxis.y)+extents.z*Math.abs(_testAxis.z);// project all 3 vertices of the triangle onto the seperating axis\nconst p0=v0.dot(_testAxis);const p1=v1.dot(_testAxis);const p2=v2.dot(_testAxis);// actual test, basically see if either of the most extreme of the triangle points intersects r\nif(Math.max(-Math.max(p0,p1,p2),Math.min(p0,p1,p2))>r){// points of the projected triangle are outside the projected half-length of the aabb\n// the axis is seperating and we can exit\nreturn false;}}return true;}const _points=[/*@__PURE__*/new Vector3(),/*@__PURE__*/new Vector3(),/*@__PURE__*/new Vector3(),/*@__PURE__*/new Vector3(),/*@__PURE__*/new Vector3(),/*@__PURE__*/new Vector3(),/*@__PURE__*/new Vector3(),/*@__PURE__*/new Vector3()];const _vector$1=/*@__PURE__*/new Vector3();const _box=/*@__PURE__*/new Box3();// triangle centered vertices\nconst _v0=/*@__PURE__*/new Vector3();const _v1=/*@__PURE__*/new Vector3();const _v2=/*@__PURE__*/new Vector3();// triangle edge vectors\nconst _f0=/*@__PURE__*/new Vector3();const _f1=/*@__PURE__*/new Vector3();const _f2=/*@__PURE__*/new Vector3();const _center=/*@__PURE__*/new Vector3();const _extents=/*@__PURE__*/new Vector3();const _triangleNormal=/*@__PURE__*/new Vector3();const _testAxis=/*@__PURE__*/new Vector3();const _box$1=/*@__PURE__*/new Box3();class Sphere{constructor(center,radius){this.center=center!==undefined?center:new Vector3();this.radius=radius!==undefined?radius:-1;}set(center,radius){this.center.copy(center);this.radius=radius;return this;}setFromPoints(points,optionalCenter){const center=this.center;if(optionalCenter!==undefined){center.copy(optionalCenter);}else{_box$1.setFromPoints(points).getCenter(center);}let maxRadiusSq=0;for(let i=0,il=points.length;i<il;i++){maxRadiusSq=Math.max(maxRadiusSq,center.distanceToSquared(points[i]));}this.radius=Math.sqrt(maxRadiusSq);return this;}clone(){return new this.constructor().copy(this);}copy(sphere){this.center.copy(sphere.center);this.radius=sphere.radius;return this;}isEmpty(){return this.radius<0;}makeEmpty(){this.center.set(0,0,0);this.radius=-1;return this;}containsPoint(point){return point.distanceToSquared(this.center)<=this.radius*this.radius;}distanceToPoint(point){return point.distanceTo(this.center)-this.radius;}intersectsSphere(sphere){const radiusSum=this.radius+sphere.radius;return sphere.center.distanceToSquared(this.center)<=radiusSum*radiusSum;}intersectsBox(box){return box.intersectsSphere(this);}intersectsPlane(plane){return Math.abs(plane.distanceToPoint(this.center))<=this.radius;}clampPoint(point,target){const deltaLengthSq=this.center.distanceToSquared(point);if(target===undefined){console.warn('THREE.Sphere: .clampPoint() target is now required');target=new Vector3();}target.copy(point);if(deltaLengthSq>this.radius*this.radius){target.sub(this.center).normalize();target.multiplyScalar(this.radius).add(this.center);}return target;}getBoundingBox(target){if(target===undefined){console.warn('THREE.Sphere: .getBoundingBox() target is now required');target=new Box3();}if(this.isEmpty()){// Empty sphere produces empty bounding box\ntarget.makeEmpty();return target;}target.set(this.center,this.center);target.expandByScalar(this.radius);return target;}applyMatrix4(matrix){this.center.applyMatrix4(matrix);this.radius=this.radius*matrix.getMaxScaleOnAxis();return this;}translate(offset){this.center.add(offset);return this;}equals(sphere){return sphere.center.equals(this.center)&&sphere.radius===this.radius;}}const _vector$2=/*@__PURE__*/new Vector3();const _segCenter=/*@__PURE__*/new Vector3();const _segDir=/*@__PURE__*/new Vector3();const _diff=/*@__PURE__*/new Vector3();const _edge1=/*@__PURE__*/new Vector3();const _edge2=/*@__PURE__*/new Vector3();const _normal=/*@__PURE__*/new Vector3();class Ray{constructor(origin,direction){this.origin=origin!==undefined?origin:new Vector3();this.direction=direction!==undefined?direction:new Vector3(0,0,-1);}set(origin,direction){this.origin.copy(origin);this.direction.copy(direction);return this;}clone(){return new this.constructor().copy(this);}copy(ray){this.origin.copy(ray.origin);this.direction.copy(ray.direction);return this;}at(t,target){if(target===undefined){console.warn('THREE.Ray: .at() target is now required');target=new Vector3();}return target.copy(this.direction).multiplyScalar(t).add(this.origin);}lookAt(v){this.direction.copy(v).sub(this.origin).normalize();return this;}recast(t){this.origin.copy(this.at(t,_vector$2));return this;}closestPointToPoint(point,target){if(target===undefined){console.warn('THREE.Ray: .closestPointToPoint() target is now required');target=new Vector3();}target.subVectors(point,this.origin);const directionDistance=target.dot(this.direction);if(directionDistance<0){return target.copy(this.origin);}return target.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);}distanceToPoint(point){return Math.sqrt(this.distanceSqToPoint(point));}distanceSqToPoint(point){const directionDistance=_vector$2.subVectors(point,this.origin).dot(this.direction);// point behind the ray\nif(directionDistance<0){return this.origin.distanceToSquared(point);}_vector$2.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);return _vector$2.distanceToSquared(point);}distanceSqToSegment(v0,v1,optionalPointOnRay,optionalPointOnSegment){// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n// It returns the min distance between the ray and the segment\n// defined by v0 and v1\n// It can also set two optional targets :\n// - The closest point on the ray\n// - The closest point on the segment\n_segCenter.copy(v0).add(v1).multiplyScalar(0.5);_segDir.copy(v1).sub(v0).normalize();_diff.copy(this.origin).sub(_segCenter);const segExtent=v0.distanceTo(v1)*0.5;const a01=-this.direction.dot(_segDir);const b0=_diff.dot(this.direction);const b1=-_diff.dot(_segDir);const c=_diff.lengthSq();const det=Math.abs(1-a01*a01);let s0,s1,sqrDist,extDet;if(det>0){// The ray and segment are not parallel.\ns0=a01*b1-b0;s1=a01*b0-b1;extDet=segExtent*det;if(s0>=0){if(s1>=-extDet){if(s1<=extDet){// region 0\n// Minimum at interior points of ray and segment.\nconst invDet=1/det;s0*=invDet;s1*=invDet;sqrDist=s0*(s0+a01*s1+2*b0)+s1*(a01*s0+s1+2*b1)+c;}else{// region 1\ns1=segExtent;s0=Math.max(0,-(a01*s1+b0));sqrDist=-s0*s0+s1*(s1+2*b1)+c;}}else{// region 5\ns1=-segExtent;s0=Math.max(0,-(a01*s1+b0));sqrDist=-s0*s0+s1*(s1+2*b1)+c;}}else{if(s1<=-extDet){// region 4\ns0=Math.max(0,-(-a01*segExtent+b0));s1=s0>0?-segExtent:Math.min(Math.max(-segExtent,-b1),segExtent);sqrDist=-s0*s0+s1*(s1+2*b1)+c;}else if(s1<=extDet){// region 3\ns0=0;s1=Math.min(Math.max(-segExtent,-b1),segExtent);sqrDist=s1*(s1+2*b1)+c;}else{// region 2\ns0=Math.max(0,-(a01*segExtent+b0));s1=s0>0?segExtent:Math.min(Math.max(-segExtent,-b1),segExtent);sqrDist=-s0*s0+s1*(s1+2*b1)+c;}}}else{// Ray and segment are parallel.\ns1=a01>0?-segExtent:segExtent;s0=Math.max(0,-(a01*s1+b0));sqrDist=-s0*s0+s1*(s1+2*b1)+c;}if(optionalPointOnRay){optionalPointOnRay.copy(this.direction).multiplyScalar(s0).add(this.origin);}if(optionalPointOnSegment){optionalPointOnSegment.copy(_segDir).multiplyScalar(s1).add(_segCenter);}return sqrDist;}intersectSphere(sphere,target){_vector$2.subVectors(sphere.center,this.origin);const tca=_vector$2.dot(this.direction);const d2=_vector$2.dot(_vector$2)-tca*tca;const radius2=sphere.radius*sphere.radius;if(d2>radius2)return null;const thc=Math.sqrt(radius2-d2);// t0 = first intersect point - entrance on front of sphere\nconst t0=tca-thc;// t1 = second intersect point - exit point on back of sphere\nconst t1=tca+thc;// test to see if both t0 and t1 are behind the ray - if so, return null\nif(t0<0&&t1<0)return null;// test to see if t0 is behind the ray:\n// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n// in order to always return an intersect point that is in front of the ray.\nif(t0<0)return this.at(t1,target);// else t0 is in front of the ray, so return the first collision point scaled by t0\nreturn this.at(t0,target);}intersectsSphere(sphere){return this.distanceSqToPoint(sphere.center)<=sphere.radius*sphere.radius;}distanceToPlane(plane){const denominator=plane.normal.dot(this.direction);if(denominator===0){// line is coplanar, return origin\nif(plane.distanceToPoint(this.origin)===0){return 0;}// Null is preferable to undefined since undefined means.... it is undefined\nreturn null;}const t=-(this.origin.dot(plane.normal)+plane.constant)/denominator;// Return if the ray never intersects the plane\nreturn t>=0?t:null;}intersectPlane(plane,target){const t=this.distanceToPlane(plane);if(t===null){return null;}return this.at(t,target);}intersectsPlane(plane){// check if the ray lies on the plane first\nconst distToPoint=plane.distanceToPoint(this.origin);if(distToPoint===0){return true;}const denominator=plane.normal.dot(this.direction);if(denominator*distToPoint<0){return true;}// ray origin is behind the plane (and is pointing behind it)\nreturn false;}intersectBox(box,target){let tmin,tmax,tymin,tymax,tzmin,tzmax;const invdirx=1/this.direction.x,invdiry=1/this.direction.y,invdirz=1/this.direction.z;const origin=this.origin;if(invdirx>=0){tmin=(box.min.x-origin.x)*invdirx;tmax=(box.max.x-origin.x)*invdirx;}else{tmin=(box.max.x-origin.x)*invdirx;tmax=(box.min.x-origin.x)*invdirx;}if(invdiry>=0){tymin=(box.min.y-origin.y)*invdiry;tymax=(box.max.y-origin.y)*invdiry;}else{tymin=(box.max.y-origin.y)*invdiry;tymax=(box.min.y-origin.y)*invdiry;}if(tmin>tymax||tymin>tmax)return null;// These lines also handle the case where tmin or tmax is NaN\n// (result of 0 * Infinity). x !== x returns true if x is NaN\nif(tymin>tmin||tmin!==tmin)tmin=tymin;if(tymax<tmax||tmax!==tmax)tmax=tymax;if(invdirz>=0){tzmin=(box.min.z-origin.z)*invdirz;tzmax=(box.max.z-origin.z)*invdirz;}else{tzmin=(box.max.z-origin.z)*invdirz;tzmax=(box.min.z-origin.z)*invdirz;}if(tmin>tzmax||tzmin>tmax)return null;if(tzmin>tmin||tmin!==tmin)tmin=tzmin;if(tzmax<tmax||tmax!==tmax)tmax=tzmax;//return point closest to the ray (positive side)\nif(tmax<0)return null;return this.at(tmin>=0?tmin:tmax,target);}intersectsBox(box){return this.intersectBox(box,_vector$2)!==null;}intersectTriangle(a,b,c,backfaceCulling,target){// Compute the offset origin, edges, and normal.\n// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n_edge1.subVectors(b,a);_edge2.subVectors(c,a);_normal.crossVectors(_edge1,_edge2);// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\nlet DdN=this.direction.dot(_normal);let sign;if(DdN>0){if(backfaceCulling)return null;sign=1;}else if(DdN<0){sign=-1;DdN=-DdN;}else{return null;}_diff.subVectors(this.origin,a);const DdQxE2=sign*this.direction.dot(_edge2.crossVectors(_diff,_edge2));// b1 < 0, no intersection\nif(DdQxE2<0){return null;}const DdE1xQ=sign*this.direction.dot(_edge1.cross(_diff));// b2 < 0, no intersection\nif(DdE1xQ<0){return null;}// b1+b2 > 1, no intersection\nif(DdQxE2+DdE1xQ>DdN){return null;}// Line intersects triangle, check if ray does.\nconst QdN=-sign*_diff.dot(_normal);// t < 0, no intersection\nif(QdN<0){return null;}// Ray intersects triangle.\nreturn this.at(QdN/DdN,target);}applyMatrix4(matrix4){this.origin.applyMatrix4(matrix4);this.direction.transformDirection(matrix4);return this;}equals(ray){return ray.origin.equals(this.origin)&&ray.direction.equals(this.direction);}}class Matrix4{constructor(){Object.defineProperty(this,'isMatrix4',{value:true});this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];if(arguments.length>0){console.error('THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.');}}set(n11,n12,n13,n14,n21,n22,n23,n24,n31,n32,n33,n34,n41,n42,n43,n44){const te=this.elements;te[0]=n11;te[4]=n12;te[8]=n13;te[12]=n14;te[1]=n21;te[5]=n22;te[9]=n23;te[13]=n24;te[2]=n31;te[6]=n32;te[10]=n33;te[14]=n34;te[3]=n41;te[7]=n42;te[11]=n43;te[15]=n44;return this;}identity(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this;}clone(){return new Matrix4().fromArray(this.elements);}copy(m){const te=this.elements;const me=m.elements;te[0]=me[0];te[1]=me[1];te[2]=me[2];te[3]=me[3];te[4]=me[4];te[5]=me[5];te[6]=me[6];te[7]=me[7];te[8]=me[8];te[9]=me[9];te[10]=me[10];te[11]=me[11];te[12]=me[12];te[13]=me[13];te[14]=me[14];te[15]=me[15];return this;}copyPosition(m){const te=this.elements,me=m.elements;te[12]=me[12];te[13]=me[13];te[14]=me[14];return this;}setFromMatrix3(m){const me=m.elements;this.set(me[0],me[3],me[6],0,me[1],me[4],me[7],0,me[2],me[5],me[8],0,0,0,0,1);return this;}extractBasis(xAxis,yAxis,zAxis){xAxis.setFromMatrixColumn(this,0);yAxis.setFromMatrixColumn(this,1);zAxis.setFromMatrixColumn(this,2);return this;}makeBasis(xAxis,yAxis,zAxis){this.set(xAxis.x,yAxis.x,zAxis.x,0,xAxis.y,yAxis.y,zAxis.y,0,xAxis.z,yAxis.z,zAxis.z,0,0,0,0,1);return this;}extractRotation(m){// this method does not support reflection matrices\nconst te=this.elements;const me=m.elements;const scaleX=1/_v1$1.setFromMatrixColumn(m,0).length();const scaleY=1/_v1$1.setFromMatrixColumn(m,1).length();const scaleZ=1/_v1$1.setFromMatrixColumn(m,2).length();te[0]=me[0]*scaleX;te[1]=me[1]*scaleX;te[2]=me[2]*scaleX;te[3]=0;te[4]=me[4]*scaleY;te[5]=me[5]*scaleY;te[6]=me[6]*scaleY;te[7]=0;te[8]=me[8]*scaleZ;te[9]=me[9]*scaleZ;te[10]=me[10]*scaleZ;te[11]=0;te[12]=0;te[13]=0;te[14]=0;te[15]=1;return this;}makeRotationFromEuler(euler){if(!(euler&&euler.isEuler)){console.error('THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.');}const te=this.elements;const x=euler.x,y=euler.y,z=euler.z;const a=Math.cos(x),b=Math.sin(x);const c=Math.cos(y),d=Math.sin(y);const e=Math.cos(z),f=Math.sin(z);if(euler.order==='XYZ'){const ae=a*e,af=a*f,be=b*e,bf=b*f;te[0]=c*e;te[4]=-c*f;te[8]=d;te[1]=af+be*d;te[5]=ae-bf*d;te[9]=-b*c;te[2]=bf-ae*d;te[6]=be+af*d;te[10]=a*c;}else if(euler.order==='YXZ'){const ce=c*e,cf=c*f,de=d*e,df=d*f;te[0]=ce+df*b;te[4]=de*b-cf;te[8]=a*d;te[1]=a*f;te[5]=a*e;te[9]=-b;te[2]=cf*b-de;te[6]=df+ce*b;te[10]=a*c;}else if(euler.order==='ZXY'){const ce=c*e,cf=c*f,de=d*e,df=d*f;te[0]=ce-df*b;te[4]=-a*f;te[8]=de+cf*b;te[1]=cf+de*b;te[5]=a*e;te[9]=df-ce*b;te[2]=-a*d;te[6]=b;te[10]=a*c;}else if(euler.order==='ZYX'){const ae=a*e,af=a*f,be=b*e,bf=b*f;te[0]=c*e;te[4]=be*d-af;te[8]=ae*d+bf;te[1]=c*f;te[5]=bf*d+ae;te[9]=af*d-be;te[2]=-d;te[6]=b*c;te[10]=a*c;}else if(euler.order==='YZX'){const ac=a*c,ad=a*d,bc=b*c,bd=b*d;te[0]=c*e;te[4]=bd-ac*f;te[8]=bc*f+ad;te[1]=f;te[5]=a*e;te[9]=-b*e;te[2]=-d*e;te[6]=ad*f+bc;te[10]=ac-bd*f;}else if(euler.order==='XZY'){const ac=a*c,ad=a*d,bc=b*c,bd=b*d;te[0]=c*e;te[4]=-f;te[8]=d*e;te[1]=ac*f+bd;te[5]=a*e;te[9]=ad*f-bc;te[2]=bc*f-ad;te[6]=b*e;te[10]=bd*f+ac;}// bottom row\nte[3]=0;te[7]=0;te[11]=0;// last column\nte[12]=0;te[13]=0;te[14]=0;te[15]=1;return this;}makeRotationFromQuaternion(q){return this.compose(_zero,q,_one);}lookAt(eye,target,up){const te=this.elements;_z.subVectors(eye,target);if(_z.lengthSq()===0){// eye and target are in the same position\n_z.z=1;}_z.normalize();_x.crossVectors(up,_z);if(_x.lengthSq()===0){// up and z are parallel\nif(Math.abs(up.z)===1){_z.x+=0.0001;}else{_z.z+=0.0001;}_z.normalize();_x.crossVectors(up,_z);}_x.normalize();_y.crossVectors(_z,_x);te[0]=_x.x;te[4]=_y.x;te[8]=_z.x;te[1]=_x.y;te[5]=_y.y;te[9]=_z.y;te[2]=_x.z;te[6]=_y.z;te[10]=_z.z;return this;}multiply(m,n){if(n!==undefined){console.warn('THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.');return this.multiplyMatrices(m,n);}return this.multiplyMatrices(this,m);}premultiply(m){return this.multiplyMatrices(m,this);}multiplyMatrices(a,b){const ae=a.elements;const be=b.elements;const te=this.elements;const a11=ae[0],a12=ae[4],a13=ae[8],a14=ae[12];const a21=ae[1],a22=ae[5],a23=ae[9],a24=ae[13];const a31=ae[2],a32=ae[6],a33=ae[10],a34=ae[14];const a41=ae[3],a42=ae[7],a43=ae[11],a44=ae[15];const b11=be[0],b12=be[4],b13=be[8],b14=be[12];const b21=be[1],b22=be[5],b23=be[9],b24=be[13];const b31=be[2],b32=be[6],b33=be[10],b34=be[14];const b41=be[3],b42=be[7],b43=be[11],b44=be[15];te[0]=a11*b11+a12*b21+a13*b31+a14*b41;te[4]=a11*b12+a12*b22+a13*b32+a14*b42;te[8]=a11*b13+a12*b23+a13*b33+a14*b43;te[12]=a11*b14+a12*b24+a13*b34+a14*b44;te[1]=a21*b11+a22*b21+a23*b31+a24*b41;te[5]=a21*b12+a22*b22+a23*b32+a24*b42;te[9]=a21*b13+a22*b23+a23*b33+a24*b43;te[13]=a21*b14+a22*b24+a23*b34+a24*b44;te[2]=a31*b11+a32*b21+a33*b31+a34*b41;te[6]=a31*b12+a32*b22+a33*b32+a34*b42;te[10]=a31*b13+a32*b23+a33*b33+a34*b43;te[14]=a31*b14+a32*b24+a33*b34+a34*b44;te[3]=a41*b11+a42*b21+a43*b31+a44*b41;te[7]=a41*b12+a42*b22+a43*b32+a44*b42;te[11]=a41*b13+a42*b23+a43*b33+a44*b43;te[15]=a41*b14+a42*b24+a43*b34+a44*b44;return this;}multiplyScalar(s){const te=this.elements;te[0]*=s;te[4]*=s;te[8]*=s;te[12]*=s;te[1]*=s;te[5]*=s;te[9]*=s;te[13]*=s;te[2]*=s;te[6]*=s;te[10]*=s;te[14]*=s;te[3]*=s;te[7]*=s;te[11]*=s;te[15]*=s;return this;}determinant(){const te=this.elements;const n11=te[0],n12=te[4],n13=te[8],n14=te[12];const n21=te[1],n22=te[5],n23=te[9],n24=te[13];const n31=te[2],n32=te[6],n33=te[10],n34=te[14];const n41=te[3],n42=te[7],n43=te[11],n44=te[15];//TODO: make this more efficient\n//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\nreturn n41*(+n14*n23*n32-n13*n24*n32-n14*n22*n33+n12*n24*n33+n13*n22*n34-n12*n23*n34)+n42*(+n11*n23*n34-n11*n24*n33+n14*n21*n33-n13*n21*n34+n13*n24*n31-n14*n23*n31)+n43*(+n11*n24*n32-n11*n22*n34-n14*n21*n32+n12*n21*n34+n14*n22*n31-n12*n24*n31)+n44*(-n13*n22*n31-n11*n23*n32+n11*n22*n33+n13*n21*n32-n12*n21*n33+n12*n23*n31);}transpose(){const te=this.elements;let tmp;tmp=te[1];te[1]=te[4];te[4]=tmp;tmp=te[2];te[2]=te[8];te[8]=tmp;tmp=te[6];te[6]=te[9];te[9]=tmp;tmp=te[3];te[3]=te[12];te[12]=tmp;tmp=te[7];te[7]=te[13];te[13]=tmp;tmp=te[11];te[11]=te[14];te[14]=tmp;return this;}setPosition(x,y,z){const te=this.elements;if(x.isVector3){te[12]=x.x;te[13]=x.y;te[14]=x.z;}else{te[12]=x;te[13]=y;te[14]=z;}return this;}invert(){// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\nconst te=this.elements,n11=te[0],n21=te[1],n31=te[2],n41=te[3],n12=te[4],n22=te[5],n32=te[6],n42=te[7],n13=te[8],n23=te[9],n33=te[10],n43=te[11],n14=te[12],n24=te[13],n34=te[14],n44=te[15],t11=n23*n34*n42-n24*n33*n42+n24*n32*n43-n22*n34*n43-n23*n32*n44+n22*n33*n44,t12=n14*n33*n42-n13*n34*n42-n14*n32*n43+n12*n34*n43+n13*n32*n44-n12*n33*n44,t13=n13*n24*n42-n14*n23*n42+n14*n22*n43-n12*n24*n43-n13*n22*n44+n12*n23*n44,t14=n14*n23*n32-n13*n24*n32-n14*n22*n33+n12*n24*n33+n13*n22*n34-n12*n23*n34;const det=n11*t11+n21*t12+n31*t13+n41*t14;if(det===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const detInv=1/det;te[0]=t11*detInv;te[1]=(n24*n33*n41-n23*n34*n41-n24*n31*n43+n21*n34*n43+n23*n31*n44-n21*n33*n44)*detInv;te[2]=(n22*n34*n41-n24*n32*n41+n24*n31*n42-n21*n34*n42-n22*n31*n44+n21*n32*n44)*detInv;te[3]=(n23*n32*n41-n22*n33*n41-n23*n31*n42+n21*n33*n42+n22*n31*n43-n21*n32*n43)*detInv;te[4]=t12*detInv;te[5]=(n13*n34*n41-n14*n33*n41+n14*n31*n43-n11*n34*n43-n13*n31*n44+n11*n33*n44)*detInv;te[6]=(n14*n32*n41-n12*n34*n41-n14*n31*n42+n11*n34*n42+n12*n31*n44-n11*n32*n44)*detInv;te[7]=(n12*n33*n41-n13*n32*n41+n13*n31*n42-n11*n33*n42-n12*n31*n43+n11*n32*n43)*detInv;te[8]=t13*detInv;te[9]=(n14*n23*n41-n13*n24*n41-n14*n21*n43+n11*n24*n43+n13*n21*n44-n11*n23*n44)*detInv;te[10]=(n12*n24*n41-n14*n22*n41+n14*n21*n42-n11*n24*n42-n12*n21*n44+n11*n22*n44)*detInv;te[11]=(n13*n22*n41-n12*n23*n41-n13*n21*n42+n11*n23*n42+n12*n21*n43-n11*n22*n43)*detInv;te[12]=t14*detInv;te[13]=(n13*n24*n31-n14*n23*n31+n14*n21*n33-n11*n24*n33-n13*n21*n34+n11*n23*n34)*detInv;te[14]=(n14*n22*n31-n12*n24*n31-n14*n21*n32+n11*n24*n32+n12*n21*n34-n11*n22*n34)*detInv;te[15]=(n12*n23*n31-n13*n22*n31+n13*n21*n32-n11*n23*n32-n12*n21*n33+n11*n22*n33)*detInv;return this;}scale(v){const te=this.elements;const x=v.x,y=v.y,z=v.z;te[0]*=x;te[4]*=y;te[8]*=z;te[1]*=x;te[5]*=y;te[9]*=z;te[2]*=x;te[6]*=y;te[10]*=z;te[3]*=x;te[7]*=y;te[11]*=z;return this;}getMaxScaleOnAxis(){const te=this.elements;const scaleXSq=te[0]*te[0]+te[1]*te[1]+te[2]*te[2];const scaleYSq=te[4]*te[4]+te[5]*te[5]+te[6]*te[6];const scaleZSq=te[8]*te[8]+te[9]*te[9]+te[10]*te[10];return Math.sqrt(Math.max(scaleXSq,scaleYSq,scaleZSq));}makeTranslation(x,y,z){this.set(1,0,0,x,0,1,0,y,0,0,1,z,0,0,0,1);return this;}makeRotationX(theta){const c=Math.cos(theta),s=Math.sin(theta);this.set(1,0,0,0,0,c,-s,0,0,s,c,0,0,0,0,1);return this;}makeRotationY(theta){const c=Math.cos(theta),s=Math.sin(theta);this.set(c,0,s,0,0,1,0,0,-s,0,c,0,0,0,0,1);return this;}makeRotationZ(theta){const c=Math.cos(theta),s=Math.sin(theta);this.set(c,-s,0,0,s,c,0,0,0,0,1,0,0,0,0,1);return this;}makeRotationAxis(axis,angle){// Based on http://www.gamedev.net/reference/articles/article1199.asp\nconst c=Math.cos(angle);const s=Math.sin(angle);const t=1-c;const x=axis.x,y=axis.y,z=axis.z;const tx=t*x,ty=t*y;this.set(tx*x+c,tx*y-s*z,tx*z+s*y,0,tx*y+s*z,ty*y+c,ty*z-s*x,0,tx*z-s*y,ty*z+s*x,t*z*z+c,0,0,0,0,1);return this;}makeScale(x,y,z){this.set(x,0,0,0,0,y,0,0,0,0,z,0,0,0,0,1);return this;}makeShear(x,y,z){this.set(1,y,z,0,x,1,z,0,x,y,1,0,0,0,0,1);return this;}compose(position,quaternion,scale){const te=this.elements;const x=quaternion._x,y=quaternion._y,z=quaternion._z,w=quaternion._w;const x2=x+x,y2=y+y,z2=z+z;const xx=x*x2,xy=x*y2,xz=x*z2;const yy=y*y2,yz=y*z2,zz=z*z2;const wx=w*x2,wy=w*y2,wz=w*z2;const sx=scale.x,sy=scale.y,sz=scale.z;te[0]=(1-(yy+zz))*sx;te[1]=(xy+wz)*sx;te[2]=(xz-wy)*sx;te[3]=0;te[4]=(xy-wz)*sy;te[5]=(1-(xx+zz))*sy;te[6]=(yz+wx)*sy;te[7]=0;te[8]=(xz+wy)*sz;te[9]=(yz-wx)*sz;te[10]=(1-(xx+yy))*sz;te[11]=0;te[12]=position.x;te[13]=position.y;te[14]=position.z;te[15]=1;return this;}decompose(position,quaternion,scale){const te=this.elements;let sx=_v1$1.set(te[0],te[1],te[2]).length();const sy=_v1$1.set(te[4],te[5],te[6]).length();const sz=_v1$1.set(te[8],te[9],te[10]).length();// if determine is negative, we need to invert one scale\nconst det=this.determinant();if(det<0)sx=-sx;position.x=te[12];position.y=te[13];position.z=te[14];// scale the rotation part\n_m1.copy(this);const invSX=1/sx;const invSY=1/sy;const invSZ=1/sz;_m1.elements[0]*=invSX;_m1.elements[1]*=invSX;_m1.elements[2]*=invSX;_m1.elements[4]*=invSY;_m1.elements[5]*=invSY;_m1.elements[6]*=invSY;_m1.elements[8]*=invSZ;_m1.elements[9]*=invSZ;_m1.elements[10]*=invSZ;quaternion.setFromRotationMatrix(_m1);scale.x=sx;scale.y=sy;scale.z=sz;return this;}makePerspective(left,right,top,bottom,near,far){if(far===undefined){console.warn('THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.');}const te=this.elements;const x=2*near/(right-left);const y=2*near/(top-bottom);const a=(right+left)/(right-left);const b=(top+bottom)/(top-bottom);const c=-(far+near)/(far-near);const d=-2*far*near/(far-near);te[0]=x;te[4]=0;te[8]=a;te[12]=0;te[1]=0;te[5]=y;te[9]=b;te[13]=0;te[2]=0;te[6]=0;te[10]=c;te[14]=d;te[3]=0;te[7]=0;te[11]=-1;te[15]=0;return this;}makeOrthographic(left,right,top,bottom,near,far){const te=this.elements;const w=1.0/(right-left);const h=1.0/(top-bottom);const p=1.0/(far-near);const x=(right+left)*w;const y=(top+bottom)*h;const z=(far+near)*p;te[0]=2*w;te[4]=0;te[8]=0;te[12]=-x;te[1]=0;te[5]=2*h;te[9]=0;te[13]=-y;te[2]=0;te[6]=0;te[10]=-2*p;te[14]=-z;te[3]=0;te[7]=0;te[11]=0;te[15]=1;return this;}equals(matrix){const te=this.elements;const me=matrix.elements;for(let i=0;i<16;i++){if(te[i]!==me[i])return false;}return true;}fromArray(array,offset=0){for(let i=0;i<16;i++){this.elements[i]=array[i+offset];}return this;}toArray(array=[],offset=0){const te=this.elements;array[offset]=te[0];array[offset+1]=te[1];array[offset+2]=te[2];array[offset+3]=te[3];array[offset+4]=te[4];array[offset+5]=te[5];array[offset+6]=te[6];array[offset+7]=te[7];array[offset+8]=te[8];array[offset+9]=te[9];array[offset+10]=te[10];array[offset+11]=te[11];array[offset+12]=te[12];array[offset+13]=te[13];array[offset+14]=te[14];array[offset+15]=te[15];return array;}}const _v1$1=/*@__PURE__*/new Vector3();const _m1=/*@__PURE__*/new Matrix4();const _zero=/*@__PURE__*/new Vector3(0,0,0);const _one=/*@__PURE__*/new Vector3(1,1,1);const _x=/*@__PURE__*/new Vector3();const _y=/*@__PURE__*/new Vector3();const _z=/*@__PURE__*/new Vector3();class Euler{constructor(x=0,y=0,z=0,order=Euler.DefaultOrder){Object.defineProperty(this,'isEuler',{value:true});this._x=x;this._y=y;this._z=z;this._order=order;}get x(){return this._x;}set x(value){this._x=value;this._onChangeCallback();}get y(){return this._y;}set y(value){this._y=value;this._onChangeCallback();}get z(){return this._z;}set z(value){this._z=value;this._onChangeCallback();}get order(){return this._order;}set order(value){this._order=value;this._onChangeCallback();}set(x,y,z,order){this._x=x;this._y=y;this._z=z;this._order=order||this._order;this._onChangeCallback();return this;}clone(){return new this.constructor(this._x,this._y,this._z,this._order);}copy(euler){this._x=euler._x;this._y=euler._y;this._z=euler._z;this._order=euler._order;this._onChangeCallback();return this;}setFromRotationMatrix(m,order,update){const clamp=MathUtils.clamp;// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\nconst te=m.elements;const m11=te[0],m12=te[4],m13=te[8];const m21=te[1],m22=te[5],m23=te[9];const m31=te[2],m32=te[6],m33=te[10];order=order||this._order;switch(order){case'XYZ':this._y=Math.asin(clamp(m13,-1,1));if(Math.abs(m13)<0.9999999){this._x=Math.atan2(-m23,m33);this._z=Math.atan2(-m12,m11);}else{this._x=Math.atan2(m32,m22);this._z=0;}break;case'YXZ':this._x=Math.asin(-clamp(m23,-1,1));if(Math.abs(m23)<0.9999999){this._y=Math.atan2(m13,m33);this._z=Math.atan2(m21,m22);}else{this._y=Math.atan2(-m31,m11);this._z=0;}break;case'ZXY':this._x=Math.asin(clamp(m32,-1,1));if(Math.abs(m32)<0.9999999){this._y=Math.atan2(-m31,m33);this._z=Math.atan2(-m12,m22);}else{this._y=0;this._z=Math.atan2(m21,m11);}break;case'ZYX':this._y=Math.asin(-clamp(m31,-1,1));if(Math.abs(m31)<0.9999999){this._x=Math.atan2(m32,m33);this._z=Math.atan2(m21,m11);}else{this._x=0;this._z=Math.atan2(-m12,m22);}break;case'YZX':this._z=Math.asin(clamp(m21,-1,1));if(Math.abs(m21)<0.9999999){this._x=Math.atan2(-m23,m22);this._y=Math.atan2(-m31,m11);}else{this._x=0;this._y=Math.atan2(m13,m33);}break;case'XZY':this._z=Math.asin(-clamp(m12,-1,1));if(Math.abs(m12)<0.9999999){this._x=Math.atan2(m32,m22);this._y=Math.atan2(m13,m11);}else{this._x=Math.atan2(-m23,m33);this._y=0;}break;default:console.warn('THREE.Euler: .setFromRotationMatrix() encountered an unknown order: '+order);}this._order=order;if(update!==false)this._onChangeCallback();return this;}setFromQuaternion(q,order,update){_matrix.makeRotationFromQuaternion(q);return this.setFromRotationMatrix(_matrix,order,update);}setFromVector3(v,order){return this.set(v.x,v.y,v.z,order||this._order);}reorder(newOrder){// WARNING: this discards revolution information -bhouston\n_quaternion$1.setFromEuler(this);return this.setFromQuaternion(_quaternion$1,newOrder);}equals(euler){return euler._x===this._x&&euler._y===this._y&&euler._z===this._z&&euler._order===this._order;}fromArray(array){this._x=array[0];this._y=array[1];this._z=array[2];if(array[3]!==undefined)this._order=array[3];this._onChangeCallback();return this;}toArray(array=[],offset=0){array[offset]=this._x;array[offset+1]=this._y;array[offset+2]=this._z;array[offset+3]=this._order;return array;}toVector3(optionalResult){if(optionalResult){return optionalResult.set(this._x,this._y,this._z);}else{return new Vector3(this._x,this._y,this._z);}}_onChange(callback){this._onChangeCallback=callback;return this;}_onChangeCallback(){}}Euler.DefaultOrder='XYZ';Euler.RotationOrders=['XYZ','YZX','ZXY','XZY','YXZ','ZYX'];const _matrix=/*@__PURE__*/new Matrix4();const _quaternion$1=/*@__PURE__*/new Quaternion();class Layers{constructor(){this.mask=1|0;}set(channel){this.mask=1<<channel|0;}enable(channel){this.mask|=1<<channel|0;}enableAll(){this.mask=0xffffffff|0;}toggle(channel){this.mask^=1<<channel|0;}disable(channel){this.mask&=~(1<<channel|0);}disableAll(){this.mask=0;}test(layers){return(this.mask&layers.mask)!==0;}}let _object3DId=0;const _v1$2=new Vector3();const _q1=new Quaternion();const _m1$1=new Matrix4();const _target=new Vector3();const _position=new Vector3();const _scale=new Vector3();const _quaternion$2=new Quaternion();const _xAxis=new Vector3(1,0,0);const _yAxis=new Vector3(0,1,0);const _zAxis=new Vector3(0,0,1);const _addedEvent={type:'added'};const _removedEvent={type:'removed'};function Object3D(){Object.defineProperty(this,'id',{value:_object3DId++});this.uuid=MathUtils.generateUUID();this.name='';this.type='Object3D';this.parent=null;this.children=[];this.up=Object3D.DefaultUp.clone();const position=new Vector3();const rotation=new Euler();const quaternion=new Quaternion();const scale=new Vector3(1,1,1);function onRotationChange(){quaternion.setFromEuler(rotation,false);}function onQuaternionChange(){rotation.setFromQuaternion(quaternion,undefined,false);}rotation._onChange(onRotationChange);quaternion._onChange(onQuaternionChange);Object.defineProperties(this,{position:{configurable:true,enumerable:true,value:position},rotation:{configurable:true,enumerable:true,value:rotation},quaternion:{configurable:true,enumerable:true,value:quaternion},scale:{configurable:true,enumerable:true,value:scale},modelViewMatrix:{value:new Matrix4()},normalMatrix:{value:new Matrix3()}});this.matrix=new Matrix4();this.matrixWorld=new Matrix4();this.matrixAutoUpdate=Object3D.DefaultMatrixAutoUpdate;this.matrixWorldNeedsUpdate=false;this.layers=new Layers();this.visible=true;this.castShadow=false;this.receiveShadow=false;this.frustumCulled=true;this.renderOrder=0;this.animations=[];this.userData={};}Object3D.DefaultUp=new Vector3(0,1,0);Object3D.DefaultMatrixAutoUpdate=true;Object3D.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:Object3D,isObject3D:true,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix4:function(matrix){if(this.matrixAutoUpdate)this.updateMatrix();this.matrix.premultiply(matrix);this.matrix.decompose(this.position,this.quaternion,this.scale);},applyQuaternion:function(q){this.quaternion.premultiply(q);return this;},setRotationFromAxisAngle:function(axis,angle){// assumes axis is normalized\nthis.quaternion.setFromAxisAngle(axis,angle);},setRotationFromEuler:function(euler){this.quaternion.setFromEuler(euler,true);},setRotationFromMatrix:function(m){// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\nthis.quaternion.setFromRotationMatrix(m);},setRotationFromQuaternion:function(q){// assumes q is normalized\nthis.quaternion.copy(q);},rotateOnAxis:function(axis,angle){// rotate object on axis in object space\n// axis is assumed to be normalized\n_q1.setFromAxisAngle(axis,angle);this.quaternion.multiply(_q1);return this;},rotateOnWorldAxis:function(axis,angle){// rotate object on axis in world space\n// axis is assumed to be normalized\n// method assumes no rotated parent\n_q1.setFromAxisAngle(axis,angle);this.quaternion.premultiply(_q1);return this;},rotateX:function(angle){return this.rotateOnAxis(_xAxis,angle);},rotateY:function(angle){return this.rotateOnAxis(_yAxis,angle);},rotateZ:function(angle){return this.rotateOnAxis(_zAxis,angle);},translateOnAxis:function(axis,distance){// translate object by distance along axis in object space\n// axis is assumed to be normalized\n_v1$2.copy(axis).applyQuaternion(this.quaternion);this.position.add(_v1$2.multiplyScalar(distance));return this;},translateX:function(distance){return this.translateOnAxis(_xAxis,distance);},translateY:function(distance){return this.translateOnAxis(_yAxis,distance);},translateZ:function(distance){return this.translateOnAxis(_zAxis,distance);},localToWorld:function(vector){return vector.applyMatrix4(this.matrixWorld);},worldToLocal:function(vector){return vector.applyMatrix4(_m1$1.copy(this.matrixWorld).invert());},lookAt:function(x,y,z){// This method does not support objects having non-uniformly-scaled parent(s)\nif(x.isVector3){_target.copy(x);}else{_target.set(x,y,z);}const parent=this.parent;this.updateWorldMatrix(true,false);_position.setFromMatrixPosition(this.matrixWorld);if(this.isCamera||this.isLight){_m1$1.lookAt(_position,_target,this.up);}else{_m1$1.lookAt(_target,_position,this.up);}this.quaternion.setFromRotationMatrix(_m1$1);if(parent){_m1$1.extractRotation(parent.matrixWorld);_q1.setFromRotationMatrix(_m1$1);this.quaternion.premultiply(_q1.invert());}},add:function(object){if(arguments.length>1){for(let i=0;i<arguments.length;i++){this.add(arguments[i]);}return this;}if(object===this){console.error('THREE.Object3D.add: object can\\'t be added as a child of itself.',object);return this;}if(object&&object.isObject3D){if(object.parent!==null){object.parent.remove(object);}object.parent=this;this.children.push(object);object.dispatchEvent(_addedEvent);}else{console.error('THREE.Object3D.add: object not an instance of THREE.Object3D.',object);}return this;},remove:function(object){if(arguments.length>1){for(let i=0;i<arguments.length;i++){this.remove(arguments[i]);}return this;}const index=this.children.indexOf(object);if(index!==-1){object.parent=null;this.children.splice(index,1);object.dispatchEvent(_removedEvent);}return this;},clear:function(){for(let i=0;i<this.children.length;i++){const object=this.children[i];object.parent=null;object.dispatchEvent(_removedEvent);}this.children.length=0;return this;},attach:function(object){// adds object as a child of this, while maintaining the object's world transform\nthis.updateWorldMatrix(true,false);_m1$1.copy(this.matrixWorld).invert();if(object.parent!==null){object.parent.updateWorldMatrix(true,false);_m1$1.multiply(object.parent.matrixWorld);}object.applyMatrix4(_m1$1);object.updateWorldMatrix(false,false);this.add(object);return this;},getObjectById:function(id){return this.getObjectByProperty('id',id);},getObjectByName:function(name){return this.getObjectByProperty('name',name);},getObjectByProperty:function(name,value){if(this[name]===value)return this;for(let i=0,l=this.children.length;i<l;i++){const child=this.children[i];const object=child.getObjectByProperty(name,value);if(object!==undefined){return object;}}return undefined;},getWorldPosition:function(target){if(target===undefined){console.warn('THREE.Object3D: .getWorldPosition() target is now required');target=new Vector3();}this.updateWorldMatrix(true,false);return target.setFromMatrixPosition(this.matrixWorld);},getWorldQuaternion:function(target){if(target===undefined){console.warn('THREE.Object3D: .getWorldQuaternion() target is now required');target=new Quaternion();}this.updateWorldMatrix(true,false);this.matrixWorld.decompose(_position,target,_scale);return target;},getWorldScale:function(target){if(target===undefined){console.warn('THREE.Object3D: .getWorldScale() target is now required');target=new Vector3();}this.updateWorldMatrix(true,false);this.matrixWorld.decompose(_position,_quaternion$2,target);return target;},getWorldDirection:function(target){if(target===undefined){console.warn('THREE.Object3D: .getWorldDirection() target is now required');target=new Vector3();}this.updateWorldMatrix(true,false);const e=this.matrixWorld.elements;return target.set(e[8],e[9],e[10]).normalize();},raycast:function(){},traverse:function(callback){callback(this);const children=this.children;for(let i=0,l=children.length;i<l;i++){children[i].traverse(callback);}},traverseVisible:function(callback){if(this.visible===false)return;callback(this);const children=this.children;for(let i=0,l=children.length;i<l;i++){children[i].traverseVisible(callback);}},traverseAncestors:function(callback){const parent=this.parent;if(parent!==null){callback(parent);parent.traverseAncestors(callback);}},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=true;},updateMatrixWorld:function(force){if(this.matrixAutoUpdate)this.updateMatrix();if(this.matrixWorldNeedsUpdate||force){if(this.parent===null){this.matrixWorld.copy(this.matrix);}else{this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix);}this.matrixWorldNeedsUpdate=false;force=true;}// update children\nconst children=this.children;for(let i=0,l=children.length;i<l;i++){children[i].updateMatrixWorld(force);}},updateWorldMatrix:function(updateParents,updateChildren){const parent=this.parent;if(updateParents===true&&parent!==null){parent.updateWorldMatrix(true,false);}if(this.matrixAutoUpdate)this.updateMatrix();if(this.parent===null){this.matrixWorld.copy(this.matrix);}else{this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix);}// update children\nif(updateChildren===true){const children=this.children;for(let i=0,l=children.length;i<l;i++){children[i].updateWorldMatrix(false,true);}}},toJSON:function(meta){// meta is a string when called from JSON.stringify\nconst isRootObject=meta===undefined||typeof meta==='string';const output={};// meta is a hash used to collect geometries, materials.\n// not providing it implies that this is the root object\n// being serialized.\nif(isRootObject){// initialize meta obj\nmeta={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}};output.metadata={version:4.5,type:'Object',generator:'Object3D.toJSON'};}// standard Object3D serialization\nconst object={};object.uuid=this.uuid;object.type=this.type;if(this.name!=='')object.name=this.name;if(this.castShadow===true)object.castShadow=true;if(this.receiveShadow===true)object.receiveShadow=true;if(this.visible===false)object.visible=false;if(this.frustumCulled===false)object.frustumCulled=false;if(this.renderOrder!==0)object.renderOrder=this.renderOrder;if(JSON.stringify(this.userData)!=='{}')object.userData=this.userData;object.layers=this.layers.mask;object.matrix=this.matrix.toArray();if(this.matrixAutoUpdate===false)object.matrixAutoUpdate=false;// object specific properties\nif(this.isInstancedMesh){object.type='InstancedMesh';object.count=this.count;object.instanceMatrix=this.instanceMatrix.toJSON();}//\nfunction serialize(library,element){if(library[element.uuid]===undefined){library[element.uuid]=element.toJSON(meta);}return element.uuid;}if(this.isMesh||this.isLine||this.isPoints){object.geometry=serialize(meta.geometries,this.geometry);const parameters=this.geometry.parameters;if(parameters!==undefined&&parameters.shapes!==undefined){const shapes=parameters.shapes;if(Array.isArray(shapes)){for(let i=0,l=shapes.length;i<l;i++){const shape=shapes[i];serialize(meta.shapes,shape);}}else{serialize(meta.shapes,shapes);}}}if(this.isSkinnedMesh){object.bindMode=this.bindMode;object.bindMatrix=this.bindMatrix.toArray();if(this.skeleton!==undefined){serialize(meta.skeletons,this.skeleton);object.skeleton=this.skeleton.uuid;}}if(this.material!==undefined){if(Array.isArray(this.material)){const uuids=[];for(let i=0,l=this.material.length;i<l;i++){uuids.push(serialize(meta.materials,this.material[i]));}object.material=uuids;}else{object.material=serialize(meta.materials,this.material);}}//\nif(this.children.length>0){object.children=[];for(let i=0;i<this.children.length;i++){object.children.push(this.children[i].toJSON(meta).object);}}//\nif(this.animations.length>0){object.animations=[];for(let i=0;i<this.animations.length;i++){const animation=this.animations[i];object.animations.push(serialize(meta.animations,animation));}}if(isRootObject){const geometries=extractFromCache(meta.geometries);const materials=extractFromCache(meta.materials);const textures=extractFromCache(meta.textures);const images=extractFromCache(meta.images);const shapes=extractFromCache(meta.shapes);const skeletons=extractFromCache(meta.skeletons);const animations=extractFromCache(meta.animations);if(geometries.length>0)output.geometries=geometries;if(materials.length>0)output.materials=materials;if(textures.length>0)output.textures=textures;if(images.length>0)output.images=images;if(shapes.length>0)output.shapes=shapes;if(skeletons.length>0)output.skeletons=skeletons;if(animations.length>0)output.animations=animations;}output.object=object;return output;// extract data from the cache hash\n// remove metadata on each item\n// and return as array\nfunction extractFromCache(cache){const values=[];for(const key in cache){const data=cache[key];delete data.metadata;values.push(data);}return values;}},clone:function(recursive){return new this.constructor().copy(this,recursive);},copy:function(source,recursive=true){this.name=source.name;this.up.copy(source.up);this.position.copy(source.position);this.rotation.order=source.rotation.order;this.quaternion.copy(source.quaternion);this.scale.copy(source.scale);this.matrix.copy(source.matrix);this.matrixWorld.copy(source.matrixWorld);this.matrixAutoUpdate=source.matrixAutoUpdate;this.matrixWorldNeedsUpdate=source.matrixWorldNeedsUpdate;this.layers.mask=source.layers.mask;this.visible=source.visible;this.castShadow=source.castShadow;this.receiveShadow=source.receiveShadow;this.frustumCulled=source.frustumCulled;this.renderOrder=source.renderOrder;this.userData=JSON.parse(JSON.stringify(source.userData));if(recursive===true){for(let i=0;i<source.children.length;i++){const child=source.children[i];this.add(child.clone());}}return this;}});const _vector1=/*@__PURE__*/new Vector3();const _vector2=/*@__PURE__*/new Vector3();const _normalMatrix=/*@__PURE__*/new Matrix3();class Plane{constructor(normal,constant){Object.defineProperty(this,'isPlane',{value:true});// normal is assumed to be normalized\nthis.normal=normal!==undefined?normal:new Vector3(1,0,0);this.constant=constant!==undefined?constant:0;}set(normal,constant){this.normal.copy(normal);this.constant=constant;return this;}setComponents(x,y,z,w){this.normal.set(x,y,z);this.constant=w;return this;}setFromNormalAndCoplanarPoint(normal,point){this.normal.copy(normal);this.constant=-point.dot(this.normal);return this;}setFromCoplanarPoints(a,b,c){const normal=_vector1.subVectors(c,b).cross(_vector2.subVectors(a,b)).normalize();// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\nthis.setFromNormalAndCoplanarPoint(normal,a);return this;}clone(){return new this.constructor().copy(this);}copy(plane){this.normal.copy(plane.normal);this.constant=plane.constant;return this;}normalize(){// Note: will lead to a divide by zero if the plane is invalid.\nconst inverseNormalLength=1.0/this.normal.length();this.normal.multiplyScalar(inverseNormalLength);this.constant*=inverseNormalLength;return this;}negate(){this.constant*=-1;this.normal.negate();return this;}distanceToPoint(point){return this.normal.dot(point)+this.constant;}distanceToSphere(sphere){return this.distanceToPoint(sphere.center)-sphere.radius;}projectPoint(point,target){if(target===undefined){console.warn('THREE.Plane: .projectPoint() target is now required');target=new Vector3();}return target.copy(this.normal).multiplyScalar(-this.distanceToPoint(point)).add(point);}intersectLine(line,target){if(target===undefined){console.warn('THREE.Plane: .intersectLine() target is now required');target=new Vector3();}const direction=line.delta(_vector1);const denominator=this.normal.dot(direction);if(denominator===0){// line is coplanar, return origin\nif(this.distanceToPoint(line.start)===0){return target.copy(line.start);}// Unsure if this is the correct method to handle this case.\nreturn undefined;}const t=-(line.start.dot(this.normal)+this.constant)/denominator;if(t<0||t>1){return undefined;}return target.copy(direction).multiplyScalar(t).add(line.start);}intersectsLine(line){// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\nconst startSign=this.distanceToPoint(line.start);const endSign=this.distanceToPoint(line.end);return startSign<0&&endSign>0||endSign<0&&startSign>0;}intersectsBox(box){return box.intersectsPlane(this);}intersectsSphere(sphere){return sphere.intersectsPlane(this);}coplanarPoint(target){if(target===undefined){console.warn('THREE.Plane: .coplanarPoint() target is now required');target=new Vector3();}return target.copy(this.normal).multiplyScalar(-this.constant);}applyMatrix4(matrix,optionalNormalMatrix){const normalMatrix=optionalNormalMatrix||_normalMatrix.getNormalMatrix(matrix);const referencePoint=this.coplanarPoint(_vector1).applyMatrix4(matrix);const normal=this.normal.applyMatrix3(normalMatrix).normalize();this.constant=-referencePoint.dot(normal);return this;}translate(offset){this.constant-=offset.dot(this.normal);return this;}equals(plane){return plane.normal.equals(this.normal)&&plane.constant===this.constant;}}const _v0$1=/*@__PURE__*/new Vector3();const _v1$3=/*@__PURE__*/new Vector3();const _v2$1=/*@__PURE__*/new Vector3();const _v3=/*@__PURE__*/new Vector3();const _vab=/*@__PURE__*/new Vector3();const _vac=/*@__PURE__*/new Vector3();const _vbc=/*@__PURE__*/new Vector3();const _vap=/*@__PURE__*/new Vector3();const _vbp=/*@__PURE__*/new Vector3();const _vcp=/*@__PURE__*/new Vector3();class Triangle{constructor(a,b,c){this.a=a!==undefined?a:new Vector3();this.b=b!==undefined?b:new Vector3();this.c=c!==undefined?c:new Vector3();}static getNormal(a,b,c,target){if(target===undefined){console.warn('THREE.Triangle: .getNormal() target is now required');target=new Vector3();}target.subVectors(c,b);_v0$1.subVectors(a,b);target.cross(_v0$1);const targetLengthSq=target.lengthSq();if(targetLengthSq>0){return target.multiplyScalar(1/Math.sqrt(targetLengthSq));}return target.set(0,0,0);}// static/instance method to calculate barycentric coordinates\n// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\nstatic getBarycoord(point,a,b,c,target){_v0$1.subVectors(c,a);_v1$3.subVectors(b,a);_v2$1.subVectors(point,a);const dot00=_v0$1.dot(_v0$1);const dot01=_v0$1.dot(_v1$3);const dot02=_v0$1.dot(_v2$1);const dot11=_v1$3.dot(_v1$3);const dot12=_v1$3.dot(_v2$1);const denom=dot00*dot11-dot01*dot01;if(target===undefined){console.warn('THREE.Triangle: .getBarycoord() target is now required');target=new Vector3();}// collinear or singular triangle\nif(denom===0){// arbitrary location outside of triangle?\n// not sure if this is the best idea, maybe should be returning undefined\nreturn target.set(-2,-1,-1);}const invDenom=1/denom;const u=(dot11*dot02-dot01*dot12)*invDenom;const v=(dot00*dot12-dot01*dot02)*invDenom;// barycentric coordinates must always sum to 1\nreturn target.set(1-u-v,v,u);}static containsPoint(point,a,b,c){this.getBarycoord(point,a,b,c,_v3);return _v3.x>=0&&_v3.y>=0&&_v3.x+_v3.y<=1;}static getUV(point,p1,p2,p3,uv1,uv2,uv3,target){this.getBarycoord(point,p1,p2,p3,_v3);target.set(0,0);target.addScaledVector(uv1,_v3.x);target.addScaledVector(uv2,_v3.y);target.addScaledVector(uv3,_v3.z);return target;}static isFrontFacing(a,b,c,direction){_v0$1.subVectors(c,b);_v1$3.subVectors(a,b);// strictly front facing\nreturn _v0$1.cross(_v1$3).dot(direction)<0?true:false;}set(a,b,c){this.a.copy(a);this.b.copy(b);this.c.copy(c);return this;}setFromPointsAndIndices(points,i0,i1,i2){this.a.copy(points[i0]);this.b.copy(points[i1]);this.c.copy(points[i2]);return this;}clone(){return new this.constructor().copy(this);}copy(triangle){this.a.copy(triangle.a);this.b.copy(triangle.b);this.c.copy(triangle.c);return this;}getArea(){_v0$1.subVectors(this.c,this.b);_v1$3.subVectors(this.a,this.b);return _v0$1.cross(_v1$3).length()*0.5;}getMidpoint(target){if(target===undefined){console.warn('THREE.Triangle: .getMidpoint() target is now required');target=new Vector3();}return target.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3);}getNormal(target){return Triangle.getNormal(this.a,this.b,this.c,target);}getPlane(target){if(target===undefined){console.warn('THREE.Triangle: .getPlane() target is now required');target=new Plane();}return target.setFromCoplanarPoints(this.a,this.b,this.c);}getBarycoord(point,target){return Triangle.getBarycoord(point,this.a,this.b,this.c,target);}getUV(point,uv1,uv2,uv3,target){return Triangle.getUV(point,this.a,this.b,this.c,uv1,uv2,uv3,target);}containsPoint(point){return Triangle.containsPoint(point,this.a,this.b,this.c);}isFrontFacing(direction){return Triangle.isFrontFacing(this.a,this.b,this.c,direction);}intersectsBox(box){return box.intersectsTriangle(this);}closestPointToPoint(p,target){if(target===undefined){console.warn('THREE.Triangle: .closestPointToPoint() target is now required');target=new Vector3();}const a=this.a,b=this.b,c=this.c;let v,w;// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n// basically, we're distinguishing which of the voronoi regions of the triangle\n// the point lies in with the minimum amount of redundant computation.\n_vab.subVectors(b,a);_vac.subVectors(c,a);_vap.subVectors(p,a);const d1=_vab.dot(_vap);const d2=_vac.dot(_vap);if(d1<=0&&d2<=0){// vertex region of A; barycentric coords (1, 0, 0)\nreturn target.copy(a);}_vbp.subVectors(p,b);const d3=_vab.dot(_vbp);const d4=_vac.dot(_vbp);if(d3>=0&&d4<=d3){// vertex region of B; barycentric coords (0, 1, 0)\nreturn target.copy(b);}const vc=d1*d4-d3*d2;if(vc<=0&&d1>=0&&d3<=0){v=d1/(d1-d3);// edge region of AB; barycentric coords (1-v, v, 0)\nreturn target.copy(a).addScaledVector(_vab,v);}_vcp.subVectors(p,c);const d5=_vab.dot(_vcp);const d6=_vac.dot(_vcp);if(d6>=0&&d5<=d6){// vertex region of C; barycentric coords (0, 0, 1)\nreturn target.copy(c);}const vb=d5*d2-d1*d6;if(vb<=0&&d2>=0&&d6<=0){w=d2/(d2-d6);// edge region of AC; barycentric coords (1-w, 0, w)\nreturn target.copy(a).addScaledVector(_vac,w);}const va=d3*d6-d5*d4;if(va<=0&&d4-d3>=0&&d5-d6>=0){_vbc.subVectors(c,b);w=(d4-d3)/(d4-d3+(d5-d6));// edge region of BC; barycentric coords (0, 1-w, w)\nreturn target.copy(b).addScaledVector(_vbc,w);// edge region of BC\n}// face region\nconst denom=1/(va+vb+vc);// u = va * denom\nv=vb*denom;w=vc*denom;return target.copy(a).addScaledVector(_vab,v).addScaledVector(_vac,w);}equals(triangle){return triangle.a.equals(this.a)&&triangle.b.equals(this.b)&&triangle.c.equals(this.c);}}const _colorKeywords={'aliceblue':0xF0F8FF,'antiquewhite':0xFAEBD7,'aqua':0x00FFFF,'aquamarine':0x7FFFD4,'azure':0xF0FFFF,'beige':0xF5F5DC,'bisque':0xFFE4C4,'black':0x000000,'blanchedalmond':0xFFEBCD,'blue':0x0000FF,'blueviolet':0x8A2BE2,'brown':0xA52A2A,'burlywood':0xDEB887,'cadetblue':0x5F9EA0,'chartreuse':0x7FFF00,'chocolate':0xD2691E,'coral':0xFF7F50,'cornflowerblue':0x6495ED,'cornsilk':0xFFF8DC,'crimson':0xDC143C,'cyan':0x00FFFF,'darkblue':0x00008B,'darkcyan':0x008B8B,'darkgoldenrod':0xB8860B,'darkgray':0xA9A9A9,'darkgreen':0x006400,'darkgrey':0xA9A9A9,'darkkhaki':0xBDB76B,'darkmagenta':0x8B008B,'darkolivegreen':0x556B2F,'darkorange':0xFF8C00,'darkorchid':0x9932CC,'darkred':0x8B0000,'darksalmon':0xE9967A,'darkseagreen':0x8FBC8F,'darkslateblue':0x483D8B,'darkslategray':0x2F4F4F,'darkslategrey':0x2F4F4F,'darkturquoise':0x00CED1,'darkviolet':0x9400D3,'deeppink':0xFF1493,'deepskyblue':0x00BFFF,'dimgray':0x696969,'dimgrey':0x696969,'dodgerblue':0x1E90FF,'firebrick':0xB22222,'floralwhite':0xFFFAF0,'forestgreen':0x228B22,'fuchsia':0xFF00FF,'gainsboro':0xDCDCDC,'ghostwhite':0xF8F8FF,'gold':0xFFD700,'goldenrod':0xDAA520,'gray':0x808080,'green':0x008000,'greenyellow':0xADFF2F,'grey':0x808080,'honeydew':0xF0FFF0,'hotpink':0xFF69B4,'indianred':0xCD5C5C,'indigo':0x4B0082,'ivory':0xFFFFF0,'khaki':0xF0E68C,'lavender':0xE6E6FA,'lavenderblush':0xFFF0F5,'lawngreen':0x7CFC00,'lemonchiffon':0xFFFACD,'lightblue':0xADD8E6,'lightcoral':0xF08080,'lightcyan':0xE0FFFF,'lightgoldenrodyellow':0xFAFAD2,'lightgray':0xD3D3D3,'lightgreen':0x90EE90,'lightgrey':0xD3D3D3,'lightpink':0xFFB6C1,'lightsalmon':0xFFA07A,'lightseagreen':0x20B2AA,'lightskyblue':0x87CEFA,'lightslategray':0x778899,'lightslategrey':0x778899,'lightsteelblue':0xB0C4DE,'lightyellow':0xFFFFE0,'lime':0x00FF00,'limegreen':0x32CD32,'linen':0xFAF0E6,'magenta':0xFF00FF,'maroon':0x800000,'mediumaquamarine':0x66CDAA,'mediumblue':0x0000CD,'mediumorchid':0xBA55D3,'mediumpurple':0x9370DB,'mediumseagreen':0x3CB371,'mediumslateblue':0x7B68EE,'mediumspringgreen':0x00FA9A,'mediumturquoise':0x48D1CC,'mediumvioletred':0xC71585,'midnightblue':0x191970,'mintcream':0xF5FFFA,'mistyrose':0xFFE4E1,'moccasin':0xFFE4B5,'navajowhite':0xFFDEAD,'navy':0x000080,'oldlace':0xFDF5E6,'olive':0x808000,'olivedrab':0x6B8E23,'orange':0xFFA500,'orangered':0xFF4500,'orchid':0xDA70D6,'palegoldenrod':0xEEE8AA,'palegreen':0x98FB98,'paleturquoise':0xAFEEEE,'palevioletred':0xDB7093,'papayawhip':0xFFEFD5,'peachpuff':0xFFDAB9,'peru':0xCD853F,'pink':0xFFC0CB,'plum':0xDDA0DD,'powderblue':0xB0E0E6,'purple':0x800080,'rebeccapurple':0x663399,'red':0xFF0000,'rosybrown':0xBC8F8F,'royalblue':0x4169E1,'saddlebrown':0x8B4513,'salmon':0xFA8072,'sandybrown':0xF4A460,'seagreen':0x2E8B57,'seashell':0xFFF5EE,'sienna':0xA0522D,'silver':0xC0C0C0,'skyblue':0x87CEEB,'slateblue':0x6A5ACD,'slategray':0x708090,'slategrey':0x708090,'snow':0xFFFAFA,'springgreen':0x00FF7F,'steelblue':0x4682B4,'tan':0xD2B48C,'teal':0x008080,'thistle':0xD8BFD8,'tomato':0xFF6347,'turquoise':0x40E0D0,'violet':0xEE82EE,'wheat':0xF5DEB3,'white':0xFFFFFF,'whitesmoke':0xF5F5F5,'yellow':0xFFFF00,'yellowgreen':0x9ACD32};const _hslA={h:0,s:0,l:0};const _hslB={h:0,s:0,l:0};function hue2rgb(p,q,t){if(t<0)t+=1;if(t>1)t-=1;if(t<1/6)return p+(q-p)*6*t;if(t<1/2)return q;if(t<2/3)return p+(q-p)*6*(2/3-t);return p;}function SRGBToLinear(c){return c<0.04045?c*0.0773993808:Math.pow(c*0.9478672986+0.0521327014,2.4);}function LinearToSRGB(c){return c<0.0031308?c*12.92:1.055*Math.pow(c,0.41666)-0.055;}class Color{constructor(r,g,b){Object.defineProperty(this,'isColor',{value:true});if(g===undefined&&b===undefined){// r is THREE.Color, hex or string\nreturn this.set(r);}return this.setRGB(r,g,b);}set(value){if(value&&value.isColor){this.copy(value);}else if(typeof value==='number'){this.setHex(value);}else if(typeof value==='string'){this.setStyle(value);}return this;}setScalar(scalar){this.r=scalar;this.g=scalar;this.b=scalar;return this;}setHex(hex){hex=Math.floor(hex);this.r=(hex>>16&255)/255;this.g=(hex>>8&255)/255;this.b=(hex&255)/255;return this;}setRGB(r,g,b){this.r=r;this.g=g;this.b=b;return this;}setHSL(h,s,l){// h,s,l ranges are in 0.0 - 1.0\nh=MathUtils.euclideanModulo(h,1);s=MathUtils.clamp(s,0,1);l=MathUtils.clamp(l,0,1);if(s===0){this.r=this.g=this.b=l;}else{const p=l<=0.5?l*(1+s):l+s-l*s;const q=2*l-p;this.r=hue2rgb(q,p,h+1/3);this.g=hue2rgb(q,p,h);this.b=hue2rgb(q,p,h-1/3);}return this;}setStyle(style){function handleAlpha(string){if(string===undefined)return;if(parseFloat(string)<1){console.warn('THREE.Color: Alpha component of '+style+' will be ignored.');}}let m;if(m=/^((?:rgb|hsl)a?)\\(([^\\)]*)\\)/.exec(style)){// rgb / hsl\nlet color;const name=m[1];const components=m[2];switch(name){case'rgb':case'rgba':if(color=/^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)){// rgb(255,0,0) rgba(255,0,0,0.5)\nthis.r=Math.min(255,parseInt(color[1],10))/255;this.g=Math.min(255,parseInt(color[2],10))/255;this.b=Math.min(255,parseInt(color[3],10))/255;handleAlpha(color[4]);return this;}if(color=/^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)){// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\nthis.r=Math.min(100,parseInt(color[1],10))/100;this.g=Math.min(100,parseInt(color[2],10))/100;this.b=Math.min(100,parseInt(color[3],10))/100;handleAlpha(color[4]);return this;}break;case'hsl':case'hsla':if(color=/^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)){// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\nconst h=parseFloat(color[1])/360;const s=parseInt(color[2],10)/100;const l=parseInt(color[3],10)/100;handleAlpha(color[4]);return this.setHSL(h,s,l);}break;}}else if(m=/^\\#([A-Fa-f\\d]+)$/.exec(style)){// hex color\nconst hex=m[1];const size=hex.length;if(size===3){// #ff0\nthis.r=parseInt(hex.charAt(0)+hex.charAt(0),16)/255;this.g=parseInt(hex.charAt(1)+hex.charAt(1),16)/255;this.b=parseInt(hex.charAt(2)+hex.charAt(2),16)/255;return this;}else if(size===6){// #ff0000\nthis.r=parseInt(hex.charAt(0)+hex.charAt(1),16)/255;this.g=parseInt(hex.charAt(2)+hex.charAt(3),16)/255;this.b=parseInt(hex.charAt(4)+hex.charAt(5),16)/255;return this;}}if(style&&style.length>0){return this.setColorName(style);}return this;}setColorName(style){// color keywords\nconst hex=_colorKeywords[style];if(hex!==undefined){// red\nthis.setHex(hex);}else{// unknown color\nconsole.warn('THREE.Color: Unknown color '+style);}return this;}clone(){return new this.constructor(this.r,this.g,this.b);}copy(color){this.r=color.r;this.g=color.g;this.b=color.b;return this;}copyGammaToLinear(color,gammaFactor=2.0){this.r=Math.pow(color.r,gammaFactor);this.g=Math.pow(color.g,gammaFactor);this.b=Math.pow(color.b,gammaFactor);return this;}copyLinearToGamma(color,gammaFactor=2.0){const safeInverse=gammaFactor>0?1.0/gammaFactor:1.0;this.r=Math.pow(color.r,safeInverse);this.g=Math.pow(color.g,safeInverse);this.b=Math.pow(color.b,safeInverse);return this;}convertGammaToLinear(gammaFactor){this.copyGammaToLinear(this,gammaFactor);return this;}convertLinearToGamma(gammaFactor){this.copyLinearToGamma(this,gammaFactor);return this;}copySRGBToLinear(color){this.r=SRGBToLinear(color.r);this.g=SRGBToLinear(color.g);this.b=SRGBToLinear(color.b);return this;}copyLinearToSRGB(color){this.r=LinearToSRGB(color.r);this.g=LinearToSRGB(color.g);this.b=LinearToSRGB(color.b);return this;}convertSRGBToLinear(){this.copySRGBToLinear(this);return this;}convertLinearToSRGB(){this.copyLinearToSRGB(this);return this;}getHex(){return this.r*255<<16^this.g*255<<8^this.b*255<<0;}getHexString(){return('000000'+this.getHex().toString(16)).slice(-6);}getHSL(target){// h,s,l ranges are in 0.0 - 1.0\nif(target===undefined){console.warn('THREE.Color: .getHSL() target is now required');target={h:0,s:0,l:0};}const r=this.r,g=this.g,b=this.b;const max=Math.max(r,g,b);const min=Math.min(r,g,b);let hue,saturation;const lightness=(min+max)/2.0;if(min===max){hue=0;saturation=0;}else{const delta=max-min;saturation=lightness<=0.5?delta/(max+min):delta/(2-max-min);switch(max){case r:hue=(g-b)/delta+(g<b?6:0);break;case g:hue=(b-r)/delta+2;break;case b:hue=(r-g)/delta+4;break;}hue/=6;}target.h=hue;target.s=saturation;target.l=lightness;return target;}getStyle(){return'rgb('+(this.r*255|0)+','+(this.g*255|0)+','+(this.b*255|0)+')';}offsetHSL(h,s,l){this.getHSL(_hslA);_hslA.h+=h;_hslA.s+=s;_hslA.l+=l;this.setHSL(_hslA.h,_hslA.s,_hslA.l);return this;}add(color){this.r+=color.r;this.g+=color.g;this.b+=color.b;return this;}addColors(color1,color2){this.r=color1.r+color2.r;this.g=color1.g+color2.g;this.b=color1.b+color2.b;return this;}addScalar(s){this.r+=s;this.g+=s;this.b+=s;return this;}sub(color){this.r=Math.max(0,this.r-color.r);this.g=Math.max(0,this.g-color.g);this.b=Math.max(0,this.b-color.b);return this;}multiply(color){this.r*=color.r;this.g*=color.g;this.b*=color.b;return this;}multiplyScalar(s){this.r*=s;this.g*=s;this.b*=s;return this;}lerp(color,alpha){this.r+=(color.r-this.r)*alpha;this.g+=(color.g-this.g)*alpha;this.b+=(color.b-this.b)*alpha;return this;}lerpColors(color1,color2,alpha){this.r=color1.r+(color2.r-color1.r)*alpha;this.g=color1.g+(color2.g-color1.g)*alpha;this.b=color1.b+(color2.b-color1.b)*alpha;return this;}lerpHSL(color,alpha){this.getHSL(_hslA);color.getHSL(_hslB);const h=MathUtils.lerp(_hslA.h,_hslB.h,alpha);const s=MathUtils.lerp(_hslA.s,_hslB.s,alpha);const l=MathUtils.lerp(_hslA.l,_hslB.l,alpha);this.setHSL(h,s,l);return this;}equals(c){return c.r===this.r&&c.g===this.g&&c.b===this.b;}fromArray(array,offset=0){this.r=array[offset];this.g=array[offset+1];this.b=array[offset+2];return this;}toArray(array=[],offset=0){array[offset]=this.r;array[offset+1]=this.g;array[offset+2]=this.b;return array;}fromBufferAttribute(attribute,index){this.r=attribute.getX(index);this.g=attribute.getY(index);this.b=attribute.getZ(index);if(attribute.normalized===true){// assuming Uint8Array\nthis.r/=255;this.g/=255;this.b/=255;}return this;}toJSON(){return this.getHex();}}Color.NAMES=_colorKeywords;Color.prototype.r=1;Color.prototype.g=1;Color.prototype.b=1;class Face3{constructor(a,b,c,normal,color,materialIndex=0){this.a=a;this.b=b;this.c=c;this.normal=normal&&normal.isVector3?normal:new Vector3();this.vertexNormals=Array.isArray(normal)?normal:[];this.color=color&&color.isColor?color:new Color();this.vertexColors=Array.isArray(color)?color:[];this.materialIndex=materialIndex;}clone(){return new this.constructor().copy(this);}copy(source){this.a=source.a;this.b=source.b;this.c=source.c;this.normal.copy(source.normal);this.color.copy(source.color);this.materialIndex=source.materialIndex;for(let i=0,il=source.vertexNormals.length;i<il;i++){this.vertexNormals[i]=source.vertexNormals[i].clone();}for(let i=0,il=source.vertexColors.length;i<il;i++){this.vertexColors[i]=source.vertexColors[i].clone();}return this;}}let materialId=0;function Material(){Object.defineProperty(this,'id',{value:materialId++});this.uuid=MathUtils.generateUUID();this.name='';this.type='Material';this.fog=true;this.blending=NormalBlending;this.side=FrontSide;this.flatShading=false;this.vertexColors=false;this.opacity=1;this.transparent=false;this.blendSrc=SrcAlphaFactor;this.blendDst=OneMinusSrcAlphaFactor;this.blendEquation=AddEquation;this.blendSrcAlpha=null;this.blendDstAlpha=null;this.blendEquationAlpha=null;this.depthFunc=LessEqualDepth;this.depthTest=true;this.depthWrite=true;this.stencilWriteMask=0xff;this.stencilFunc=AlwaysStencilFunc;this.stencilRef=0;this.stencilFuncMask=0xff;this.stencilFail=KeepStencilOp;this.stencilZFail=KeepStencilOp;this.stencilZPass=KeepStencilOp;this.stencilWrite=false;this.clippingPlanes=null;this.clipIntersection=false;this.clipShadows=false;this.shadowSide=null;this.colorWrite=true;this.precision=null;// override the renderer's default precision for this material\nthis.polygonOffset=false;this.polygonOffsetFactor=0;this.polygonOffsetUnits=0;this.dithering=false;this.alphaTest=0;this.premultipliedAlpha=false;this.visible=true;this.toneMapped=true;this.userData={};this.version=0;}Material.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:Material,isMaterial:true,onBeforeCompile:function()/* shaderobject, renderer */{},customProgramCacheKey:function(){return this.onBeforeCompile.toString();},setValues:function(values){if(values===undefined)return;for(const key in values){const newValue=values[key];if(newValue===undefined){console.warn('THREE.Material: \\''+key+'\\' parameter is undefined.');continue;}// for backward compatability if shading is set in the constructor\nif(key==='shading'){console.warn('THREE.'+this.type+': .shading has been removed. Use the boolean .flatShading instead.');this.flatShading=newValue===FlatShading?true:false;continue;}const currentValue=this[key];if(currentValue===undefined){console.warn('THREE.'+this.type+': \\''+key+'\\' is not a property of this material.');continue;}if(currentValue&&currentValue.isColor){currentValue.set(newValue);}else if(currentValue&&currentValue.isVector3&&newValue&&newValue.isVector3){currentValue.copy(newValue);}else{this[key]=newValue;}}},toJSON:function(meta){const isRoot=meta===undefined||typeof meta==='string';if(isRoot){meta={textures:{},images:{}};}const data={metadata:{version:4.5,type:'Material',generator:'Material.toJSON'}};// standard Material serialization\ndata.uuid=this.uuid;data.type=this.type;if(this.name!=='')data.name=this.name;if(this.color&&this.color.isColor)data.color=this.color.getHex();if(this.roughness!==undefined)data.roughness=this.roughness;if(this.metalness!==undefined)data.metalness=this.metalness;if(this.sheen&&this.sheen.isColor)data.sheen=this.sheen.getHex();if(this.emissive&&this.emissive.isColor)data.emissive=this.emissive.getHex();if(this.emissiveIntensity&&this.emissiveIntensity!==1)data.emissiveIntensity=this.emissiveIntensity;if(this.specular&&this.specular.isColor)data.specular=this.specular.getHex();if(this.shininess!==undefined)data.shininess=this.shininess;if(this.clearcoat!==undefined)data.clearcoat=this.clearcoat;if(this.clearcoatRoughness!==undefined)data.clearcoatRoughness=this.clearcoatRoughness;if(this.clearcoatMap&&this.clearcoatMap.isTexture){data.clearcoatMap=this.clearcoatMap.toJSON(meta).uuid;}if(this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture){data.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(meta).uuid;}if(this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture){data.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(meta).uuid;data.clearcoatNormalScale=this.clearcoatNormalScale.toArray();}if(this.map&&this.map.isTexture)data.map=this.map.toJSON(meta).uuid;if(this.matcap&&this.matcap.isTexture)data.matcap=this.matcap.toJSON(meta).uuid;if(this.alphaMap&&this.alphaMap.isTexture)data.alphaMap=this.alphaMap.toJSON(meta).uuid;if(this.lightMap&&this.lightMap.isTexture)data.lightMap=this.lightMap.toJSON(meta).uuid;if(this.aoMap&&this.aoMap.isTexture){data.aoMap=this.aoMap.toJSON(meta).uuid;data.aoMapIntensity=this.aoMapIntensity;}if(this.bumpMap&&this.bumpMap.isTexture){data.bumpMap=this.bumpMap.toJSON(meta).uuid;data.bumpScale=this.bumpScale;}if(this.normalMap&&this.normalMap.isTexture){data.normalMap=this.normalMap.toJSON(meta).uuid;data.normalMapType=this.normalMapType;data.normalScale=this.normalScale.toArray();}if(this.displacementMap&&this.displacementMap.isTexture){data.displacementMap=this.displacementMap.toJSON(meta).uuid;data.displacementScale=this.displacementScale;data.displacementBias=this.displacementBias;}if(this.roughnessMap&&this.roughnessMap.isTexture)data.roughnessMap=this.roughnessMap.toJSON(meta).uuid;if(this.metalnessMap&&this.metalnessMap.isTexture)data.metalnessMap=this.metalnessMap.toJSON(meta).uuid;if(this.emissiveMap&&this.emissiveMap.isTexture)data.emissiveMap=this.emissiveMap.toJSON(meta).uuid;if(this.specularMap&&this.specularMap.isTexture)data.specularMap=this.specularMap.toJSON(meta).uuid;if(this.envMap&&this.envMap.isTexture){data.envMap=this.envMap.toJSON(meta).uuid;data.reflectivity=this.reflectivity;// Scale behind envMap\ndata.refractionRatio=this.refractionRatio;if(this.combine!==undefined)data.combine=this.combine;if(this.envMapIntensity!==undefined)data.envMapIntensity=this.envMapIntensity;}if(this.gradientMap&&this.gradientMap.isTexture){data.gradientMap=this.gradientMap.toJSON(meta).uuid;}if(this.size!==undefined)data.size=this.size;if(this.sizeAttenuation!==undefined)data.sizeAttenuation=this.sizeAttenuation;if(this.blending!==NormalBlending)data.blending=this.blending;if(this.flatShading===true)data.flatShading=this.flatShading;if(this.side!==FrontSide)data.side=this.side;if(this.vertexColors)data.vertexColors=true;if(this.opacity<1)data.opacity=this.opacity;if(this.transparent===true)data.transparent=this.transparent;data.depthFunc=this.depthFunc;data.depthTest=this.depthTest;data.depthWrite=this.depthWrite;data.stencilWrite=this.stencilWrite;data.stencilWriteMask=this.stencilWriteMask;data.stencilFunc=this.stencilFunc;data.stencilRef=this.stencilRef;data.stencilFuncMask=this.stencilFuncMask;data.stencilFail=this.stencilFail;data.stencilZFail=this.stencilZFail;data.stencilZPass=this.stencilZPass;// rotation (SpriteMaterial)\nif(this.rotation&&this.rotation!==0)data.rotation=this.rotation;if(this.polygonOffset===true)data.polygonOffset=true;if(this.polygonOffsetFactor!==0)data.polygonOffsetFactor=this.polygonOffsetFactor;if(this.polygonOffsetUnits!==0)data.polygonOffsetUnits=this.polygonOffsetUnits;if(this.linewidth&&this.linewidth!==1)data.linewidth=this.linewidth;if(this.dashSize!==undefined)data.dashSize=this.dashSize;if(this.gapSize!==undefined)data.gapSize=this.gapSize;if(this.scale!==undefined)data.scale=this.scale;if(this.dithering===true)data.dithering=true;if(this.alphaTest>0)data.alphaTest=this.alphaTest;if(this.premultipliedAlpha===true)data.premultipliedAlpha=this.premultipliedAlpha;if(this.wireframe===true)data.wireframe=this.wireframe;if(this.wireframeLinewidth>1)data.wireframeLinewidth=this.wireframeLinewidth;if(this.wireframeLinecap!=='round')data.wireframeLinecap=this.wireframeLinecap;if(this.wireframeLinejoin!=='round')data.wireframeLinejoin=this.wireframeLinejoin;if(this.morphTargets===true)data.morphTargets=true;if(this.morphNormals===true)data.morphNormals=true;if(this.skinning===true)data.skinning=true;if(this.visible===false)data.visible=false;if(this.toneMapped===false)data.toneMapped=false;if(JSON.stringify(this.userData)!=='{}')data.userData=this.userData;// TODO: Copied from Object3D.toJSON\nfunction extractFromCache(cache){const values=[];for(const key in cache){const data=cache[key];delete data.metadata;values.push(data);}return values;}if(isRoot){const textures=extractFromCache(meta.textures);const images=extractFromCache(meta.images);if(textures.length>0)data.textures=textures;if(images.length>0)data.images=images;}return data;},clone:function(){return new this.constructor().copy(this);},copy:function(source){this.name=source.name;this.fog=source.fog;this.blending=source.blending;this.side=source.side;this.flatShading=source.flatShading;this.vertexColors=source.vertexColors;this.opacity=source.opacity;this.transparent=source.transparent;this.blendSrc=source.blendSrc;this.blendDst=source.blendDst;this.blendEquation=source.blendEquation;this.blendSrcAlpha=source.blendSrcAlpha;this.blendDstAlpha=source.blendDstAlpha;this.blendEquationAlpha=source.blendEquationAlpha;this.depthFunc=source.depthFunc;this.depthTest=source.depthTest;this.depthWrite=source.depthWrite;this.stencilWriteMask=source.stencilWriteMask;this.stencilFunc=source.stencilFunc;this.stencilRef=source.stencilRef;this.stencilFuncMask=source.stencilFuncMask;this.stencilFail=source.stencilFail;this.stencilZFail=source.stencilZFail;this.stencilZPass=source.stencilZPass;this.stencilWrite=source.stencilWrite;const srcPlanes=source.clippingPlanes;let dstPlanes=null;if(srcPlanes!==null){const n=srcPlanes.length;dstPlanes=new Array(n);for(let i=0;i!==n;++i){dstPlanes[i]=srcPlanes[i].clone();}}this.clippingPlanes=dstPlanes;this.clipIntersection=source.clipIntersection;this.clipShadows=source.clipShadows;this.shadowSide=source.shadowSide;this.colorWrite=source.colorWrite;this.precision=source.precision;this.polygonOffset=source.polygonOffset;this.polygonOffsetFactor=source.polygonOffsetFactor;this.polygonOffsetUnits=source.polygonOffsetUnits;this.dithering=source.dithering;this.alphaTest=source.alphaTest;this.premultipliedAlpha=source.premultipliedAlpha;this.visible=source.visible;this.toneMapped=source.toneMapped;this.userData=JSON.parse(JSON.stringify(source.userData));return this;},dispose:function(){this.dispatchEvent({type:'dispose'});}});Object.defineProperty(Material.prototype,'needsUpdate',{set:function(value){if(value===true)this.version++;}});/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>\n * }\n */function MeshBasicMaterial(parameters){Material.call(this);this.type='MeshBasicMaterial';this.color=new Color(0xffffff);// emissive\nthis.map=null;this.lightMap=null;this.lightMapIntensity=1.0;this.aoMap=null;this.aoMapIntensity=1.0;this.specularMap=null;this.alphaMap=null;this.envMap=null;this.combine=MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap='round';this.wireframeLinejoin='round';this.skinning=false;this.morphTargets=false;this.setValues(parameters);}MeshBasicMaterial.prototype=Object.create(Material.prototype);MeshBasicMaterial.prototype.constructor=MeshBasicMaterial;MeshBasicMaterial.prototype.isMeshBasicMaterial=true;MeshBasicMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.color.copy(source.color);this.map=source.map;this.lightMap=source.lightMap;this.lightMapIntensity=source.lightMapIntensity;this.aoMap=source.aoMap;this.aoMapIntensity=source.aoMapIntensity;this.specularMap=source.specularMap;this.alphaMap=source.alphaMap;this.envMap=source.envMap;this.combine=source.combine;this.reflectivity=source.reflectivity;this.refractionRatio=source.refractionRatio;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.wireframeLinecap=source.wireframeLinecap;this.wireframeLinejoin=source.wireframeLinejoin;this.skinning=source.skinning;this.morphTargets=source.morphTargets;return this;};const _vector$3=new Vector3();const _vector2$1=new Vector2();function BufferAttribute(array,itemSize,normalized){if(Array.isArray(array)){throw new TypeError('THREE.BufferAttribute: array should be a Typed Array.');}this.name='';this.array=array;this.itemSize=itemSize;this.count=array!==undefined?array.length/itemSize:0;this.normalized=normalized===true;this.usage=StaticDrawUsage;this.updateRange={offset:0,count:-1};this.version=0;}Object.defineProperty(BufferAttribute.prototype,'needsUpdate',{set:function(value){if(value===true)this.version++;}});Object.assign(BufferAttribute.prototype,{isBufferAttribute:true,onUploadCallback:function(){},setUsage:function(value){this.usage=value;return this;},copy:function(source){this.name=source.name;this.array=new source.array.constructor(source.array);this.itemSize=source.itemSize;this.count=source.count;this.normalized=source.normalized;this.usage=source.usage;return this;},copyAt:function(index1,attribute,index2){index1*=this.itemSize;index2*=attribute.itemSize;for(let i=0,l=this.itemSize;i<l;i++){this.array[index1+i]=attribute.array[index2+i];}return this;},copyArray:function(array){this.array.set(array);return this;},copyColorsArray:function(colors){const array=this.array;let offset=0;for(let i=0,l=colors.length;i<l;i++){let color=colors[i];if(color===undefined){console.warn('THREE.BufferAttribute.copyColorsArray(): color is undefined',i);color=new Color();}array[offset++]=color.r;array[offset++]=color.g;array[offset++]=color.b;}return this;},copyVector2sArray:function(vectors){const array=this.array;let offset=0;for(let i=0,l=vectors.length;i<l;i++){let vector=vectors[i];if(vector===undefined){console.warn('THREE.BufferAttribute.copyVector2sArray(): vector is undefined',i);vector=new Vector2();}array[offset++]=vector.x;array[offset++]=vector.y;}return this;},copyVector3sArray:function(vectors){const array=this.array;let offset=0;for(let i=0,l=vectors.length;i<l;i++){let vector=vectors[i];if(vector===undefined){console.warn('THREE.BufferAttribute.copyVector3sArray(): vector is undefined',i);vector=new Vector3();}array[offset++]=vector.x;array[offset++]=vector.y;array[offset++]=vector.z;}return this;},copyVector4sArray:function(vectors){const array=this.array;let offset=0;for(let i=0,l=vectors.length;i<l;i++){let vector=vectors[i];if(vector===undefined){console.warn('THREE.BufferAttribute.copyVector4sArray(): vector is undefined',i);vector=new Vector4();}array[offset++]=vector.x;array[offset++]=vector.y;array[offset++]=vector.z;array[offset++]=vector.w;}return this;},applyMatrix3:function(m){if(this.itemSize===2){for(let i=0,l=this.count;i<l;i++){_vector2$1.fromBufferAttribute(this,i);_vector2$1.applyMatrix3(m);this.setXY(i,_vector2$1.x,_vector2$1.y);}}else if(this.itemSize===3){for(let i=0,l=this.count;i<l;i++){_vector$3.fromBufferAttribute(this,i);_vector$3.applyMatrix3(m);this.setXYZ(i,_vector$3.x,_vector$3.y,_vector$3.z);}}return this;},applyMatrix4:function(m){for(let i=0,l=this.count;i<l;i++){_vector$3.x=this.getX(i);_vector$3.y=this.getY(i);_vector$3.z=this.getZ(i);_vector$3.applyMatrix4(m);this.setXYZ(i,_vector$3.x,_vector$3.y,_vector$3.z);}return this;},applyNormalMatrix:function(m){for(let i=0,l=this.count;i<l;i++){_vector$3.x=this.getX(i);_vector$3.y=this.getY(i);_vector$3.z=this.getZ(i);_vector$3.applyNormalMatrix(m);this.setXYZ(i,_vector$3.x,_vector$3.y,_vector$3.z);}return this;},transformDirection:function(m){for(let i=0,l=this.count;i<l;i++){_vector$3.x=this.getX(i);_vector$3.y=this.getY(i);_vector$3.z=this.getZ(i);_vector$3.transformDirection(m);this.setXYZ(i,_vector$3.x,_vector$3.y,_vector$3.z);}return this;},set:function(value,offset=0){this.array.set(value,offset);return this;},getX:function(index){return this.array[index*this.itemSize];},setX:function(index,x){this.array[index*this.itemSize]=x;return this;},getY:function(index){return this.array[index*this.itemSize+1];},setY:function(index,y){this.array[index*this.itemSize+1]=y;return this;},getZ:function(index){return this.array[index*this.itemSize+2];},setZ:function(index,z){this.array[index*this.itemSize+2]=z;return this;},getW:function(index){return this.array[index*this.itemSize+3];},setW:function(index,w){this.array[index*this.itemSize+3]=w;return this;},setXY:function(index,x,y){index*=this.itemSize;this.array[index+0]=x;this.array[index+1]=y;return this;},setXYZ:function(index,x,y,z){index*=this.itemSize;this.array[index+0]=x;this.array[index+1]=y;this.array[index+2]=z;return this;},setXYZW:function(index,x,y,z,w){index*=this.itemSize;this.array[index+0]=x;this.array[index+1]=y;this.array[index+2]=z;this.array[index+3]=w;return this;},onUpload:function(callback){this.onUploadCallback=callback;return this;},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this);},toJSON:function(){return{itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};}});//\nfunction Int8BufferAttribute(array,itemSize,normalized){BufferAttribute.call(this,new Int8Array(array),itemSize,normalized);}Int8BufferAttribute.prototype=Object.create(BufferAttribute.prototype);Int8BufferAttribute.prototype.constructor=Int8BufferAttribute;function Uint8BufferAttribute(array,itemSize,normalized){BufferAttribute.call(this,new Uint8Array(array),itemSize,normalized);}Uint8BufferAttribute.prototype=Object.create(BufferAttribute.prototype);Uint8BufferAttribute.prototype.constructor=Uint8BufferAttribute;function Uint8ClampedBufferAttribute(array,itemSize,normalized){BufferAttribute.call(this,new Uint8ClampedArray(array),itemSize,normalized);}Uint8ClampedBufferAttribute.prototype=Object.create(BufferAttribute.prototype);Uint8ClampedBufferAttribute.prototype.constructor=Uint8ClampedBufferAttribute;function Int16BufferAttribute(array,itemSize,normalized){BufferAttribute.call(this,new Int16Array(array),itemSize,normalized);}Int16BufferAttribute.prototype=Object.create(BufferAttribute.prototype);Int16BufferAttribute.prototype.constructor=Int16BufferAttribute;function Uint16BufferAttribute(array,itemSize,normalized){BufferAttribute.call(this,new Uint16Array(array),itemSize,normalized);}Uint16BufferAttribute.prototype=Object.create(BufferAttribute.prototype);Uint16BufferAttribute.prototype.constructor=Uint16BufferAttribute;function Int32BufferAttribute(array,itemSize,normalized){BufferAttribute.call(this,new Int32Array(array),itemSize,normalized);}Int32BufferAttribute.prototype=Object.create(BufferAttribute.prototype);Int32BufferAttribute.prototype.constructor=Int32BufferAttribute;function Uint32BufferAttribute(array,itemSize,normalized){BufferAttribute.call(this,new Uint32Array(array),itemSize,normalized);}Uint32BufferAttribute.prototype=Object.create(BufferAttribute.prototype);Uint32BufferAttribute.prototype.constructor=Uint32BufferAttribute;function Float16BufferAttribute(array,itemSize,normalized){BufferAttribute.call(this,new Uint16Array(array),itemSize,normalized);}Float16BufferAttribute.prototype=Object.create(BufferAttribute.prototype);Float16BufferAttribute.prototype.constructor=Float16BufferAttribute;Float16BufferAttribute.prototype.isFloat16BufferAttribute=true;function Float32BufferAttribute(array,itemSize,normalized){BufferAttribute.call(this,new Float32Array(array),itemSize,normalized);}Float32BufferAttribute.prototype=Object.create(BufferAttribute.prototype);Float32BufferAttribute.prototype.constructor=Float32BufferAttribute;function Float64BufferAttribute(array,itemSize,normalized){BufferAttribute.call(this,new Float64Array(array),itemSize,normalized);}Float64BufferAttribute.prototype=Object.create(BufferAttribute.prototype);Float64BufferAttribute.prototype.constructor=Float64BufferAttribute;function arrayMax(array){if(array.length===0)return-Infinity;let max=array[0];for(let i=1,l=array.length;i<l;++i){if(array[i]>max)max=array[i];}return max;}const TYPED_ARRAYS={Int8Array:Int8Array,Uint8Array:Uint8Array,// Workaround for IE11 pre KB2929437. See #11440\nUint8ClampedArray:typeof Uint8ClampedArray!=='undefined'?Uint8ClampedArray:Uint8Array,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function getTypedArray(type,buffer){return new TYPED_ARRAYS[type](buffer);}let _id=0;const _m1$2=new Matrix4();const _obj=new Object3D();const _offset=new Vector3();const _box$2=new Box3();const _boxMorphTargets=new Box3();const _vector$4=new Vector3();function BufferGeometry(){Object.defineProperty(this,'id',{value:_id++});this.uuid=MathUtils.generateUUID();this.name='';this.type='BufferGeometry';this.index=null;this.attributes={};this.morphAttributes={};this.morphTargetsRelative=false;this.groups=[];this.boundingBox=null;this.boundingSphere=null;this.drawRange={start:0,count:Infinity};this.userData={};}BufferGeometry.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:BufferGeometry,isBufferGeometry:true,getIndex:function(){return this.index;},setIndex:function(index){if(Array.isArray(index)){this.index=new(arrayMax(index)>65535?Uint32BufferAttribute:Uint16BufferAttribute)(index,1);}else{this.index=index;}return this;},getAttribute:function(name){return this.attributes[name];},setAttribute:function(name,attribute){this.attributes[name]=attribute;return this;},deleteAttribute:function(name){delete this.attributes[name];return this;},hasAttribute:function(name){return this.attributes[name]!==undefined;},addGroup:function(start,count,materialIndex=0){this.groups.push({start:start,count:count,materialIndex:materialIndex});},clearGroups:function(){this.groups=[];},setDrawRange:function(start,count){this.drawRange.start=start;this.drawRange.count=count;},applyMatrix4:function(matrix){const position=this.attributes.position;if(position!==undefined){position.applyMatrix4(matrix);position.needsUpdate=true;}const normal=this.attributes.normal;if(normal!==undefined){const normalMatrix=new Matrix3().getNormalMatrix(matrix);normal.applyNormalMatrix(normalMatrix);normal.needsUpdate=true;}const tangent=this.attributes.tangent;if(tangent!==undefined){tangent.transformDirection(matrix);tangent.needsUpdate=true;}if(this.boundingBox!==null){this.computeBoundingBox();}if(this.boundingSphere!==null){this.computeBoundingSphere();}return this;},rotateX:function(angle){// rotate geometry around world x-axis\n_m1$2.makeRotationX(angle);this.applyMatrix4(_m1$2);return this;},rotateY:function(angle){// rotate geometry around world y-axis\n_m1$2.makeRotationY(angle);this.applyMatrix4(_m1$2);return this;},rotateZ:function(angle){// rotate geometry around world z-axis\n_m1$2.makeRotationZ(angle);this.applyMatrix4(_m1$2);return this;},translate:function(x,y,z){// translate geometry\n_m1$2.makeTranslation(x,y,z);this.applyMatrix4(_m1$2);return this;},scale:function(x,y,z){// scale geometry\n_m1$2.makeScale(x,y,z);this.applyMatrix4(_m1$2);return this;},lookAt:function(vector){_obj.lookAt(vector);_obj.updateMatrix();this.applyMatrix4(_obj.matrix);return this;},center:function(){this.computeBoundingBox();this.boundingBox.getCenter(_offset).negate();this.translate(_offset.x,_offset.y,_offset.z);return this;},setFromPoints:function(points){const position=[];for(let i=0,l=points.length;i<l;i++){const point=points[i];position.push(point.x,point.y,point.z||0);}this.setAttribute('position',new Float32BufferAttribute(position,3));return this;},computeBoundingBox:function(){if(this.boundingBox===null){this.boundingBox=new Box3();}const position=this.attributes.position;const morphAttributesPosition=this.morphAttributes.position;if(position&&position.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".',this);this.boundingBox.set(new Vector3(-Infinity,-Infinity,-Infinity),new Vector3(+Infinity,+Infinity,+Infinity));return;}if(position!==undefined){this.boundingBox.setFromBufferAttribute(position);// process morph attributes if present\nif(morphAttributesPosition){for(let i=0,il=morphAttributesPosition.length;i<il;i++){const morphAttribute=morphAttributesPosition[i];_box$2.setFromBufferAttribute(morphAttribute);if(this.morphTargetsRelative){_vector$4.addVectors(this.boundingBox.min,_box$2.min);this.boundingBox.expandByPoint(_vector$4);_vector$4.addVectors(this.boundingBox.max,_box$2.max);this.boundingBox.expandByPoint(_vector$4);}else{this.boundingBox.expandByPoint(_box$2.min);this.boundingBox.expandByPoint(_box$2.max);}}}}else{this.boundingBox.makeEmpty();}if(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z)){console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.',this);}},computeBoundingSphere:function(){if(this.boundingSphere===null){this.boundingSphere=new Sphere();}const position=this.attributes.position;const morphAttributesPosition=this.morphAttributes.position;if(position&&position.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".',this);this.boundingSphere.set(new Vector3(),Infinity);return;}if(position){// first, find the center of the bounding sphere\nconst center=this.boundingSphere.center;_box$2.setFromBufferAttribute(position);// process morph attributes if present\nif(morphAttributesPosition){for(let i=0,il=morphAttributesPosition.length;i<il;i++){const morphAttribute=morphAttributesPosition[i];_boxMorphTargets.setFromBufferAttribute(morphAttribute);if(this.morphTargetsRelative){_vector$4.addVectors(_box$2.min,_boxMorphTargets.min);_box$2.expandByPoint(_vector$4);_vector$4.addVectors(_box$2.max,_boxMorphTargets.max);_box$2.expandByPoint(_vector$4);}else{_box$2.expandByPoint(_boxMorphTargets.min);_box$2.expandByPoint(_boxMorphTargets.max);}}}_box$2.getCenter(center);// second, try to find a boundingSphere with a radius smaller than the\n// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\nlet maxRadiusSq=0;for(let i=0,il=position.count;i<il;i++){_vector$4.fromBufferAttribute(position,i);maxRadiusSq=Math.max(maxRadiusSq,center.distanceToSquared(_vector$4));}// process morph attributes if present\nif(morphAttributesPosition){for(let i=0,il=morphAttributesPosition.length;i<il;i++){const morphAttribute=morphAttributesPosition[i];const morphTargetsRelative=this.morphTargetsRelative;for(let j=0,jl=morphAttribute.count;j<jl;j++){_vector$4.fromBufferAttribute(morphAttribute,j);if(morphTargetsRelative){_offset.fromBufferAttribute(position,j);_vector$4.add(_offset);}maxRadiusSq=Math.max(maxRadiusSq,center.distanceToSquared(_vector$4));}}}this.boundingSphere.radius=Math.sqrt(maxRadiusSq);if(isNaN(this.boundingSphere.radius)){console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.',this);}}},computeFaceNormals:function(){// backwards compatibility\n},computeTangents:function(){const index=this.index;const attributes=this.attributes;// based on http://www.terathon.com/code/tangent.html\n// (per vertex tangents)\nif(index===null||attributes.position===undefined||attributes.normal===undefined||attributes.uv===undefined){console.error('THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)');return;}const indices=index.array;const positions=attributes.position.array;const normals=attributes.normal.array;const uvs=attributes.uv.array;const nVertices=positions.length/3;if(attributes.tangent===undefined){this.setAttribute('tangent',new BufferAttribute(new Float32Array(4*nVertices),4));}const tangents=attributes.tangent.array;const tan1=[],tan2=[];for(let i=0;i<nVertices;i++){tan1[i]=new Vector3();tan2[i]=new Vector3();}const vA=new Vector3(),vB=new Vector3(),vC=new Vector3(),uvA=new Vector2(),uvB=new Vector2(),uvC=new Vector2(),sdir=new Vector3(),tdir=new Vector3();function handleTriangle(a,b,c){vA.fromArray(positions,a*3);vB.fromArray(positions,b*3);vC.fromArray(positions,c*3);uvA.fromArray(uvs,a*2);uvB.fromArray(uvs,b*2);uvC.fromArray(uvs,c*2);vB.sub(vA);vC.sub(vA);uvB.sub(uvA);uvC.sub(uvA);const r=1.0/(uvB.x*uvC.y-uvC.x*uvB.y);// silently ignore degenerate uv triangles having coincident or colinear vertices\nif(!isFinite(r))return;sdir.copy(vB).multiplyScalar(uvC.y).addScaledVector(vC,-uvB.y).multiplyScalar(r);tdir.copy(vC).multiplyScalar(uvB.x).addScaledVector(vB,-uvC.x).multiplyScalar(r);tan1[a].add(sdir);tan1[b].add(sdir);tan1[c].add(sdir);tan2[a].add(tdir);tan2[b].add(tdir);tan2[c].add(tdir);}let groups=this.groups;if(groups.length===0){groups=[{start:0,count:indices.length}];}for(let i=0,il=groups.length;i<il;++i){const group=groups[i];const start=group.start;const count=group.count;for(let j=start,jl=start+count;j<jl;j+=3){handleTriangle(indices[j+0],indices[j+1],indices[j+2]);}}const tmp=new Vector3(),tmp2=new Vector3();const n=new Vector3(),n2=new Vector3();function handleVertex(v){n.fromArray(normals,v*3);n2.copy(n);const t=tan1[v];// Gram-Schmidt orthogonalize\ntmp.copy(t);tmp.sub(n.multiplyScalar(n.dot(t))).normalize();// Calculate handedness\ntmp2.crossVectors(n2,t);const test=tmp2.dot(tan2[v]);const w=test<0.0?-1.0:1.0;tangents[v*4]=tmp.x;tangents[v*4+1]=tmp.y;tangents[v*4+2]=tmp.z;tangents[v*4+3]=w;}for(let i=0,il=groups.length;i<il;++i){const group=groups[i];const start=group.start;const count=group.count;for(let j=start,jl=start+count;j<jl;j+=3){handleVertex(indices[j+0]);handleVertex(indices[j+1]);handleVertex(indices[j+2]);}}},computeVertexNormals:function(){const index=this.index;const positionAttribute=this.getAttribute('position');if(positionAttribute!==undefined){let normalAttribute=this.getAttribute('normal');if(normalAttribute===undefined){normalAttribute=new BufferAttribute(new Float32Array(positionAttribute.count*3),3);this.setAttribute('normal',normalAttribute);}else{// reset existing normals to zero\nfor(let i=0,il=normalAttribute.count;i<il;i++){normalAttribute.setXYZ(i,0,0,0);}}const pA=new Vector3(),pB=new Vector3(),pC=new Vector3();const nA=new Vector3(),nB=new Vector3(),nC=new Vector3();const cb=new Vector3(),ab=new Vector3();// indexed elements\nif(index){for(let i=0,il=index.count;i<il;i+=3){const vA=index.getX(i+0);const vB=index.getX(i+1);const vC=index.getX(i+2);pA.fromBufferAttribute(positionAttribute,vA);pB.fromBufferAttribute(positionAttribute,vB);pC.fromBufferAttribute(positionAttribute,vC);cb.subVectors(pC,pB);ab.subVectors(pA,pB);cb.cross(ab);nA.fromBufferAttribute(normalAttribute,vA);nB.fromBufferAttribute(normalAttribute,vB);nC.fromBufferAttribute(normalAttribute,vC);nA.add(cb);nB.add(cb);nC.add(cb);normalAttribute.setXYZ(vA,nA.x,nA.y,nA.z);normalAttribute.setXYZ(vB,nB.x,nB.y,nB.z);normalAttribute.setXYZ(vC,nC.x,nC.y,nC.z);}}else{// non-indexed elements (unconnected triangle soup)\nfor(let i=0,il=positionAttribute.count;i<il;i+=3){pA.fromBufferAttribute(positionAttribute,i+0);pB.fromBufferAttribute(positionAttribute,i+1);pC.fromBufferAttribute(positionAttribute,i+2);cb.subVectors(pC,pB);ab.subVectors(pA,pB);cb.cross(ab);normalAttribute.setXYZ(i+0,cb.x,cb.y,cb.z);normalAttribute.setXYZ(i+1,cb.x,cb.y,cb.z);normalAttribute.setXYZ(i+2,cb.x,cb.y,cb.z);}}this.normalizeNormals();normalAttribute.needsUpdate=true;}},merge:function(geometry,offset){if(!(geometry&&geometry.isBufferGeometry)){console.error('THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.',geometry);return;}if(offset===undefined){offset=0;console.warn('THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '+'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.');}const attributes=this.attributes;for(const key in attributes){if(geometry.attributes[key]===undefined)continue;const attribute1=attributes[key];const attributeArray1=attribute1.array;const attribute2=geometry.attributes[key];const attributeArray2=attribute2.array;const attributeOffset=attribute2.itemSize*offset;const length=Math.min(attributeArray2.length,attributeArray1.length-attributeOffset);for(let i=0,j=attributeOffset;i<length;i++,j++){attributeArray1[j]=attributeArray2[i];}}return this;},normalizeNormals:function(){const normals=this.attributes.normal;for(let i=0,il=normals.count;i<il;i++){_vector$4.fromBufferAttribute(normals,i);_vector$4.normalize();normals.setXYZ(i,_vector$4.x,_vector$4.y,_vector$4.z);}},toNonIndexed:function(){function convertBufferAttribute(attribute,indices){const array=attribute.array;const itemSize=attribute.itemSize;const normalized=attribute.normalized;const array2=new array.constructor(indices.length*itemSize);let index=0,index2=0;for(let i=0,l=indices.length;i<l;i++){index=indices[i]*itemSize;for(let j=0;j<itemSize;j++){array2[index2++]=array[index++];}}return new BufferAttribute(array2,itemSize,normalized);}//\nif(this.index===null){console.warn('THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.');return this;}const geometry2=new BufferGeometry();const indices=this.index.array;const attributes=this.attributes;// attributes\nfor(const name in attributes){const attribute=attributes[name];const newAttribute=convertBufferAttribute(attribute,indices);geometry2.setAttribute(name,newAttribute);}// morph attributes\nconst morphAttributes=this.morphAttributes;for(const name in morphAttributes){const morphArray=[];const morphAttribute=morphAttributes[name];// morphAttribute: array of Float32BufferAttributes\nfor(let i=0,il=morphAttribute.length;i<il;i++){const attribute=morphAttribute[i];const newAttribute=convertBufferAttribute(attribute,indices);morphArray.push(newAttribute);}geometry2.morphAttributes[name]=morphArray;}geometry2.morphTargetsRelative=this.morphTargetsRelative;// groups\nconst groups=this.groups;for(let i=0,l=groups.length;i<l;i++){const group=groups[i];geometry2.addGroup(group.start,group.count,group.materialIndex);}return geometry2;},toJSON:function(){const data={metadata:{version:4.5,type:'BufferGeometry',generator:'BufferGeometry.toJSON'}};// standard BufferGeometry serialization\ndata.uuid=this.uuid;data.type=this.type;if(this.name!=='')data.name=this.name;if(Object.keys(this.userData).length>0)data.userData=this.userData;if(this.parameters!==undefined){const parameters=this.parameters;for(const key in parameters){if(parameters[key]!==undefined)data[key]=parameters[key];}return data;}data.data={attributes:{}};const index=this.index;if(index!==null){data.data.index={type:index.array.constructor.name,array:Array.prototype.slice.call(index.array)};}const attributes=this.attributes;for(const key in attributes){const attribute=attributes[key];const attributeData=attribute.toJSON(data.data);if(attribute.name!=='')attributeData.name=attribute.name;data.data.attributes[key]=attributeData;}const morphAttributes={};let hasMorphAttributes=false;for(const key in this.morphAttributes){const attributeArray=this.morphAttributes[key];const array=[];for(let i=0,il=attributeArray.length;i<il;i++){const attribute=attributeArray[i];const attributeData=attribute.toJSON(data.data);if(attribute.name!=='')attributeData.name=attribute.name;array.push(attributeData);}if(array.length>0){morphAttributes[key]=array;hasMorphAttributes=true;}}if(hasMorphAttributes){data.data.morphAttributes=morphAttributes;data.data.morphTargetsRelative=this.morphTargetsRelative;}const groups=this.groups;if(groups.length>0){data.data.groups=JSON.parse(JSON.stringify(groups));}const boundingSphere=this.boundingSphere;if(boundingSphere!==null){data.data.boundingSphere={center:boundingSphere.center.toArray(),radius:boundingSphere.radius};}return data;},clone:function(){/*\n\t\t // Handle primitives\n\n\t\t const parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t const values = [];\n\n\t\t for ( const key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t const geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */return new BufferGeometry().copy(this);},copy:function(source){// reset\nthis.index=null;this.attributes={};this.morphAttributes={};this.groups=[];this.boundingBox=null;this.boundingSphere=null;// used for storing cloned, shared data\nconst data={};// name\nthis.name=source.name;// index\nconst index=source.index;if(index!==null){this.setIndex(index.clone(data));}// attributes\nconst attributes=source.attributes;for(const name in attributes){const attribute=attributes[name];this.setAttribute(name,attribute.clone(data));}// morph attributes\nconst morphAttributes=source.morphAttributes;for(const name in morphAttributes){const array=[];const morphAttribute=morphAttributes[name];// morphAttribute: array of Float32BufferAttributes\nfor(let i=0,l=morphAttribute.length;i<l;i++){array.push(morphAttribute[i].clone(data));}this.morphAttributes[name]=array;}this.morphTargetsRelative=source.morphTargetsRelative;// groups\nconst groups=source.groups;for(let i=0,l=groups.length;i<l;i++){const group=groups[i];this.addGroup(group.start,group.count,group.materialIndex);}// bounding box\nconst boundingBox=source.boundingBox;if(boundingBox!==null){this.boundingBox=boundingBox.clone();}// bounding sphere\nconst boundingSphere=source.boundingSphere;if(boundingSphere!==null){this.boundingSphere=boundingSphere.clone();}// draw range\nthis.drawRange.start=source.drawRange.start;this.drawRange.count=source.drawRange.count;// user data\nthis.userData=source.userData;return this;},dispose:function(){this.dispatchEvent({type:'dispose'});}});const _inverseMatrix=new Matrix4();const _ray=new Ray();const _sphere=new Sphere();const _vA=new Vector3();const _vB=new Vector3();const _vC=new Vector3();const _tempA=new Vector3();const _tempB=new Vector3();const _tempC=new Vector3();const _morphA=new Vector3();const _morphB=new Vector3();const _morphC=new Vector3();const _uvA=new Vector2();const _uvB=new Vector2();const _uvC=new Vector2();const _intersectionPoint=new Vector3();const _intersectionPointWorld=new Vector3();function Mesh(geometry=new BufferGeometry(),material=new MeshBasicMaterial()){Object3D.call(this);this.type='Mesh';this.geometry=geometry;this.material=material;this.updateMorphTargets();}Mesh.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Mesh,isMesh:true,copy:function(source){Object3D.prototype.copy.call(this,source);if(source.morphTargetInfluences!==undefined){this.morphTargetInfluences=source.morphTargetInfluences.slice();}if(source.morphTargetDictionary!==undefined){this.morphTargetDictionary=Object.assign({},source.morphTargetDictionary);}this.material=source.material;this.geometry=source.geometry;return this;},updateMorphTargets:function(){const geometry=this.geometry;if(geometry.isBufferGeometry){const morphAttributes=geometry.morphAttributes;const keys=Object.keys(morphAttributes);if(keys.length>0){const morphAttribute=morphAttributes[keys[0]];if(morphAttribute!==undefined){this.morphTargetInfluences=[];this.morphTargetDictionary={};for(let m=0,ml=morphAttribute.length;m<ml;m++){const name=morphAttribute[m].name||String(m);this.morphTargetInfluences.push(0);this.morphTargetDictionary[name]=m;}}}}else{const morphTargets=geometry.morphTargets;if(morphTargets!==undefined&&morphTargets.length>0){console.error('THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');}}},raycast:function(raycaster,intersects){const geometry=this.geometry;const material=this.material;const matrixWorld=this.matrixWorld;if(material===undefined)return;// Checking boundingSphere distance to ray\nif(geometry.boundingSphere===null)geometry.computeBoundingSphere();_sphere.copy(geometry.boundingSphere);_sphere.applyMatrix4(matrixWorld);if(raycaster.ray.intersectsSphere(_sphere)===false)return;//\n_inverseMatrix.copy(matrixWorld).invert();_ray.copy(raycaster.ray).applyMatrix4(_inverseMatrix);// Check boundingBox before continuing\nif(geometry.boundingBox!==null){if(_ray.intersectsBox(geometry.boundingBox)===false)return;}let intersection;if(geometry.isBufferGeometry){const index=geometry.index;const position=geometry.attributes.position;const morphPosition=geometry.morphAttributes.position;const morphTargetsRelative=geometry.morphTargetsRelative;const uv=geometry.attributes.uv;const uv2=geometry.attributes.uv2;const groups=geometry.groups;const drawRange=geometry.drawRange;if(index!==null){// indexed buffer geometry\nif(Array.isArray(material)){for(let i=0,il=groups.length;i<il;i++){const group=groups[i];const groupMaterial=material[group.materialIndex];const start=Math.max(group.start,drawRange.start);const end=Math.min(group.start+group.count,drawRange.start+drawRange.count);for(let j=start,jl=end;j<jl;j+=3){const a=index.getX(j);const b=index.getX(j+1);const c=index.getX(j+2);intersection=checkBufferGeometryIntersection(this,groupMaterial,raycaster,_ray,position,morphPosition,morphTargetsRelative,uv,uv2,a,b,c);if(intersection){intersection.faceIndex=Math.floor(j/3);// triangle number in indexed buffer semantics\nintersection.face.materialIndex=group.materialIndex;intersects.push(intersection);}}}}else{const start=Math.max(0,drawRange.start);const end=Math.min(index.count,drawRange.start+drawRange.count);for(let i=start,il=end;i<il;i+=3){const a=index.getX(i);const b=index.getX(i+1);const c=index.getX(i+2);intersection=checkBufferGeometryIntersection(this,material,raycaster,_ray,position,morphPosition,morphTargetsRelative,uv,uv2,a,b,c);if(intersection){intersection.faceIndex=Math.floor(i/3);// triangle number in indexed buffer semantics\nintersects.push(intersection);}}}}else if(position!==undefined){// non-indexed buffer geometry\nif(Array.isArray(material)){for(let i=0,il=groups.length;i<il;i++){const group=groups[i];const groupMaterial=material[group.materialIndex];const start=Math.max(group.start,drawRange.start);const end=Math.min(group.start+group.count,drawRange.start+drawRange.count);for(let j=start,jl=end;j<jl;j+=3){const a=j;const b=j+1;const c=j+2;intersection=checkBufferGeometryIntersection(this,groupMaterial,raycaster,_ray,position,morphPosition,morphTargetsRelative,uv,uv2,a,b,c);if(intersection){intersection.faceIndex=Math.floor(j/3);// triangle number in non-indexed buffer semantics\nintersection.face.materialIndex=group.materialIndex;intersects.push(intersection);}}}}else{const start=Math.max(0,drawRange.start);const end=Math.min(position.count,drawRange.start+drawRange.count);for(let i=start,il=end;i<il;i+=3){const a=i;const b=i+1;const c=i+2;intersection=checkBufferGeometryIntersection(this,material,raycaster,_ray,position,morphPosition,morphTargetsRelative,uv,uv2,a,b,c);if(intersection){intersection.faceIndex=Math.floor(i/3);// triangle number in non-indexed buffer semantics\nintersects.push(intersection);}}}}}else if(geometry.isGeometry){console.error('THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');}}});function checkIntersection(object,material,raycaster,ray,pA,pB,pC,point){let intersect;if(material.side===BackSide){intersect=ray.intersectTriangle(pC,pB,pA,true,point);}else{intersect=ray.intersectTriangle(pA,pB,pC,material.side!==DoubleSide,point);}if(intersect===null)return null;_intersectionPointWorld.copy(point);_intersectionPointWorld.applyMatrix4(object.matrixWorld);const distance=raycaster.ray.origin.distanceTo(_intersectionPointWorld);if(distance<raycaster.near||distance>raycaster.far)return null;return{distance:distance,point:_intersectionPointWorld.clone(),object:object};}function checkBufferGeometryIntersection(object,material,raycaster,ray,position,morphPosition,morphTargetsRelative,uv,uv2,a,b,c){_vA.fromBufferAttribute(position,a);_vB.fromBufferAttribute(position,b);_vC.fromBufferAttribute(position,c);const morphInfluences=object.morphTargetInfluences;if(material.morphTargets&&morphPosition&&morphInfluences){_morphA.set(0,0,0);_morphB.set(0,0,0);_morphC.set(0,0,0);for(let i=0,il=morphPosition.length;i<il;i++){const influence=morphInfluences[i];const morphAttribute=morphPosition[i];if(influence===0)continue;_tempA.fromBufferAttribute(morphAttribute,a);_tempB.fromBufferAttribute(morphAttribute,b);_tempC.fromBufferAttribute(morphAttribute,c);if(morphTargetsRelative){_morphA.addScaledVector(_tempA,influence);_morphB.addScaledVector(_tempB,influence);_morphC.addScaledVector(_tempC,influence);}else{_morphA.addScaledVector(_tempA.sub(_vA),influence);_morphB.addScaledVector(_tempB.sub(_vB),influence);_morphC.addScaledVector(_tempC.sub(_vC),influence);}}_vA.add(_morphA);_vB.add(_morphB);_vC.add(_morphC);}if(object.isSkinnedMesh){object.boneTransform(a,_vA);object.boneTransform(b,_vB);object.boneTransform(c,_vC);}const intersection=checkIntersection(object,material,raycaster,ray,_vA,_vB,_vC,_intersectionPoint);if(intersection){if(uv){_uvA.fromBufferAttribute(uv,a);_uvB.fromBufferAttribute(uv,b);_uvC.fromBufferAttribute(uv,c);intersection.uv=Triangle.getUV(_intersectionPoint,_vA,_vB,_vC,_uvA,_uvB,_uvC,new Vector2());}if(uv2){_uvA.fromBufferAttribute(uv2,a);_uvB.fromBufferAttribute(uv2,b);_uvC.fromBufferAttribute(uv2,c);intersection.uv2=Triangle.getUV(_intersectionPoint,_vA,_vB,_vC,_uvA,_uvB,_uvC,new Vector2());}const face=new Face3(a,b,c);Triangle.getNormal(_vA,_vB,_vC,face.normal);intersection.face=face;}return intersection;}class BoxGeometry extends BufferGeometry{constructor(width=1,height=1,depth=1,widthSegments=1,heightSegments=1,depthSegments=1){super();this.type='BoxGeometry';this.parameters={width:width,height:height,depth:depth,widthSegments:widthSegments,heightSegments:heightSegments,depthSegments:depthSegments};const scope=this;// segments\nwidthSegments=Math.floor(widthSegments);heightSegments=Math.floor(heightSegments);depthSegments=Math.floor(depthSegments);// buffers\nconst indices=[];const vertices=[];const normals=[];const uvs=[];// helper variables\nlet numberOfVertices=0;let groupStart=0;// build each side of the box geometry\nbuildPlane('z','y','x',-1,-1,depth,height,width,depthSegments,heightSegments,0);// px\nbuildPlane('z','y','x',1,-1,depth,height,-width,depthSegments,heightSegments,1);// nx\nbuildPlane('x','z','y',1,1,width,depth,height,widthSegments,depthSegments,2);// py\nbuildPlane('x','z','y',1,-1,width,depth,-height,widthSegments,depthSegments,3);// ny\nbuildPlane('x','y','z',1,-1,width,height,depth,widthSegments,heightSegments,4);// pz\nbuildPlane('x','y','z',-1,-1,width,height,-depth,widthSegments,heightSegments,5);// nz\n// build geometry\nthis.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('normal',new Float32BufferAttribute(normals,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));function buildPlane(u,v,w,udir,vdir,width,height,depth,gridX,gridY,materialIndex){const segmentWidth=width/gridX;const segmentHeight=height/gridY;const widthHalf=width/2;const heightHalf=height/2;const depthHalf=depth/2;const gridX1=gridX+1;const gridY1=gridY+1;let vertexCounter=0;let groupCount=0;const vector=new Vector3();// generate vertices, normals and uvs\nfor(let iy=0;iy<gridY1;iy++){const y=iy*segmentHeight-heightHalf;for(let ix=0;ix<gridX1;ix++){const x=ix*segmentWidth-widthHalf;// set values to correct vector component\nvector[u]=x*udir;vector[v]=y*vdir;vector[w]=depthHalf;// now apply vector to vertex buffer\nvertices.push(vector.x,vector.y,vector.z);// set values to correct vector component\nvector[u]=0;vector[v]=0;vector[w]=depth>0?1:-1;// now apply vector to normal buffer\nnormals.push(vector.x,vector.y,vector.z);// uvs\nuvs.push(ix/gridX);uvs.push(1-iy/gridY);// counters\nvertexCounter+=1;}}// indices\n// 1. you need three indices to draw a single face\n// 2. a single segment consists of two faces\n// 3. so we need to generate six (2*3) indices per segment\nfor(let iy=0;iy<gridY;iy++){for(let ix=0;ix<gridX;ix++){const a=numberOfVertices+ix+gridX1*iy;const b=numberOfVertices+ix+gridX1*(iy+1);const c=numberOfVertices+(ix+1)+gridX1*(iy+1);const d=numberOfVertices+(ix+1)+gridX1*iy;// faces\nindices.push(a,b,d);indices.push(b,c,d);// increase counter\ngroupCount+=6;}}// add a group to the geometry. this will ensure multi material support\nscope.addGroup(groupStart,groupCount,materialIndex);// calculate new start value for groups\ngroupStart+=groupCount;// update total number of vertices\nnumberOfVertices+=vertexCounter;}}}/**\n * Uniform Utilities\n */function cloneUniforms(src){const dst={};for(const u in src){dst[u]={};for(const p in src[u]){const property=src[u][p];if(property&&(property.isColor||property.isMatrix3||property.isMatrix4||property.isVector2||property.isVector3||property.isVector4||property.isTexture)){dst[u][p]=property.clone();}else if(Array.isArray(property)){dst[u][p]=property.slice();}else{dst[u][p]=property;}}}return dst;}function mergeUniforms(uniforms){const merged={};for(let u=0;u<uniforms.length;u++){const tmp=cloneUniforms(uniforms[u]);for(const p in tmp){merged[p]=tmp[p];}}return merged;}// Legacy\nconst UniformsUtils={clone:cloneUniforms,merge:mergeUniforms};var default_vertex=\"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";var default_fragment=\"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";/**\n * parameters = {\n *  defines: { \"label\" : \"value\" },\n *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n *\n *  fragmentShader: <string>,\n *  vertexShader: <string>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  lights: <bool>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */function ShaderMaterial(parameters){Material.call(this);this.type='ShaderMaterial';this.defines={};this.uniforms={};this.vertexShader=default_vertex;this.fragmentShader=default_fragment;this.linewidth=1;this.wireframe=false;this.wireframeLinewidth=1;this.fog=false;// set to use scene fog\nthis.lights=false;// set to use scene lights\nthis.clipping=false;// set to use user-defined clipping planes\nthis.skinning=false;// set to use skinning attribute streams\nthis.morphTargets=false;// set to use morph targets\nthis.morphNormals=false;// set to use morph normals\nthis.extensions={derivatives:false,// set to use derivatives\nfragDepth:false,// set to use fragment depth values\ndrawBuffers:false,// set to use draw buffers\nshaderTextureLOD:false// set to use shader texture LOD\n};// When rendered geometry doesn't include these attributes but the material does,\n// use these default values in WebGL. This avoids errors when buffer data is missing.\nthis.defaultAttributeValues={'color':[1,1,1],'uv':[0,0],'uv2':[0,0]};this.index0AttributeName=undefined;this.uniformsNeedUpdate=false;this.glslVersion=null;if(parameters!==undefined){if(parameters.attributes!==undefined){console.error('THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.');}this.setValues(parameters);}}ShaderMaterial.prototype=Object.create(Material.prototype);ShaderMaterial.prototype.constructor=ShaderMaterial;ShaderMaterial.prototype.isShaderMaterial=true;ShaderMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.fragmentShader=source.fragmentShader;this.vertexShader=source.vertexShader;this.uniforms=cloneUniforms(source.uniforms);this.defines=Object.assign({},source.defines);this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.lights=source.lights;this.clipping=source.clipping;this.skinning=source.skinning;this.morphTargets=source.morphTargets;this.morphNormals=source.morphNormals;this.extensions=Object.assign({},source.extensions);this.glslVersion=source.glslVersion;return this;};ShaderMaterial.prototype.toJSON=function(meta){const data=Material.prototype.toJSON.call(this,meta);data.glslVersion=this.glslVersion;data.uniforms={};for(const name in this.uniforms){const uniform=this.uniforms[name];const value=uniform.value;if(value&&value.isTexture){data.uniforms[name]={type:'t',value:value.toJSON(meta).uuid};}else if(value&&value.isColor){data.uniforms[name]={type:'c',value:value.getHex()};}else if(value&&value.isVector2){data.uniforms[name]={type:'v2',value:value.toArray()};}else if(value&&value.isVector3){data.uniforms[name]={type:'v3',value:value.toArray()};}else if(value&&value.isVector4){data.uniforms[name]={type:'v4',value:value.toArray()};}else if(value&&value.isMatrix3){data.uniforms[name]={type:'m3',value:value.toArray()};}else if(value&&value.isMatrix4){data.uniforms[name]={type:'m4',value:value.toArray()};}else{data.uniforms[name]={value:value};// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n}}if(Object.keys(this.defines).length>0)data.defines=this.defines;data.vertexShader=this.vertexShader;data.fragmentShader=this.fragmentShader;const extensions={};for(const key in this.extensions){if(this.extensions[key]===true)extensions[key]=true;}if(Object.keys(extensions).length>0)data.extensions=extensions;return data;};function Camera(){Object3D.call(this);this.type='Camera';this.matrixWorldInverse=new Matrix4();this.projectionMatrix=new Matrix4();this.projectionMatrixInverse=new Matrix4();}Camera.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Camera,isCamera:true,copy:function(source,recursive){Object3D.prototype.copy.call(this,source,recursive);this.matrixWorldInverse.copy(source.matrixWorldInverse);this.projectionMatrix.copy(source.projectionMatrix);this.projectionMatrixInverse.copy(source.projectionMatrixInverse);return this;},getWorldDirection:function(target){if(target===undefined){console.warn('THREE.Camera: .getWorldDirection() target is now required');target=new Vector3();}this.updateWorldMatrix(true,false);const e=this.matrixWorld.elements;return target.set(-e[8],-e[9],-e[10]).normalize();},updateMatrixWorld:function(force){Object3D.prototype.updateMatrixWorld.call(this,force);this.matrixWorldInverse.copy(this.matrixWorld).invert();},updateWorldMatrix:function(updateParents,updateChildren){Object3D.prototype.updateWorldMatrix.call(this,updateParents,updateChildren);this.matrixWorldInverse.copy(this.matrixWorld).invert();},clone:function(){return new this.constructor().copy(this);}});function PerspectiveCamera(fov=50,aspect=1,near=0.1,far=2000){Camera.call(this);this.type='PerspectiveCamera';this.fov=fov;this.zoom=1;this.near=near;this.far=far;this.focus=10;this.aspect=aspect;this.view=null;this.filmGauge=35;// width of the film (default in millimeters)\nthis.filmOffset=0;// horizontal film offset (same unit as gauge)\nthis.updateProjectionMatrix();}PerspectiveCamera.prototype=Object.assign(Object.create(Camera.prototype),{constructor:PerspectiveCamera,isPerspectiveCamera:true,copy:function(source,recursive){Camera.prototype.copy.call(this,source,recursive);this.fov=source.fov;this.zoom=source.zoom;this.near=source.near;this.far=source.far;this.focus=source.focus;this.aspect=source.aspect;this.view=source.view===null?null:Object.assign({},source.view);this.filmGauge=source.filmGauge;this.filmOffset=source.filmOffset;return this;},/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */setFocalLength:function(focalLength){/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */const vExtentSlope=0.5*this.getFilmHeight()/focalLength;this.fov=MathUtils.RAD2DEG*2*Math.atan(vExtentSlope);this.updateProjectionMatrix();},/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */getFocalLength:function(){const vExtentSlope=Math.tan(MathUtils.DEG2RAD*0.5*this.fov);return 0.5*this.getFilmHeight()/vExtentSlope;},getEffectiveFOV:function(){return MathUtils.RAD2DEG*2*Math.atan(Math.tan(MathUtils.DEG2RAD*0.5*this.fov)/this.zoom);},getFilmWidth:function(){// film not completely covered in portrait format (aspect < 1)\nreturn this.filmGauge*Math.min(this.aspect,1);},getFilmHeight:function(){// film not completely covered in landscape format (aspect > 1)\nreturn this.filmGauge/Math.max(this.aspect,1);},/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */setViewOffset:function(fullWidth,fullHeight,x,y,width,height){this.aspect=fullWidth/fullHeight;if(this.view===null){this.view={enabled:true,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1};}this.view.enabled=true;this.view.fullWidth=fullWidth;this.view.fullHeight=fullHeight;this.view.offsetX=x;this.view.offsetY=y;this.view.width=width;this.view.height=height;this.updateProjectionMatrix();},clearViewOffset:function(){if(this.view!==null){this.view.enabled=false;}this.updateProjectionMatrix();},updateProjectionMatrix:function(){const near=this.near;let top=near*Math.tan(MathUtils.DEG2RAD*0.5*this.fov)/this.zoom;let height=2*top;let width=this.aspect*height;let left=-0.5*width;const view=this.view;if(this.view!==null&&this.view.enabled){const fullWidth=view.fullWidth,fullHeight=view.fullHeight;left+=view.offsetX*width/fullWidth;top-=view.offsetY*height/fullHeight;width*=view.width/fullWidth;height*=view.height/fullHeight;}const skew=this.filmOffset;if(skew!==0)left+=near*skew/this.getFilmWidth();this.projectionMatrix.makePerspective(left,left+width,top,top-height,near,this.far);this.projectionMatrixInverse.copy(this.projectionMatrix).invert();},toJSON:function(meta){const data=Object3D.prototype.toJSON.call(this,meta);data.object.fov=this.fov;data.object.zoom=this.zoom;data.object.near=this.near;data.object.far=this.far;data.object.focus=this.focus;data.object.aspect=this.aspect;if(this.view!==null)data.object.view=Object.assign({},this.view);data.object.filmGauge=this.filmGauge;data.object.filmOffset=this.filmOffset;return data;}});const fov=90,aspect=1;function CubeCamera(near,far,renderTarget){Object3D.call(this);this.type='CubeCamera';if(renderTarget.isWebGLCubeRenderTarget!==true){console.error('THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.');return;}this.renderTarget=renderTarget;const cameraPX=new PerspectiveCamera(fov,aspect,near,far);cameraPX.layers=this.layers;cameraPX.up.set(0,-1,0);cameraPX.lookAt(new Vector3(1,0,0));this.add(cameraPX);const cameraNX=new PerspectiveCamera(fov,aspect,near,far);cameraNX.layers=this.layers;cameraNX.up.set(0,-1,0);cameraNX.lookAt(new Vector3(-1,0,0));this.add(cameraNX);const cameraPY=new PerspectiveCamera(fov,aspect,near,far);cameraPY.layers=this.layers;cameraPY.up.set(0,0,1);cameraPY.lookAt(new Vector3(0,1,0));this.add(cameraPY);const cameraNY=new PerspectiveCamera(fov,aspect,near,far);cameraNY.layers=this.layers;cameraNY.up.set(0,0,-1);cameraNY.lookAt(new Vector3(0,-1,0));this.add(cameraNY);const cameraPZ=new PerspectiveCamera(fov,aspect,near,far);cameraPZ.layers=this.layers;cameraPZ.up.set(0,-1,0);cameraPZ.lookAt(new Vector3(0,0,1));this.add(cameraPZ);const cameraNZ=new PerspectiveCamera(fov,aspect,near,far);cameraNZ.layers=this.layers;cameraNZ.up.set(0,-1,0);cameraNZ.lookAt(new Vector3(0,0,-1));this.add(cameraNZ);this.update=function(renderer,scene){if(this.parent===null)this.updateMatrixWorld();const currentXrEnabled=renderer.xr.enabled;const currentRenderTarget=renderer.getRenderTarget();renderer.xr.enabled=false;const generateMipmaps=renderTarget.texture.generateMipmaps;renderTarget.texture.generateMipmaps=false;renderer.setRenderTarget(renderTarget,0);renderer.render(scene,cameraPX);renderer.setRenderTarget(renderTarget,1);renderer.render(scene,cameraNX);renderer.setRenderTarget(renderTarget,2);renderer.render(scene,cameraPY);renderer.setRenderTarget(renderTarget,3);renderer.render(scene,cameraNY);renderer.setRenderTarget(renderTarget,4);renderer.render(scene,cameraPZ);renderTarget.texture.generateMipmaps=generateMipmaps;renderer.setRenderTarget(renderTarget,5);renderer.render(scene,cameraNZ);renderer.setRenderTarget(currentRenderTarget);renderer.xr.enabled=currentXrEnabled;};}CubeCamera.prototype=Object.create(Object3D.prototype);CubeCamera.prototype.constructor=CubeCamera;function CubeTexture(images,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy,encoding){images=images!==undefined?images:[];mapping=mapping!==undefined?mapping:CubeReflectionMapping;format=format!==undefined?format:RGBFormat;Texture.call(this,images,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy,encoding);this.flipY=false;// Why CubeTexture._needsFlipEnvMap is necessary:\n//\n// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n// and the flag _needsFlipEnvMap controls this conversion. The flip is not required (and thus _needsFlipEnvMap is set to false)\n// when using WebGLCubeRenderTarget.texture as a cube texture.\nthis._needsFlipEnvMap=true;}CubeTexture.prototype=Object.create(Texture.prototype);CubeTexture.prototype.constructor=CubeTexture;CubeTexture.prototype.isCubeTexture=true;Object.defineProperty(CubeTexture.prototype,'images',{get:function(){return this.image;},set:function(value){this.image=value;}});class WebGLCubeRenderTarget extends WebGLRenderTarget{constructor(size,options,dummy){if(Number.isInteger(options)){console.warn('THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )');options=dummy;}super(size,size,options);Object.defineProperty(this,'isWebGLCubeRenderTarget',{value:true});options=options||{};this.texture=new CubeTexture(undefined,options.mapping,options.wrapS,options.wrapT,options.magFilter,options.minFilter,options.format,options.type,options.anisotropy,options.encoding);this.texture._needsFlipEnvMap=false;}fromEquirectangularTexture(renderer,texture){this.texture.type=texture.type;this.texture.format=RGBAFormat;// see #18859\nthis.texture.encoding=texture.encoding;this.texture.generateMipmaps=texture.generateMipmaps;this.texture.minFilter=texture.minFilter;this.texture.magFilter=texture.magFilter;const shader={uniforms:{tEquirect:{value:null}},vertexShader:/* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,fragmentShader:/* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`};const geometry=new BoxGeometry(5,5,5);const material=new ShaderMaterial({name:'CubemapFromEquirect',uniforms:cloneUniforms(shader.uniforms),vertexShader:shader.vertexShader,fragmentShader:shader.fragmentShader,side:BackSide,blending:NoBlending});material.uniforms.tEquirect.value=texture;const mesh=new Mesh(geometry,material);const currentMinFilter=texture.minFilter;// Avoid blurred poles\nif(texture.minFilter===LinearMipmapLinearFilter)texture.minFilter=LinearFilter;const camera=new CubeCamera(1,10,this);camera.update(renderer,mesh);texture.minFilter=currentMinFilter;mesh.geometry.dispose();mesh.material.dispose();return this;}clear(renderer,color,depth,stencil){const currentRenderTarget=renderer.getRenderTarget();for(let i=0;i<6;i++){renderer.setRenderTarget(this,i);renderer.clear(color,depth,stencil);}renderer.setRenderTarget(currentRenderTarget);}}function DataTexture(data,width,height,format,type,mapping,wrapS,wrapT,magFilter,minFilter,anisotropy,encoding){Texture.call(this,null,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy,encoding);this.image={data:data||null,width:width||1,height:height||1};this.magFilter=magFilter!==undefined?magFilter:NearestFilter;this.minFilter=minFilter!==undefined?minFilter:NearestFilter;this.generateMipmaps=false;this.flipY=false;this.unpackAlignment=1;this.needsUpdate=true;}DataTexture.prototype=Object.create(Texture.prototype);DataTexture.prototype.constructor=DataTexture;DataTexture.prototype.isDataTexture=true;const _sphere$1=/*@__PURE__*/new Sphere();const _vector$5=/*@__PURE__*/new Vector3();class Frustum{constructor(p0,p1,p2,p3,p4,p5){this.planes=[p0!==undefined?p0:new Plane(),p1!==undefined?p1:new Plane(),p2!==undefined?p2:new Plane(),p3!==undefined?p3:new Plane(),p4!==undefined?p4:new Plane(),p5!==undefined?p5:new Plane()];}set(p0,p1,p2,p3,p4,p5){const planes=this.planes;planes[0].copy(p0);planes[1].copy(p1);planes[2].copy(p2);planes[3].copy(p3);planes[4].copy(p4);planes[5].copy(p5);return this;}clone(){return new this.constructor().copy(this);}copy(frustum){const planes=this.planes;for(let i=0;i<6;i++){planes[i].copy(frustum.planes[i]);}return this;}setFromProjectionMatrix(m){const planes=this.planes;const me=m.elements;const me0=me[0],me1=me[1],me2=me[2],me3=me[3];const me4=me[4],me5=me[5],me6=me[6],me7=me[7];const me8=me[8],me9=me[9],me10=me[10],me11=me[11];const me12=me[12],me13=me[13],me14=me[14],me15=me[15];planes[0].setComponents(me3-me0,me7-me4,me11-me8,me15-me12).normalize();planes[1].setComponents(me3+me0,me7+me4,me11+me8,me15+me12).normalize();planes[2].setComponents(me3+me1,me7+me5,me11+me9,me15+me13).normalize();planes[3].setComponents(me3-me1,me7-me5,me11-me9,me15-me13).normalize();planes[4].setComponents(me3-me2,me7-me6,me11-me10,me15-me14).normalize();planes[5].setComponents(me3+me2,me7+me6,me11+me10,me15+me14).normalize();return this;}intersectsObject(object){const geometry=object.geometry;if(geometry.boundingSphere===null)geometry.computeBoundingSphere();_sphere$1.copy(geometry.boundingSphere).applyMatrix4(object.matrixWorld);return this.intersectsSphere(_sphere$1);}intersectsSprite(sprite){_sphere$1.center.set(0,0,0);_sphere$1.radius=0.7071067811865476;_sphere$1.applyMatrix4(sprite.matrixWorld);return this.intersectsSphere(_sphere$1);}intersectsSphere(sphere){const planes=this.planes;const center=sphere.center;const negRadius=-sphere.radius;for(let i=0;i<6;i++){const distance=planes[i].distanceToPoint(center);if(distance<negRadius){return false;}}return true;}intersectsBox(box){const planes=this.planes;for(let i=0;i<6;i++){const plane=planes[i];// corner at max distance\n_vector$5.x=plane.normal.x>0?box.max.x:box.min.x;_vector$5.y=plane.normal.y>0?box.max.y:box.min.y;_vector$5.z=plane.normal.z>0?box.max.z:box.min.z;if(plane.distanceToPoint(_vector$5)<0){return false;}}return true;}containsPoint(point){const planes=this.planes;for(let i=0;i<6;i++){if(planes[i].distanceToPoint(point)<0){return false;}}return true;}}function WebGLAnimation(){let context=null;let isAnimating=false;let animationLoop=null;let requestId=null;function onAnimationFrame(time,frame){animationLoop(time,frame);requestId=context.requestAnimationFrame(onAnimationFrame);}return{start:function(){if(isAnimating===true)return;if(animationLoop===null)return;requestId=context.requestAnimationFrame(onAnimationFrame);isAnimating=true;},stop:function(){context.cancelAnimationFrame(requestId);isAnimating=false;},setAnimationLoop:function(callback){animationLoop=callback;},setContext:function(value){context=value;}};}function WebGLAttributes(gl,capabilities){const isWebGL2=capabilities.isWebGL2;const buffers=new WeakMap();function createBuffer(attribute,bufferType){const array=attribute.array;const usage=attribute.usage;const buffer=gl.createBuffer();gl.bindBuffer(bufferType,buffer);gl.bufferData(bufferType,array,usage);attribute.onUploadCallback();let type=5126;if(array instanceof Float32Array){type=5126;}else if(array instanceof Float64Array){console.warn('THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.');}else if(array instanceof Uint16Array){if(attribute.isFloat16BufferAttribute){if(isWebGL2){type=5131;}else{console.warn('THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.');}}else{type=5123;}}else if(array instanceof Int16Array){type=5122;}else if(array instanceof Uint32Array){type=5125;}else if(array instanceof Int32Array){type=5124;}else if(array instanceof Int8Array){type=5120;}else if(array instanceof Uint8Array){type=5121;}return{buffer:buffer,type:type,bytesPerElement:array.BYTES_PER_ELEMENT,version:attribute.version};}function updateBuffer(buffer,attribute,bufferType){const array=attribute.array;const updateRange=attribute.updateRange;gl.bindBuffer(bufferType,buffer);if(updateRange.count===-1){// Not using update ranges\ngl.bufferSubData(bufferType,0,array);}else{if(isWebGL2){gl.bufferSubData(bufferType,updateRange.offset*array.BYTES_PER_ELEMENT,array,updateRange.offset,updateRange.count);}else{gl.bufferSubData(bufferType,updateRange.offset*array.BYTES_PER_ELEMENT,array.subarray(updateRange.offset,updateRange.offset+updateRange.count));}updateRange.count=-1;// reset range\n}}//\nfunction get(attribute){if(attribute.isInterleavedBufferAttribute)attribute=attribute.data;return buffers.get(attribute);}function remove(attribute){if(attribute.isInterleavedBufferAttribute)attribute=attribute.data;const data=buffers.get(attribute);if(data){gl.deleteBuffer(data.buffer);buffers.delete(attribute);}}function update(attribute,bufferType){if(attribute.isGLBufferAttribute){const cached=buffers.get(attribute);if(!cached||cached.version<attribute.version){buffers.set(attribute,{buffer:attribute.buffer,type:attribute.type,bytesPerElement:attribute.elementSize,version:attribute.version});}return;}if(attribute.isInterleavedBufferAttribute)attribute=attribute.data;const data=buffers.get(attribute);if(data===undefined){buffers.set(attribute,createBuffer(attribute,bufferType));}else if(data.version<attribute.version){updateBuffer(data.buffer,attribute,bufferType);data.version=attribute.version;}}return{get:get,remove:remove,update:update};}class PlaneGeometry extends BufferGeometry{constructor(width=1,height=1,widthSegments=1,heightSegments=1){super();this.type='PlaneGeometry';this.parameters={width:width,height:height,widthSegments:widthSegments,heightSegments:heightSegments};const width_half=width/2;const height_half=height/2;const gridX=Math.floor(widthSegments);const gridY=Math.floor(heightSegments);const gridX1=gridX+1;const gridY1=gridY+1;const segment_width=width/gridX;const segment_height=height/gridY;//\nconst indices=[];const vertices=[];const normals=[];const uvs=[];for(let iy=0;iy<gridY1;iy++){const y=iy*segment_height-height_half;for(let ix=0;ix<gridX1;ix++){const x=ix*segment_width-width_half;vertices.push(x,-y,0);normals.push(0,0,1);uvs.push(ix/gridX);uvs.push(1-iy/gridY);}}for(let iy=0;iy<gridY;iy++){for(let ix=0;ix<gridX;ix++){const a=ix+gridX1*iy;const b=ix+gridX1*(iy+1);const c=ix+1+gridX1*(iy+1);const d=ix+1+gridX1*iy;indices.push(a,b,d);indices.push(b,c,d);}}this.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('normal',new Float32BufferAttribute(normals,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));}}var alphamap_fragment=\"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";var alphamap_pars_fragment=\"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";var alphatest_fragment=\"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\";var aomap_fragment=\"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\";var aomap_pars_fragment=\"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";var begin_vertex=\"vec3 transformed = vec3( position );\";var beginnormal_vertex=\"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";var bsdfs=\"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\\n}\\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\tif( cutoffDistance > 0.0 ) {\\n\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t}\\n\\treturn distanceFalloff;\\n#else\\n\\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t}\\n\\treturn 1.0;\\n#endif\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\\n\\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\\n\\treturn Fr * fresnel + F0;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\treturn specularColor * brdf.x + brdf.y;\\n}\\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\tvec3 FssEss = F * brdf.x + brdf.y;\\n\\tfloat Ess = brdf.x + brdf.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie(float roughness, float NoH) {\\n\\tfloat invAlpha = 1.0 / roughness;\\n\\tfloat cos2h = NoH * NoH;\\n\\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\\n}\\nfloat V_Neubelt(float NoV, float NoL) {\\n\\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\\n}\\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\\n\\tvec3 N = geometry.normal;\\n\\tvec3 V = geometry.viewDir;\\n\\tvec3 H = normalize( V + L );\\n\\tfloat dotNH = saturate( dot( N, H ) );\\n\\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\\n}\\n#endif\";var bumpmap_pars_fragment=\"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";var clipping_planes_fragment=\"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";var clipping_planes_pars_fragment=\"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";var clipping_planes_pars_vertex=\"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";var clipping_planes_vertex=\"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";var color_fragment=\"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";var color_pars_fragment=\"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";var color_pars_vertex=\"#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";var color_vertex=\"#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor.xyz *= color.xyz;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";var common=\"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\";var cube_uv_reflection_fragment=\"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_maxMipLevel 8.0\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_maxTileSize 256.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\\n\\t\\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\\n\\t\\tvec2 f = fract( uv );\\n\\t\\tuv += 0.5 - f;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tif ( mipInt < cubeUV_maxMipLevel ) {\\n\\t\\t\\tuv.y += 2.0 * cubeUV_maxTileSize;\\n\\t\\t}\\n\\t\\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\\n\\t\\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\\n\\t\\tuv *= texelSize;\\n\\t\\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.x += texelSize;\\n\\t\\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.y += texelSize;\\n\\t\\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.x -= texelSize;\\n\\t\\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tvec3 tm = mix( tl, tr, f.x );\\n\\t\\tvec3 bm = mix( bl, br, f.x );\\n\\t\\treturn mix( tm, bm, f.y );\\n\\t}\\n\\t#define r0 1.0\\n\\t#define v0 0.339\\n\\t#define m0 - 2.0\\n\\t#define r1 0.8\\n\\t#define v1 0.276\\n\\t#define m1 - 1.0\\n\\t#define r4 0.4\\n\\t#define v4 0.046\\n\\t#define m4 2.0\\n\\t#define r5 0.305\\n\\t#define v5 0.016\\n\\t#define m5 3.0\\n\\t#define r6 0.21\\n\\t#define v6 0.0038\\n\\t#define m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= r1 ) {\\n\\t\\t\\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\\n\\t\\t} else if ( roughness >= r4 ) {\\n\\t\\t\\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\\n\\t\\t} else if ( roughness >= r5 ) {\\n\\t\\t\\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\\n\\t\\t} else if ( roughness >= r6 ) {\\n\\t\\t\\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";var defaultnormal_vertex=\"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";var displacementmap_pars_vertex=\"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";var displacementmap_vertex=\"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\\n#endif\";var emissivemap_fragment=\"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";var emissivemap_pars_fragment=\"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";var encodings_fragment=\"gl_FragColor = linearToOutputTexel( gl_FragColor );\";var encodings_pars_fragment=\"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat D = max( maxRange / maxRGB, 1.0 );\\n\\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value ) {\\n\\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\\n\\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract( Le );\\n\\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\\n\\treturn vec4( max( vRGB, 0.0 ), 1.0 );\\n}\";var envmap_fragment=\"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifndef ENVMAP_TYPE_CUBE_UV\\n\\t\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";var envmap_common_pars_fragment=\"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";var envmap_pars_fragment=\"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";var envmap_pars_vertex=\"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";var envmap_vertex=\"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";var fog_vertex=\"#ifdef USE_FOG\\n\\tfogDepth = - mvPosition.z;\\n#endif\";var fog_pars_vertex=\"#ifdef USE_FOG\\n\\tvarying float fogDepth;\\n#endif\";var fog_fragment=\"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";var fog_pars_fragment=\"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";var gradientmap_pars_fragment=\"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t#else\\n\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t#endif\\n}\";var lightmap_fragment=\"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n#endif\";var lightmap_pars_fragment=\"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";var lights_lambert_vertex=\"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\nvIndirectFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n\\tvIndirectBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\\n#ifdef DOUBLE_SIDED\\n\\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\\n\\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";var lights_pars_begin=\"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\\n\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";var envmap_physical_pars_fragment=\"#if defined( USE_ENVMAP )\\n\\t#ifdef ENVMAP_MODE_REFRACTION\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\";var lights_toon_fragment=\"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";var lights_toon_pars_fragment=\"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\\n#define Material_LightProbeLOD( material )\\t(0)\";var lights_phong_fragment=\"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";var lights_phong_pars_fragment=\"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\";var lights_physical_fragment=\"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\\n#ifdef REFLECTIVITY\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#endif\\n#ifdef CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheen;\\n#endif\";var lights_physical_pars_fragment=\"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularRoughness;\\n\\tvec3 specularColor;\\n#ifdef CLEARCOAT\\n\\tfloat clearcoat;\\n\\tfloat clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tvec3 sheenColor;\\n#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifdef CLEARCOAT\\n\\t\\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = ccDotNL * directLight.color;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tccIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\\n\\t\\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\\n\\t#else\\n\\t\\tfloat clearcoatDHR = 0.0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\\n\\t\\t\\tmaterial.specularRoughness,\\n\\t\\t\\tdirectLight.direction,\\n\\t\\t\\tgeometry,\\n\\t\\t\\tmaterial.sheenColor\\n\\t\\t);\\n\\t#else\\n\\t\\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\\n\\t#endif\\n\\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef CLEARCOAT\\n\\t\\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\\n\\t\\tfloat ccDotNL = ccDotNV;\\n\\t\\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\\n\\t#else\\n\\t\\tfloat clearcoatDHR = 0.0;\\n\\t#endif\\n\\tfloat clearcoatInv = 1.0 - clearcoatDHR;\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\\n\\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";var lights_fragment_begin=\"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";var lights_fragment_maps=\"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\\n\\t#ifdef CLEARCOAT\\n\\t\\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\\n\\t#endif\\n#endif\";var lights_fragment_end=\"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";var logdepthbuf_fragment=\"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";var logdepthbuf_pars_fragment=\"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";var logdepthbuf_pars_vertex=\"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";var logdepthbuf_vertex=\"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";var map_fragment=\"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\";var map_pars_fragment=\"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";var map_particle_fragment=\"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";var map_particle_pars_fragment=\"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tuniform mat3 uvTransform;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";var metalnessmap_fragment=\"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";var metalnessmap_pars_fragment=\"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";var morphnormal_vertex=\"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n#endif\";var morphtarget_pars_vertex=\"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifndef USE_MORPHNORMALS\\n\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";var morphtarget_vertex=\"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\";var normal_fragment_begin=\"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t\\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t#endif\\n\\t\\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";var normal_fragment_maps=\"#ifdef OBJECTSPACE_NORMALMAP\\n\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( TANGENTSPACE_NORMALMAP )\\n\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tnormal = normalize( vTBN * mapN );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\";var normalmap_pars_fragment=\"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef OBJECTSPACE_NORMALMAP\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\\n\\t\\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\\n\\t\\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\\n\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\treturn normalize( tsn * mapN );\\n\\t}\\n#endif\";var clearcoat_normal_fragment_begin=\"#ifdef CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";var clearcoat_normal_fragment_maps=\"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\\n\\t#else\\n\\t\\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );\\n\\t#endif\\n#endif\";var clearcoat_pars_fragment=\"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\";var packing=\"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";var premultiplied_alpha_fragment=\"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";var project_vertex=\"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";var dithering_fragment=\"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";var dithering_pars_fragment=\"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";var roughnessmap_fragment=\"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";var roughnessmap_pars_fragment=\"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";var shadowmap_pars_fragment=\"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";var shadowmap_pars_vertex=\"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";var shadowmap_vertex=\"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\tvec4 shadowWorldPosition;\\n\\t#endif\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\";var shadowmask_pars_fragment=\"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";var skinbase_vertex=\"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";var skinning_pars_vertex=\"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform highp sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\";var skinning_vertex=\"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";var skinnormal_vertex=\"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";var specularmap_fragment=\"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";var specularmap_pars_fragment=\"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";var tonemapping_fragment=\"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";var tonemapping_pars_fragment=\"#ifndef saturate\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";var transmissionmap_fragment=\"#ifdef USE_TRANSMISSIONMAP\\n\\ttotalTransmission *= texture2D( transmissionMap, vUv ).r;\\n#endif\";var transmissionmap_pars_fragment=\"#ifdef USE_TRANSMISSIONMAP\\n\\tuniform sampler2D transmissionMap;\\n#endif\";var uv_pars_fragment=\"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\\n\\tvarying vec2 vUv;\\n#endif\";var uv_pars_vertex=\"#ifdef USE_UV\\n\\t#ifdef UVS_VERTEX_ONLY\\n\\t\\tvec2 vUv;\\n\\t#else\\n\\t\\tvarying vec2 vUv;\\n\\t#endif\\n\\tuniform mat3 uvTransform;\\n#endif\";var uv_vertex=\"#ifdef USE_UV\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";var uv2_pars_fragment=\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";var uv2_pars_vertex=\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n\\tuniform mat3 uv2Transform;\\n#endif\";var uv2_vertex=\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\\n#endif\";var worldpos_vertex=\"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";var background_frag=\"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";var background_vert=\"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";var cube_frag=\"#include <envmap_common_pars_fragment>\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\tvec3 vReflect = vWorldDirection;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = envColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";var cube_vert=\"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";var depth_frag=\"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";var depth_vert=\"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";var distanceRGBA_frag=\"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";var distanceRGBA_vert=\"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";var equirect_frag=\"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tvec4 texColor = texture2D( tEquirect, sampleUV );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";var equirect_vert=\"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";var linedashed_frag=\"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";var linedashed_vert=\"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";var meshbasic_frag=\"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\n\\t\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";var meshbasic_vert=\"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";var meshlambert_frag=\"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vIndirectFront;\\n\\t#endif\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";var meshlambert_vert=\"#define LAMBERT\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";var meshmatcap_frag=\"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t\\tmatcapColor = matcapTexelToLinear( matcapColor );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";var meshmatcap_vert=\"#define MATCAP\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#ifndef FLAT_SHADED\\n\\t\\tvNormal = normalize( transformedNormal );\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";var meshtoon_frag=\"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";var meshtoon_vert=\"#define TOON\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";var meshphong_frag=\"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";var meshphong_vert=\"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";var meshphysical_frag=\"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define REFLECTIVITY\\n\\t#define CLEARCOAT\\n\\t#define TRANSMISSION\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef TRANSMISSION\\n\\tuniform float transmission;\\n#endif\\n#ifdef REFLECTIVITY\\n\\tuniform float reflectivity;\\n#endif\\n#ifdef CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheen;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <transmissionmap_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#ifdef TRANSMISSION\\n\\t\\tfloat totalTransmission = transmission;\\n\\t#endif\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <transmissionmap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#ifdef TRANSMISSION\\n\\t\\tdiffuseColor.a *= mix( saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) ), 1.0, metalness );\\n\\t#endif\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";var meshphysical_vert=\"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";var normal_frag=\"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\";var normal_vert=\"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";var points_frag=\"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";var points_vert=\"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";var shadow_frag=\"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";var shadow_vert=\"#include <common>\\n#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";var sprite_frag=\"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";var sprite_vert=\"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";const ShaderChunk={alphamap_fragment:alphamap_fragment,alphamap_pars_fragment:alphamap_pars_fragment,alphatest_fragment:alphatest_fragment,aomap_fragment:aomap_fragment,aomap_pars_fragment:aomap_pars_fragment,begin_vertex:begin_vertex,beginnormal_vertex:beginnormal_vertex,bsdfs:bsdfs,bumpmap_pars_fragment:bumpmap_pars_fragment,clipping_planes_fragment:clipping_planes_fragment,clipping_planes_pars_fragment:clipping_planes_pars_fragment,clipping_planes_pars_vertex:clipping_planes_pars_vertex,clipping_planes_vertex:clipping_planes_vertex,color_fragment:color_fragment,color_pars_fragment:color_pars_fragment,color_pars_vertex:color_pars_vertex,color_vertex:color_vertex,common:common,cube_uv_reflection_fragment:cube_uv_reflection_fragment,defaultnormal_vertex:defaultnormal_vertex,displacementmap_pars_vertex:displacementmap_pars_vertex,displacementmap_vertex:displacementmap_vertex,emissivemap_fragment:emissivemap_fragment,emissivemap_pars_fragment:emissivemap_pars_fragment,encodings_fragment:encodings_fragment,encodings_pars_fragment:encodings_pars_fragment,envmap_fragment:envmap_fragment,envmap_common_pars_fragment:envmap_common_pars_fragment,envmap_pars_fragment:envmap_pars_fragment,envmap_pars_vertex:envmap_pars_vertex,envmap_physical_pars_fragment:envmap_physical_pars_fragment,envmap_vertex:envmap_vertex,fog_vertex:fog_vertex,fog_pars_vertex:fog_pars_vertex,fog_fragment:fog_fragment,fog_pars_fragment:fog_pars_fragment,gradientmap_pars_fragment:gradientmap_pars_fragment,lightmap_fragment:lightmap_fragment,lightmap_pars_fragment:lightmap_pars_fragment,lights_lambert_vertex:lights_lambert_vertex,lights_pars_begin:lights_pars_begin,lights_toon_fragment:lights_toon_fragment,lights_toon_pars_fragment:lights_toon_pars_fragment,lights_phong_fragment:lights_phong_fragment,lights_phong_pars_fragment:lights_phong_pars_fragment,lights_physical_fragment:lights_physical_fragment,lights_physical_pars_fragment:lights_physical_pars_fragment,lights_fragment_begin:lights_fragment_begin,lights_fragment_maps:lights_fragment_maps,lights_fragment_end:lights_fragment_end,logdepthbuf_fragment:logdepthbuf_fragment,logdepthbuf_pars_fragment:logdepthbuf_pars_fragment,logdepthbuf_pars_vertex:logdepthbuf_pars_vertex,logdepthbuf_vertex:logdepthbuf_vertex,map_fragment:map_fragment,map_pars_fragment:map_pars_fragment,map_particle_fragment:map_particle_fragment,map_particle_pars_fragment:map_particle_pars_fragment,metalnessmap_fragment:metalnessmap_fragment,metalnessmap_pars_fragment:metalnessmap_pars_fragment,morphnormal_vertex:morphnormal_vertex,morphtarget_pars_vertex:morphtarget_pars_vertex,morphtarget_vertex:morphtarget_vertex,normal_fragment_begin:normal_fragment_begin,normal_fragment_maps:normal_fragment_maps,normalmap_pars_fragment:normalmap_pars_fragment,clearcoat_normal_fragment_begin:clearcoat_normal_fragment_begin,clearcoat_normal_fragment_maps:clearcoat_normal_fragment_maps,clearcoat_pars_fragment:clearcoat_pars_fragment,packing:packing,premultiplied_alpha_fragment:premultiplied_alpha_fragment,project_vertex:project_vertex,dithering_fragment:dithering_fragment,dithering_pars_fragment:dithering_pars_fragment,roughnessmap_fragment:roughnessmap_fragment,roughnessmap_pars_fragment:roughnessmap_pars_fragment,shadowmap_pars_fragment:shadowmap_pars_fragment,shadowmap_pars_vertex:shadowmap_pars_vertex,shadowmap_vertex:shadowmap_vertex,shadowmask_pars_fragment:shadowmask_pars_fragment,skinbase_vertex:skinbase_vertex,skinning_pars_vertex:skinning_pars_vertex,skinning_vertex:skinning_vertex,skinnormal_vertex:skinnormal_vertex,specularmap_fragment:specularmap_fragment,specularmap_pars_fragment:specularmap_pars_fragment,tonemapping_fragment:tonemapping_fragment,tonemapping_pars_fragment:tonemapping_pars_fragment,transmissionmap_fragment:transmissionmap_fragment,transmissionmap_pars_fragment:transmissionmap_pars_fragment,uv_pars_fragment:uv_pars_fragment,uv_pars_vertex:uv_pars_vertex,uv_vertex:uv_vertex,uv2_pars_fragment:uv2_pars_fragment,uv2_pars_vertex:uv2_pars_vertex,uv2_vertex:uv2_vertex,worldpos_vertex:worldpos_vertex,background_frag:background_frag,background_vert:background_vert,cube_frag:cube_frag,cube_vert:cube_vert,depth_frag:depth_frag,depth_vert:depth_vert,distanceRGBA_frag:distanceRGBA_frag,distanceRGBA_vert:distanceRGBA_vert,equirect_frag:equirect_frag,equirect_vert:equirect_vert,linedashed_frag:linedashed_frag,linedashed_vert:linedashed_vert,meshbasic_frag:meshbasic_frag,meshbasic_vert:meshbasic_vert,meshlambert_frag:meshlambert_frag,meshlambert_vert:meshlambert_vert,meshmatcap_frag:meshmatcap_frag,meshmatcap_vert:meshmatcap_vert,meshtoon_frag:meshtoon_frag,meshtoon_vert:meshtoon_vert,meshphong_frag:meshphong_frag,meshphong_vert:meshphong_vert,meshphysical_frag:meshphysical_frag,meshphysical_vert:meshphysical_vert,normal_frag:normal_frag,normal_vert:normal_vert,points_frag:points_frag,points_vert:points_vert,shadow_frag:shadow_frag,shadow_vert:shadow_vert,sprite_frag:sprite_frag,sprite_vert:sprite_vert};/**\n * Uniforms library for shared webgl shaders\n */const UniformsLib={common:{diffuse:{value:new Color(0xeeeeee)},opacity:{value:1.0},map:{value:null},uvTransform:{value:new Matrix3()},uv2Transform:{value:new Matrix3()},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1.0},refractionRatio:{value:0.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Vector2(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:0.00025},fogNear:{value:1},fogFar:{value:2000},fogColor:{value:new Color(0xffffff)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\nrectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Color(0xeeeeee)},opacity:{value:1.0},size:{value:1.0},scale:{value:1.0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new Matrix3()}},sprite:{diffuse:{value:new Color(0xeeeeee)},opacity:{value:1.0},center:{value:new Vector2(0.5,0.5)},rotation:{value:0.0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new Matrix3()}}};const ShaderLib={basic:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.fog]),vertexShader:ShaderChunk.meshbasic_vert,fragmentShader:ShaderChunk.meshbasic_frag},lambert:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0x000000)}}]),vertexShader:ShaderChunk.meshlambert_vert,fragmentShader:ShaderChunk.meshlambert_frag},phong:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0x000000)},specular:{value:new Color(0x111111)},shininess:{value:30}}]),vertexShader:ShaderChunk.meshphong_vert,fragmentShader:ShaderChunk.meshphong_frag},standard:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.roughnessmap,UniformsLib.metalnessmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0x000000)},roughness:{value:1.0},metalness:{value:0.0},envMapIntensity:{value:1}// temporary\n}]),vertexShader:ShaderChunk.meshphysical_vert,fragmentShader:ShaderChunk.meshphysical_frag},toon:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.gradientmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0x000000)}}]),vertexShader:ShaderChunk.meshtoon_vert,fragmentShader:ShaderChunk.meshtoon_frag},matcap:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.fog,{matcap:{value:null}}]),vertexShader:ShaderChunk.meshmatcap_vert,fragmentShader:ShaderChunk.meshmatcap_frag},points:{uniforms:mergeUniforms([UniformsLib.points,UniformsLib.fog]),vertexShader:ShaderChunk.points_vert,fragmentShader:ShaderChunk.points_frag},dashed:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ShaderChunk.linedashed_vert,fragmentShader:ShaderChunk.linedashed_frag},depth:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.displacementmap]),vertexShader:ShaderChunk.depth_vert,fragmentShader:ShaderChunk.depth_frag},normal:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,{opacity:{value:1.0}}]),vertexShader:ShaderChunk.normal_vert,fragmentShader:ShaderChunk.normal_frag},sprite:{uniforms:mergeUniforms([UniformsLib.sprite,UniformsLib.fog]),vertexShader:ShaderChunk.sprite_vert,fragmentShader:ShaderChunk.sprite_frag},background:{uniforms:{uvTransform:{value:new Matrix3()},t2D:{value:null}},vertexShader:ShaderChunk.background_vert,fragmentShader:ShaderChunk.background_frag},/* -------------------------------------------------------------------------\n\t//\tCube map shader\n\t ------------------------------------------------------------------------- */cube:{uniforms:mergeUniforms([UniformsLib.envmap,{opacity:{value:1.0}}]),vertexShader:ShaderChunk.cube_vert,fragmentShader:ShaderChunk.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ShaderChunk.equirect_vert,fragmentShader:ShaderChunk.equirect_frag},distanceRGBA:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.displacementmap,{referencePosition:{value:new Vector3()},nearDistance:{value:1},farDistance:{value:1000}}]),vertexShader:ShaderChunk.distanceRGBA_vert,fragmentShader:ShaderChunk.distanceRGBA_frag},shadow:{uniforms:mergeUniforms([UniformsLib.lights,UniformsLib.fog,{color:{value:new Color(0x00000)},opacity:{value:1.0}}]),vertexShader:ShaderChunk.shadow_vert,fragmentShader:ShaderChunk.shadow_frag}};ShaderLib.physical={uniforms:mergeUniforms([ShaderLib.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Vector2(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new Color(0x000000)},transmission:{value:0},transmissionMap:{value:null}}]),vertexShader:ShaderChunk.meshphysical_vert,fragmentShader:ShaderChunk.meshphysical_frag};function WebGLBackground(renderer,cubemaps,state,objects,premultipliedAlpha){const clearColor=new Color(0x000000);let clearAlpha=0;let planeMesh;let boxMesh;let currentBackground=null;let currentBackgroundVersion=0;let currentTonemapping=null;function render(renderList,scene,camera,forceClear){let background=scene.isScene===true?scene.background:null;if(background&&background.isTexture){background=cubemaps.get(background);}// Ignore background in AR\n// TODO: Reconsider this.\nconst xr=renderer.xr;const session=xr.getSession&&xr.getSession();if(session&&session.environmentBlendMode==='additive'){background=null;}if(background===null){setClear(clearColor,clearAlpha);}else if(background&&background.isColor){setClear(background,1);forceClear=true;}if(renderer.autoClear||forceClear){renderer.clear(renderer.autoClearColor,renderer.autoClearDepth,renderer.autoClearStencil);}if(background&&(background.isCubeTexture||background.isWebGLCubeRenderTarget||background.mapping===CubeUVReflectionMapping)){if(boxMesh===undefined){boxMesh=new Mesh(new BoxGeometry(1,1,1),new ShaderMaterial({name:'BackgroundCubeMaterial',uniforms:cloneUniforms(ShaderLib.cube.uniforms),vertexShader:ShaderLib.cube.vertexShader,fragmentShader:ShaderLib.cube.fragmentShader,side:BackSide,depthTest:false,depthWrite:false,fog:false}));boxMesh.geometry.deleteAttribute('normal');boxMesh.geometry.deleteAttribute('uv');boxMesh.onBeforeRender=function(renderer,scene,camera){this.matrixWorld.copyPosition(camera.matrixWorld);};// enable code injection for non-built-in material\nObject.defineProperty(boxMesh.material,'envMap',{get:function(){return this.uniforms.envMap.value;}});objects.update(boxMesh);}if(background.isWebGLCubeRenderTarget){// TODO Deprecate\nbackground=background.texture;}boxMesh.material.uniforms.envMap.value=background;boxMesh.material.uniforms.flipEnvMap.value=background.isCubeTexture&&background._needsFlipEnvMap?-1:1;if(currentBackground!==background||currentBackgroundVersion!==background.version||currentTonemapping!==renderer.toneMapping){boxMesh.material.needsUpdate=true;currentBackground=background;currentBackgroundVersion=background.version;currentTonemapping=renderer.toneMapping;}// push to the pre-sorted opaque render list\nrenderList.unshift(boxMesh,boxMesh.geometry,boxMesh.material,0,0,null);}else if(background&&background.isTexture){if(planeMesh===undefined){planeMesh=new Mesh(new PlaneGeometry(2,2),new ShaderMaterial({name:'BackgroundMaterial',uniforms:cloneUniforms(ShaderLib.background.uniforms),vertexShader:ShaderLib.background.vertexShader,fragmentShader:ShaderLib.background.fragmentShader,side:FrontSide,depthTest:false,depthWrite:false,fog:false}));planeMesh.geometry.deleteAttribute('normal');// enable code injection for non-built-in material\nObject.defineProperty(planeMesh.material,'map',{get:function(){return this.uniforms.t2D.value;}});objects.update(planeMesh);}planeMesh.material.uniforms.t2D.value=background;if(background.matrixAutoUpdate===true){background.updateMatrix();}planeMesh.material.uniforms.uvTransform.value.copy(background.matrix);if(currentBackground!==background||currentBackgroundVersion!==background.version||currentTonemapping!==renderer.toneMapping){planeMesh.material.needsUpdate=true;currentBackground=background;currentBackgroundVersion=background.version;currentTonemapping=renderer.toneMapping;}// push to the pre-sorted opaque render list\nrenderList.unshift(planeMesh,planeMesh.geometry,planeMesh.material,0,0,null);}}function setClear(color,alpha){state.buffers.color.setClear(color.r,color.g,color.b,alpha,premultipliedAlpha);}return{getClearColor:function(){return clearColor;},setClearColor:function(color,alpha=1){clearColor.set(color);clearAlpha=alpha;setClear(clearColor,clearAlpha);},getClearAlpha:function(){return clearAlpha;},setClearAlpha:function(alpha){clearAlpha=alpha;setClear(clearColor,clearAlpha);},render:render};}function WebGLBindingStates(gl,extensions,attributes,capabilities){const maxVertexAttributes=gl.getParameter(34921);const extension=capabilities.isWebGL2?null:extensions.get('OES_vertex_array_object');const vaoAvailable=capabilities.isWebGL2||extension!==null;const bindingStates={};const defaultState=createBindingState(null);let currentState=defaultState;function setup(object,material,program,geometry,index){let updateBuffers=false;if(vaoAvailable){const state=getBindingState(geometry,program,material);if(currentState!==state){currentState=state;bindVertexArrayObject(currentState.object);}updateBuffers=needsUpdate(geometry,index);if(updateBuffers)saveCache(geometry,index);}else{const wireframe=material.wireframe===true;if(currentState.geometry!==geometry.id||currentState.program!==program.id||currentState.wireframe!==wireframe){currentState.geometry=geometry.id;currentState.program=program.id;currentState.wireframe=wireframe;updateBuffers=true;}}if(object.isInstancedMesh===true){updateBuffers=true;}if(index!==null){attributes.update(index,34963);}if(updateBuffers){setupVertexAttributes(object,material,program,geometry);if(index!==null){gl.bindBuffer(34963,attributes.get(index).buffer);}}}function createVertexArrayObject(){if(capabilities.isWebGL2)return gl.createVertexArray();return extension.createVertexArrayOES();}function bindVertexArrayObject(vao){if(capabilities.isWebGL2)return gl.bindVertexArray(vao);return extension.bindVertexArrayOES(vao);}function deleteVertexArrayObject(vao){if(capabilities.isWebGL2)return gl.deleteVertexArray(vao);return extension.deleteVertexArrayOES(vao);}function getBindingState(geometry,program,material){const wireframe=material.wireframe===true;let programMap=bindingStates[geometry.id];if(programMap===undefined){programMap={};bindingStates[geometry.id]=programMap;}let stateMap=programMap[program.id];if(stateMap===undefined){stateMap={};programMap[program.id]=stateMap;}let state=stateMap[wireframe];if(state===undefined){state=createBindingState(createVertexArrayObject());stateMap[wireframe]=state;}return state;}function createBindingState(vao){const newAttributes=[];const enabledAttributes=[];const attributeDivisors=[];for(let i=0;i<maxVertexAttributes;i++){newAttributes[i]=0;enabledAttributes[i]=0;attributeDivisors[i]=0;}return{// for backward compatibility on non-VAO support browser\ngeometry:null,program:null,wireframe:false,newAttributes:newAttributes,enabledAttributes:enabledAttributes,attributeDivisors:attributeDivisors,object:vao,attributes:{},index:null};}function needsUpdate(geometry,index){const cachedAttributes=currentState.attributes;const geometryAttributes=geometry.attributes;let attributesNum=0;for(const key in geometryAttributes){const cachedAttribute=cachedAttributes[key];const geometryAttribute=geometryAttributes[key];if(cachedAttribute===undefined)return true;if(cachedAttribute.attribute!==geometryAttribute)return true;if(cachedAttribute.data!==geometryAttribute.data)return true;attributesNum++;}if(currentState.attributesNum!==attributesNum)return true;if(currentState.index!==index)return true;return false;}function saveCache(geometry,index){const cache={};const attributes=geometry.attributes;let attributesNum=0;for(const key in attributes){const attribute=attributes[key];const data={};data.attribute=attribute;if(attribute.data){data.data=attribute.data;}cache[key]=data;attributesNum++;}currentState.attributes=cache;currentState.attributesNum=attributesNum;currentState.index=index;}function initAttributes(){const newAttributes=currentState.newAttributes;for(let i=0,il=newAttributes.length;i<il;i++){newAttributes[i]=0;}}function enableAttribute(attribute){enableAttributeAndDivisor(attribute,0);}function enableAttributeAndDivisor(attribute,meshPerAttribute){const newAttributes=currentState.newAttributes;const enabledAttributes=currentState.enabledAttributes;const attributeDivisors=currentState.attributeDivisors;newAttributes[attribute]=1;if(enabledAttributes[attribute]===0){gl.enableVertexAttribArray(attribute);enabledAttributes[attribute]=1;}if(attributeDivisors[attribute]!==meshPerAttribute){const extension=capabilities.isWebGL2?gl:extensions.get('ANGLE_instanced_arrays');extension[capabilities.isWebGL2?'vertexAttribDivisor':'vertexAttribDivisorANGLE'](attribute,meshPerAttribute);attributeDivisors[attribute]=meshPerAttribute;}}function disableUnusedAttributes(){const newAttributes=currentState.newAttributes;const enabledAttributes=currentState.enabledAttributes;for(let i=0,il=enabledAttributes.length;i<il;i++){if(enabledAttributes[i]!==newAttributes[i]){gl.disableVertexAttribArray(i);enabledAttributes[i]=0;}}}function vertexAttribPointer(index,size,type,normalized,stride,offset){if(capabilities.isWebGL2===true&&(type===5124||type===5125)){gl.vertexAttribIPointer(index,size,type,stride,offset);}else{gl.vertexAttribPointer(index,size,type,normalized,stride,offset);}}function setupVertexAttributes(object,material,program,geometry){if(capabilities.isWebGL2===false&&(object.isInstancedMesh||geometry.isInstancedBufferGeometry)){if(extensions.get('ANGLE_instanced_arrays')===null)return;}initAttributes();const geometryAttributes=geometry.attributes;const programAttributes=program.getAttributes();const materialDefaultAttributeValues=material.defaultAttributeValues;for(const name in programAttributes){const programAttribute=programAttributes[name];if(programAttribute>=0){const geometryAttribute=geometryAttributes[name];if(geometryAttribute!==undefined){const normalized=geometryAttribute.normalized;const size=geometryAttribute.itemSize;const attribute=attributes.get(geometryAttribute);// TODO Attribute may not be available on context restore\nif(attribute===undefined)continue;const buffer=attribute.buffer;const type=attribute.type;const bytesPerElement=attribute.bytesPerElement;if(geometryAttribute.isInterleavedBufferAttribute){const data=geometryAttribute.data;const stride=data.stride;const offset=geometryAttribute.offset;if(data&&data.isInstancedInterleavedBuffer){enableAttributeAndDivisor(programAttribute,data.meshPerAttribute);if(geometry._maxInstanceCount===undefined){geometry._maxInstanceCount=data.meshPerAttribute*data.count;}}else{enableAttribute(programAttribute);}gl.bindBuffer(34962,buffer);vertexAttribPointer(programAttribute,size,type,normalized,stride*bytesPerElement,offset*bytesPerElement);}else{if(geometryAttribute.isInstancedBufferAttribute){enableAttributeAndDivisor(programAttribute,geometryAttribute.meshPerAttribute);if(geometry._maxInstanceCount===undefined){geometry._maxInstanceCount=geometryAttribute.meshPerAttribute*geometryAttribute.count;}}else{enableAttribute(programAttribute);}gl.bindBuffer(34962,buffer);vertexAttribPointer(programAttribute,size,type,normalized,0,0);}}else if(name==='instanceMatrix'){const attribute=attributes.get(object.instanceMatrix);// TODO Attribute may not be available on context restore\nif(attribute===undefined)continue;const buffer=attribute.buffer;const type=attribute.type;enableAttributeAndDivisor(programAttribute+0,1);enableAttributeAndDivisor(programAttribute+1,1);enableAttributeAndDivisor(programAttribute+2,1);enableAttributeAndDivisor(programAttribute+3,1);gl.bindBuffer(34962,buffer);gl.vertexAttribPointer(programAttribute+0,4,type,false,64,0);gl.vertexAttribPointer(programAttribute+1,4,type,false,64,16);gl.vertexAttribPointer(programAttribute+2,4,type,false,64,32);gl.vertexAttribPointer(programAttribute+3,4,type,false,64,48);}else if(name==='instanceColor'){const attribute=attributes.get(object.instanceColor);// TODO Attribute may not be available on context restore\nif(attribute===undefined)continue;const buffer=attribute.buffer;const type=attribute.type;enableAttributeAndDivisor(programAttribute,1);gl.bindBuffer(34962,buffer);gl.vertexAttribPointer(programAttribute,3,type,false,12,0);}else if(materialDefaultAttributeValues!==undefined){const value=materialDefaultAttributeValues[name];if(value!==undefined){switch(value.length){case 2:gl.vertexAttrib2fv(programAttribute,value);break;case 3:gl.vertexAttrib3fv(programAttribute,value);break;case 4:gl.vertexAttrib4fv(programAttribute,value);break;default:gl.vertexAttrib1fv(programAttribute,value);}}}}}disableUnusedAttributes();}function dispose(){reset();for(const geometryId in bindingStates){const programMap=bindingStates[geometryId];for(const programId in programMap){const stateMap=programMap[programId];for(const wireframe in stateMap){deleteVertexArrayObject(stateMap[wireframe].object);delete stateMap[wireframe];}delete programMap[programId];}delete bindingStates[geometryId];}}function releaseStatesOfGeometry(geometry){if(bindingStates[geometry.id]===undefined)return;const programMap=bindingStates[geometry.id];for(const programId in programMap){const stateMap=programMap[programId];for(const wireframe in stateMap){deleteVertexArrayObject(stateMap[wireframe].object);delete stateMap[wireframe];}delete programMap[programId];}delete bindingStates[geometry.id];}function releaseStatesOfProgram(program){for(const geometryId in bindingStates){const programMap=bindingStates[geometryId];if(programMap[program.id]===undefined)continue;const stateMap=programMap[program.id];for(const wireframe in stateMap){deleteVertexArrayObject(stateMap[wireframe].object);delete stateMap[wireframe];}delete programMap[program.id];}}function reset(){resetDefaultState();if(currentState===defaultState)return;currentState=defaultState;bindVertexArrayObject(currentState.object);}// for backward-compatilibity\nfunction resetDefaultState(){defaultState.geometry=null;defaultState.program=null;defaultState.wireframe=false;}return{setup:setup,reset:reset,resetDefaultState:resetDefaultState,dispose:dispose,releaseStatesOfGeometry:releaseStatesOfGeometry,releaseStatesOfProgram:releaseStatesOfProgram,initAttributes:initAttributes,enableAttribute:enableAttribute,disableUnusedAttributes:disableUnusedAttributes};}function WebGLBufferRenderer(gl,extensions,info,capabilities){const isWebGL2=capabilities.isWebGL2;let mode;function setMode(value){mode=value;}function render(start,count){gl.drawArrays(mode,start,count);info.update(count,mode,1);}function renderInstances(start,count,primcount){if(primcount===0)return;let extension,methodName;if(isWebGL2){extension=gl;methodName='drawArraysInstanced';}else{extension=extensions.get('ANGLE_instanced_arrays');methodName='drawArraysInstancedANGLE';if(extension===null){console.error('THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');return;}}extension[methodName](mode,start,count,primcount);info.update(count,mode,primcount);}//\nthis.setMode=setMode;this.render=render;this.renderInstances=renderInstances;}function WebGLCapabilities(gl,extensions,parameters){let maxAnisotropy;function getMaxAnisotropy(){if(maxAnisotropy!==undefined)return maxAnisotropy;const extension=extensions.get('EXT_texture_filter_anisotropic');if(extension!==null){maxAnisotropy=gl.getParameter(extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT);}else{maxAnisotropy=0;}return maxAnisotropy;}function getMaxPrecision(precision){if(precision==='highp'){if(gl.getShaderPrecisionFormat(35633,36338).precision>0&&gl.getShaderPrecisionFormat(35632,36338).precision>0){return'highp';}precision='mediump';}if(precision==='mediump'){if(gl.getShaderPrecisionFormat(35633,36337).precision>0&&gl.getShaderPrecisionFormat(35632,36337).precision>0){return'mediump';}}return'lowp';}/* eslint-disable no-undef */const isWebGL2=typeof WebGL2RenderingContext!=='undefined'&&gl instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext!=='undefined'&&gl instanceof WebGL2ComputeRenderingContext;/* eslint-enable no-undef */let precision=parameters.precision!==undefined?parameters.precision:'highp';const maxPrecision=getMaxPrecision(precision);if(maxPrecision!==precision){console.warn('THREE.WebGLRenderer:',precision,'not supported, using',maxPrecision,'instead.');precision=maxPrecision;}const logarithmicDepthBuffer=parameters.logarithmicDepthBuffer===true;const maxTextures=gl.getParameter(34930);const maxVertexTextures=gl.getParameter(35660);const maxTextureSize=gl.getParameter(3379);const maxCubemapSize=gl.getParameter(34076);const maxAttributes=gl.getParameter(34921);const maxVertexUniforms=gl.getParameter(36347);const maxVaryings=gl.getParameter(36348);const maxFragmentUniforms=gl.getParameter(36349);const vertexTextures=maxVertexTextures>0;const floatFragmentTextures=isWebGL2||!!extensions.get('OES_texture_float');const floatVertexTextures=vertexTextures&&floatFragmentTextures;const maxSamples=isWebGL2?gl.getParameter(36183):0;return{isWebGL2:isWebGL2,getMaxAnisotropy:getMaxAnisotropy,getMaxPrecision:getMaxPrecision,precision:precision,logarithmicDepthBuffer:logarithmicDepthBuffer,maxTextures:maxTextures,maxVertexTextures:maxVertexTextures,maxTextureSize:maxTextureSize,maxCubemapSize:maxCubemapSize,maxAttributes:maxAttributes,maxVertexUniforms:maxVertexUniforms,maxVaryings:maxVaryings,maxFragmentUniforms:maxFragmentUniforms,vertexTextures:vertexTextures,floatFragmentTextures:floatFragmentTextures,floatVertexTextures:floatVertexTextures,maxSamples:maxSamples};}function WebGLClipping(properties){const scope=this;let globalState=null,numGlobalPlanes=0,localClippingEnabled=false,renderingShadows=false;const plane=new Plane(),viewNormalMatrix=new Matrix3(),uniform={value:null,needsUpdate:false};this.uniform=uniform;this.numPlanes=0;this.numIntersection=0;this.init=function(planes,enableLocalClipping,camera){const enabled=planes.length!==0||enableLocalClipping||// enable state of previous frame - the clipping code has to\n// run another frame in order to reset the state:\nnumGlobalPlanes!==0||localClippingEnabled;localClippingEnabled=enableLocalClipping;globalState=projectPlanes(planes,camera,0);numGlobalPlanes=planes.length;return enabled;};this.beginShadows=function(){renderingShadows=true;projectPlanes(null);};this.endShadows=function(){renderingShadows=false;resetGlobalState();};this.setState=function(material,camera,useCache){const planes=material.clippingPlanes,clipIntersection=material.clipIntersection,clipShadows=material.clipShadows;const materialProperties=properties.get(material);if(!localClippingEnabled||planes===null||planes.length===0||renderingShadows&&!clipShadows){// there's no local clipping\nif(renderingShadows){// there's no global clipping\nprojectPlanes(null);}else{resetGlobalState();}}else{const nGlobal=renderingShadows?0:numGlobalPlanes,lGlobal=nGlobal*4;let dstArray=materialProperties.clippingState||null;uniform.value=dstArray;// ensure unique state\ndstArray=projectPlanes(planes,camera,lGlobal,useCache);for(let i=0;i!==lGlobal;++i){dstArray[i]=globalState[i];}materialProperties.clippingState=dstArray;this.numIntersection=clipIntersection?this.numPlanes:0;this.numPlanes+=nGlobal;}};function resetGlobalState(){if(uniform.value!==globalState){uniform.value=globalState;uniform.needsUpdate=numGlobalPlanes>0;}scope.numPlanes=numGlobalPlanes;scope.numIntersection=0;}function projectPlanes(planes,camera,dstOffset,skipTransform){const nPlanes=planes!==null?planes.length:0;let dstArray=null;if(nPlanes!==0){dstArray=uniform.value;if(skipTransform!==true||dstArray===null){const flatSize=dstOffset+nPlanes*4,viewMatrix=camera.matrixWorldInverse;viewNormalMatrix.getNormalMatrix(viewMatrix);if(dstArray===null||dstArray.length<flatSize){dstArray=new Float32Array(flatSize);}for(let i=0,i4=dstOffset;i!==nPlanes;++i,i4+=4){plane.copy(planes[i]).applyMatrix4(viewMatrix,viewNormalMatrix);plane.normal.toArray(dstArray,i4);dstArray[i4+3]=plane.constant;}}uniform.value=dstArray;uniform.needsUpdate=true;}scope.numPlanes=nPlanes;scope.numIntersection=0;return dstArray;}}function WebGLCubeMaps(renderer){let cubemaps=new WeakMap();function mapTextureMapping(texture,mapping){if(mapping===EquirectangularReflectionMapping){texture.mapping=CubeReflectionMapping;}else if(mapping===EquirectangularRefractionMapping){texture.mapping=CubeRefractionMapping;}return texture;}function get(texture){if(texture&&texture.isTexture){const mapping=texture.mapping;if(mapping===EquirectangularReflectionMapping||mapping===EquirectangularRefractionMapping){if(cubemaps.has(texture)){const cubemap=cubemaps.get(texture).texture;return mapTextureMapping(cubemap,texture.mapping);}else{const image=texture.image;if(image&&image.height>0){const currentRenderList=renderer.getRenderList();const currentRenderTarget=renderer.getRenderTarget();const renderTarget=new WebGLCubeRenderTarget(image.height/2);renderTarget.fromEquirectangularTexture(renderer,texture);cubemaps.set(texture,renderTarget);renderer.setRenderTarget(currentRenderTarget);renderer.setRenderList(currentRenderList);texture.addEventListener('dispose',onTextureDispose);return mapTextureMapping(renderTarget.texture,texture.mapping);}else{// image not yet ready. try the conversion next frame\nreturn null;}}}}return texture;}function onTextureDispose(event){const texture=event.target;texture.removeEventListener('dispose',onTextureDispose);const cubemap=cubemaps.get(texture);if(cubemap!==undefined){cubemaps.delete(texture);cubemap.dispose();}}function dispose(){cubemaps=new WeakMap();}return{get:get,dispose:dispose};}function WebGLExtensions(gl){const extensions={};function getExtension(name){if(extensions[name]!==undefined){return extensions[name];}let extension;switch(name){case'WEBGL_depth_texture':extension=gl.getExtension('WEBGL_depth_texture')||gl.getExtension('MOZ_WEBGL_depth_texture')||gl.getExtension('WEBKIT_WEBGL_depth_texture');break;case'EXT_texture_filter_anisotropic':extension=gl.getExtension('EXT_texture_filter_anisotropic')||gl.getExtension('MOZ_EXT_texture_filter_anisotropic')||gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic');break;case'WEBGL_compressed_texture_s3tc':extension=gl.getExtension('WEBGL_compressed_texture_s3tc')||gl.getExtension('MOZ_WEBGL_compressed_texture_s3tc')||gl.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc');break;case'WEBGL_compressed_texture_pvrtc':extension=gl.getExtension('WEBGL_compressed_texture_pvrtc')||gl.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc');break;default:extension=gl.getExtension(name);}extensions[name]=extension;return extension;}return{has:function(name){return getExtension(name)!==null;},init:function(capabilities){if(capabilities.isWebGL2){getExtension('EXT_color_buffer_float');}else{getExtension('WEBGL_depth_texture');getExtension('OES_texture_float');getExtension('OES_texture_half_float');getExtension('OES_texture_half_float_linear');getExtension('OES_standard_derivatives');getExtension('OES_element_index_uint');getExtension('OES_vertex_array_object');getExtension('ANGLE_instanced_arrays');}getExtension('OES_texture_float_linear');getExtension('EXT_color_buffer_half_float');},get:function(name){const extension=getExtension(name);if(extension===null){console.warn('THREE.WebGLRenderer: '+name+' extension not supported.');}return extension;}};}function WebGLGeometries(gl,attributes,info,bindingStates){const geometries={};const wireframeAttributes=new WeakMap();function onGeometryDispose(event){const geometry=event.target;if(geometry.index!==null){attributes.remove(geometry.index);}for(const name in geometry.attributes){attributes.remove(geometry.attributes[name]);}geometry.removeEventListener('dispose',onGeometryDispose);delete geometries[geometry.id];const attribute=wireframeAttributes.get(geometry);if(attribute){attributes.remove(attribute);wireframeAttributes.delete(geometry);}bindingStates.releaseStatesOfGeometry(geometry);if(geometry.isInstancedBufferGeometry===true){delete geometry._maxInstanceCount;}//\ninfo.memory.geometries--;}function get(object,geometry){if(geometries[geometry.id]===true)return geometry;geometry.addEventListener('dispose',onGeometryDispose);geometries[geometry.id]=true;info.memory.geometries++;return geometry;}function update(geometry){const geometryAttributes=geometry.attributes;// Updating index buffer in VAO now. See WebGLBindingStates.\nfor(const name in geometryAttributes){attributes.update(geometryAttributes[name],34962);}// morph targets\nconst morphAttributes=geometry.morphAttributes;for(const name in morphAttributes){const array=morphAttributes[name];for(let i=0,l=array.length;i<l;i++){attributes.update(array[i],34962);}}}function updateWireframeAttribute(geometry){const indices=[];const geometryIndex=geometry.index;const geometryPosition=geometry.attributes.position;let version=0;if(geometryIndex!==null){const array=geometryIndex.array;version=geometryIndex.version;for(let i=0,l=array.length;i<l;i+=3){const a=array[i+0];const b=array[i+1];const c=array[i+2];indices.push(a,b,b,c,c,a);}}else{const array=geometryPosition.array;version=geometryPosition.version;for(let i=0,l=array.length/3-1;i<l;i+=3){const a=i+0;const b=i+1;const c=i+2;indices.push(a,b,b,c,c,a);}}const attribute=new(arrayMax(indices)>65535?Uint32BufferAttribute:Uint16BufferAttribute)(indices,1);attribute.version=version;// Updating index buffer in VAO now. See WebGLBindingStates\n//\nconst previousAttribute=wireframeAttributes.get(geometry);if(previousAttribute)attributes.remove(previousAttribute);//\nwireframeAttributes.set(geometry,attribute);}function getWireframeAttribute(geometry){const currentAttribute=wireframeAttributes.get(geometry);if(currentAttribute){const geometryIndex=geometry.index;if(geometryIndex!==null){// if the attribute is obsolete, create a new one\nif(currentAttribute.version<geometryIndex.version){updateWireframeAttribute(geometry);}}}else{updateWireframeAttribute(geometry);}return wireframeAttributes.get(geometry);}return{get:get,update:update,getWireframeAttribute:getWireframeAttribute};}function WebGLIndexedBufferRenderer(gl,extensions,info,capabilities){const isWebGL2=capabilities.isWebGL2;let mode;function setMode(value){mode=value;}let type,bytesPerElement;function setIndex(value){type=value.type;bytesPerElement=value.bytesPerElement;}function render(start,count){gl.drawElements(mode,count,type,start*bytesPerElement);info.update(count,mode,1);}function renderInstances(start,count,primcount){if(primcount===0)return;let extension,methodName;if(isWebGL2){extension=gl;methodName='drawElementsInstanced';}else{extension=extensions.get('ANGLE_instanced_arrays');methodName='drawElementsInstancedANGLE';if(extension===null){console.error('THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');return;}}extension[methodName](mode,count,type,start*bytesPerElement,primcount);info.update(count,mode,primcount);}//\nthis.setMode=setMode;this.setIndex=setIndex;this.render=render;this.renderInstances=renderInstances;}function WebGLInfo(gl){const memory={geometries:0,textures:0};const render={frame:0,calls:0,triangles:0,points:0,lines:0};function update(count,mode,instanceCount){render.calls++;switch(mode){case 4:render.triangles+=instanceCount*(count/3);break;case 1:render.lines+=instanceCount*(count/2);break;case 3:render.lines+=instanceCount*(count-1);break;case 2:render.lines+=instanceCount*count;break;case 0:render.points+=instanceCount*count;break;default:console.error('THREE.WebGLInfo: Unknown draw mode:',mode);break;}}function reset(){render.frame++;render.calls=0;render.triangles=0;render.points=0;render.lines=0;}return{memory:memory,render:render,programs:null,autoReset:true,reset:reset,update:update};}function numericalSort(a,b){return a[0]-b[0];}function absNumericalSort(a,b){return Math.abs(b[1])-Math.abs(a[1]);}function WebGLMorphtargets(gl){const influencesList={};const morphInfluences=new Float32Array(8);const workInfluences=[];for(let i=0;i<8;i++){workInfluences[i]=[i,0];}function update(object,geometry,material,program){const objectInfluences=object.morphTargetInfluences;// When object doesn't have morph target influences defined, we treat it as a 0-length array\n// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\nconst length=objectInfluences===undefined?0:objectInfluences.length;let influences=influencesList[geometry.id];if(influences===undefined){// initialise list\ninfluences=[];for(let i=0;i<length;i++){influences[i]=[i,0];}influencesList[geometry.id]=influences;}// Collect influences\nfor(let i=0;i<length;i++){const influence=influences[i];influence[0]=i;influence[1]=objectInfluences[i];}influences.sort(absNumericalSort);for(let i=0;i<8;i++){if(i<length&&influences[i][1]){workInfluences[i][0]=influences[i][0];workInfluences[i][1]=influences[i][1];}else{workInfluences[i][0]=Number.MAX_SAFE_INTEGER;workInfluences[i][1]=0;}}workInfluences.sort(numericalSort);const morphTargets=material.morphTargets&&geometry.morphAttributes.position;const morphNormals=material.morphNormals&&geometry.morphAttributes.normal;let morphInfluencesSum=0;for(let i=0;i<8;i++){const influence=workInfluences[i];const index=influence[0];const value=influence[1];if(index!==Number.MAX_SAFE_INTEGER&&value){if(morphTargets&&geometry.getAttribute('morphTarget'+i)!==morphTargets[index]){geometry.setAttribute('morphTarget'+i,morphTargets[index]);}if(morphNormals&&geometry.getAttribute('morphNormal'+i)!==morphNormals[index]){geometry.setAttribute('morphNormal'+i,morphNormals[index]);}morphInfluences[i]=value;morphInfluencesSum+=value;}else{if(morphTargets&&geometry.hasAttribute('morphTarget'+i)===true){geometry.deleteAttribute('morphTarget'+i);}if(morphNormals&&geometry.hasAttribute('morphNormal'+i)===true){geometry.deleteAttribute('morphNormal'+i);}morphInfluences[i]=0;}}// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n// This allows us to switch between absolute morphs and relative morphs without changing shader code\n// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\nconst morphBaseInfluence=geometry.morphTargetsRelative?1:1-morphInfluencesSum;program.getUniforms().setValue(gl,'morphTargetBaseInfluence',morphBaseInfluence);program.getUniforms().setValue(gl,'morphTargetInfluences',morphInfluences);}return{update:update};}function WebGLObjects(gl,geometries,attributes,info){let updateMap=new WeakMap();function update(object){const frame=info.render.frame;const geometry=object.geometry;const buffergeometry=geometries.get(object,geometry);// Update once per frame\nif(updateMap.get(buffergeometry)!==frame){geometries.update(buffergeometry);updateMap.set(buffergeometry,frame);}if(object.isInstancedMesh){if(object.hasEventListener('dispose',onInstancedMeshDispose)===false){object.addEventListener('dispose',onInstancedMeshDispose);}attributes.update(object.instanceMatrix,34962);if(object.instanceColor!==null){attributes.update(object.instanceColor,34962);}}return buffergeometry;}function dispose(){updateMap=new WeakMap();}function onInstancedMeshDispose(event){const instancedMesh=event.target;instancedMesh.removeEventListener('dispose',onInstancedMeshDispose);attributes.remove(instancedMesh.instanceMatrix);if(instancedMesh.instanceColor!==null)attributes.remove(instancedMesh.instanceColor);}return{update:update,dispose:dispose};}function DataTexture2DArray(data=null,width=1,height=1,depth=1){Texture.call(this,null);this.image={data,width,height,depth};this.magFilter=NearestFilter;this.minFilter=NearestFilter;this.wrapR=ClampToEdgeWrapping;this.generateMipmaps=false;this.flipY=false;this.needsUpdate=true;}DataTexture2DArray.prototype=Object.create(Texture.prototype);DataTexture2DArray.prototype.constructor=DataTexture2DArray;DataTexture2DArray.prototype.isDataTexture2DArray=true;function DataTexture3D(data=null,width=1,height=1,depth=1){// We're going to add .setXXX() methods for setting properties later.\n// Users can still set in DataTexture3D directly.\n//\n//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n// \ttexture.anisotropy = 16;\n//\n// See #14839\nTexture.call(this,null);this.image={data,width,height,depth};this.magFilter=NearestFilter;this.minFilter=NearestFilter;this.wrapR=ClampToEdgeWrapping;this.generateMipmaps=false;this.flipY=false;this.needsUpdate=true;}DataTexture3D.prototype=Object.create(Texture.prototype);DataTexture3D.prototype.constructor=DataTexture3D;DataTexture3D.prototype.isDataTexture3D=true;/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */const emptyTexture=new Texture();const emptyTexture2dArray=new DataTexture2DArray();const emptyTexture3d=new DataTexture3D();const emptyCubeTexture=new CubeTexture();// --- Utilities ---\n// Array Caches (provide typed arrays for temporary by size)\nconst arrayCacheF32=[];const arrayCacheI32=[];// Float32Array caches used for uploading Matrix uniforms\nconst mat4array=new Float32Array(16);const mat3array=new Float32Array(9);const mat2array=new Float32Array(4);// Flattening for arrays of vectors and matrices\nfunction flatten(array,nBlocks,blockSize){const firstElem=array[0];if(firstElem<=0||firstElem>0)return array;// unoptimized: ! isNaN( firstElem )\n// see http://jacksondunstan.com/articles/983\nconst n=nBlocks*blockSize;let r=arrayCacheF32[n];if(r===undefined){r=new Float32Array(n);arrayCacheF32[n]=r;}if(nBlocks!==0){firstElem.toArray(r,0);for(let i=1,offset=0;i!==nBlocks;++i){offset+=blockSize;array[i].toArray(r,offset);}}return r;}function arraysEqual(a,b){if(a.length!==b.length)return false;for(let i=0,l=a.length;i<l;i++){if(a[i]!==b[i])return false;}return true;}function copyArray(a,b){for(let i=0,l=b.length;i<l;i++){a[i]=b[i];}}// Texture unit allocation\nfunction allocTexUnits(textures,n){let r=arrayCacheI32[n];if(r===undefined){r=new Int32Array(n);arrayCacheI32[n]=r;}for(let i=0;i!==n;++i){r[i]=textures.allocateTextureUnit();}return r;}// --- Setters ---\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n// Single scalar\nfunction setValueV1f(gl,v){const cache=this.cache;if(cache[0]===v)return;gl.uniform1f(this.addr,v);cache[0]=v;}// Single float vector (from flat array or THREE.VectorN)\nfunction setValueV2f(gl,v){const cache=this.cache;if(v.x!==undefined){if(cache[0]!==v.x||cache[1]!==v.y){gl.uniform2f(this.addr,v.x,v.y);cache[0]=v.x;cache[1]=v.y;}}else{if(arraysEqual(cache,v))return;gl.uniform2fv(this.addr,v);copyArray(cache,v);}}function setValueV3f(gl,v){const cache=this.cache;if(v.x!==undefined){if(cache[0]!==v.x||cache[1]!==v.y||cache[2]!==v.z){gl.uniform3f(this.addr,v.x,v.y,v.z);cache[0]=v.x;cache[1]=v.y;cache[2]=v.z;}}else if(v.r!==undefined){if(cache[0]!==v.r||cache[1]!==v.g||cache[2]!==v.b){gl.uniform3f(this.addr,v.r,v.g,v.b);cache[0]=v.r;cache[1]=v.g;cache[2]=v.b;}}else{if(arraysEqual(cache,v))return;gl.uniform3fv(this.addr,v);copyArray(cache,v);}}function setValueV4f(gl,v){const cache=this.cache;if(v.x!==undefined){if(cache[0]!==v.x||cache[1]!==v.y||cache[2]!==v.z||cache[3]!==v.w){gl.uniform4f(this.addr,v.x,v.y,v.z,v.w);cache[0]=v.x;cache[1]=v.y;cache[2]=v.z;cache[3]=v.w;}}else{if(arraysEqual(cache,v))return;gl.uniform4fv(this.addr,v);copyArray(cache,v);}}// Single matrix (from flat array or MatrixN)\nfunction setValueM2(gl,v){const cache=this.cache;const elements=v.elements;if(elements===undefined){if(arraysEqual(cache,v))return;gl.uniformMatrix2fv(this.addr,false,v);copyArray(cache,v);}else{if(arraysEqual(cache,elements))return;mat2array.set(elements);gl.uniformMatrix2fv(this.addr,false,mat2array);copyArray(cache,elements);}}function setValueM3(gl,v){const cache=this.cache;const elements=v.elements;if(elements===undefined){if(arraysEqual(cache,v))return;gl.uniformMatrix3fv(this.addr,false,v);copyArray(cache,v);}else{if(arraysEqual(cache,elements))return;mat3array.set(elements);gl.uniformMatrix3fv(this.addr,false,mat3array);copyArray(cache,elements);}}function setValueM4(gl,v){const cache=this.cache;const elements=v.elements;if(elements===undefined){if(arraysEqual(cache,v))return;gl.uniformMatrix4fv(this.addr,false,v);copyArray(cache,v);}else{if(arraysEqual(cache,elements))return;mat4array.set(elements);gl.uniformMatrix4fv(this.addr,false,mat4array);copyArray(cache,elements);}}// Single texture (2D / Cube)\nfunction setValueT1(gl,v,textures){const cache=this.cache;const unit=textures.allocateTextureUnit();if(cache[0]!==unit){gl.uniform1i(this.addr,unit);cache[0]=unit;}textures.safeSetTexture2D(v||emptyTexture,unit);}function setValueT2DArray1(gl,v,textures){const cache=this.cache;const unit=textures.allocateTextureUnit();if(cache[0]!==unit){gl.uniform1i(this.addr,unit);cache[0]=unit;}textures.setTexture2DArray(v||emptyTexture2dArray,unit);}function setValueT3D1(gl,v,textures){const cache=this.cache;const unit=textures.allocateTextureUnit();if(cache[0]!==unit){gl.uniform1i(this.addr,unit);cache[0]=unit;}textures.setTexture3D(v||emptyTexture3d,unit);}function setValueT6(gl,v,textures){const cache=this.cache;const unit=textures.allocateTextureUnit();if(cache[0]!==unit){gl.uniform1i(this.addr,unit);cache[0]=unit;}textures.safeSetTextureCube(v||emptyCubeTexture,unit);}// Integer / Boolean vectors or arrays thereof (always flat arrays)\nfunction setValueV1i(gl,v){const cache=this.cache;if(cache[0]===v)return;gl.uniform1i(this.addr,v);cache[0]=v;}function setValueV2i(gl,v){const cache=this.cache;if(arraysEqual(cache,v))return;gl.uniform2iv(this.addr,v);copyArray(cache,v);}function setValueV3i(gl,v){const cache=this.cache;if(arraysEqual(cache,v))return;gl.uniform3iv(this.addr,v);copyArray(cache,v);}function setValueV4i(gl,v){const cache=this.cache;if(arraysEqual(cache,v))return;gl.uniform4iv(this.addr,v);copyArray(cache,v);}// uint\nfunction setValueV1ui(gl,v){const cache=this.cache;if(cache[0]===v)return;gl.uniform1ui(this.addr,v);cache[0]=v;}// Helper to pick the right setter for the singular case\nfunction getSingularSetter(type){switch(type){case 0x1406:return setValueV1f;// FLOAT\ncase 0x8b50:return setValueV2f;// _VEC2\ncase 0x8b51:return setValueV3f;// _VEC3\ncase 0x8b52:return setValueV4f;// _VEC4\ncase 0x8b5a:return setValueM2;// _MAT2\ncase 0x8b5b:return setValueM3;// _MAT3\ncase 0x8b5c:return setValueM4;// _MAT4\ncase 0x1404:case 0x8b56:return setValueV1i;// INT, BOOL\ncase 0x8b53:case 0x8b57:return setValueV2i;// _VEC2\ncase 0x8b54:case 0x8b58:return setValueV3i;// _VEC3\ncase 0x8b55:case 0x8b59:return setValueV4i;// _VEC4\ncase 0x1405:return setValueV1ui;// UINT\ncase 0x8b5e:// SAMPLER_2D\ncase 0x8d66:// SAMPLER_EXTERNAL_OES\ncase 0x8dca:// INT_SAMPLER_2D\ncase 0x8dd2:// UNSIGNED_INT_SAMPLER_2D\ncase 0x8b62:// SAMPLER_2D_SHADOW\nreturn setValueT1;case 0x8b5f:// SAMPLER_3D\ncase 0x8dcb:// INT_SAMPLER_3D\ncase 0x8dd3:// UNSIGNED_INT_SAMPLER_3D\nreturn setValueT3D1;case 0x8b60:// SAMPLER_CUBE\ncase 0x8dcc:// INT_SAMPLER_CUBE\ncase 0x8dd4:// UNSIGNED_INT_SAMPLER_CUBE\ncase 0x8dc5:// SAMPLER_CUBE_SHADOW\nreturn setValueT6;case 0x8dc1:// SAMPLER_2D_ARRAY\ncase 0x8dcf:// INT_SAMPLER_2D_ARRAY\ncase 0x8dd7:// UNSIGNED_INT_SAMPLER_2D_ARRAY\ncase 0x8dc4:// SAMPLER_2D_ARRAY_SHADOW\nreturn setValueT2DArray1;}}// Array of scalars\nfunction setValueV1fArray(gl,v){gl.uniform1fv(this.addr,v);}// Integer / Boolean vectors or arrays thereof (always flat arrays)\nfunction setValueV1iArray(gl,v){gl.uniform1iv(this.addr,v);}function setValueV2iArray(gl,v){gl.uniform2iv(this.addr,v);}function setValueV3iArray(gl,v){gl.uniform3iv(this.addr,v);}function setValueV4iArray(gl,v){gl.uniform4iv(this.addr,v);}// Array of vectors (flat or from THREE classes)\nfunction setValueV2fArray(gl,v){const data=flatten(v,this.size,2);gl.uniform2fv(this.addr,data);}function setValueV3fArray(gl,v){const data=flatten(v,this.size,3);gl.uniform3fv(this.addr,data);}function setValueV4fArray(gl,v){const data=flatten(v,this.size,4);gl.uniform4fv(this.addr,data);}// Array of matrices (flat or from THREE clases)\nfunction setValueM2Array(gl,v){const data=flatten(v,this.size,4);gl.uniformMatrix2fv(this.addr,false,data);}function setValueM3Array(gl,v){const data=flatten(v,this.size,9);gl.uniformMatrix3fv(this.addr,false,data);}function setValueM4Array(gl,v){const data=flatten(v,this.size,16);gl.uniformMatrix4fv(this.addr,false,data);}// Array of textures (2D / Cube)\nfunction setValueT1Array(gl,v,textures){const n=v.length;const units=allocTexUnits(textures,n);gl.uniform1iv(this.addr,units);for(let i=0;i!==n;++i){textures.safeSetTexture2D(v[i]||emptyTexture,units[i]);}}function setValueT6Array(gl,v,textures){const n=v.length;const units=allocTexUnits(textures,n);gl.uniform1iv(this.addr,units);for(let i=0;i!==n;++i){textures.safeSetTextureCube(v[i]||emptyCubeTexture,units[i]);}}// Helper to pick the right setter for a pure (bottom-level) array\nfunction getPureArraySetter(type){switch(type){case 0x1406:return setValueV1fArray;// FLOAT\ncase 0x8b50:return setValueV2fArray;// _VEC2\ncase 0x8b51:return setValueV3fArray;// _VEC3\ncase 0x8b52:return setValueV4fArray;// _VEC4\ncase 0x8b5a:return setValueM2Array;// _MAT2\ncase 0x8b5b:return setValueM3Array;// _MAT3\ncase 0x8b5c:return setValueM4Array;// _MAT4\ncase 0x1404:case 0x8b56:return setValueV1iArray;// INT, BOOL\ncase 0x8b53:case 0x8b57:return setValueV2iArray;// _VEC2\ncase 0x8b54:case 0x8b58:return setValueV3iArray;// _VEC3\ncase 0x8b55:case 0x8b59:return setValueV4iArray;// _VEC4\ncase 0x8b5e:// SAMPLER_2D\ncase 0x8d66:// SAMPLER_EXTERNAL_OES\ncase 0x8dca:// INT_SAMPLER_2D\ncase 0x8dd2:// UNSIGNED_INT_SAMPLER_2D\ncase 0x8b62:// SAMPLER_2D_SHADOW\nreturn setValueT1Array;case 0x8b60:// SAMPLER_CUBE\ncase 0x8dcc:// INT_SAMPLER_CUBE\ncase 0x8dd4:// UNSIGNED_INT_SAMPLER_CUBE\ncase 0x8dc5:// SAMPLER_CUBE_SHADOW\nreturn setValueT6Array;}}// --- Uniform Classes ---\nfunction SingleUniform(id,activeInfo,addr){this.id=id;this.addr=addr;this.cache=[];this.setValue=getSingularSetter(activeInfo.type);// this.path = activeInfo.name; // DEBUG\n}function PureArrayUniform(id,activeInfo,addr){this.id=id;this.addr=addr;this.cache=[];this.size=activeInfo.size;this.setValue=getPureArraySetter(activeInfo.type);// this.path = activeInfo.name; // DEBUG\n}PureArrayUniform.prototype.updateCache=function(data){const cache=this.cache;if(data instanceof Float32Array&&cache.length!==data.length){this.cache=new Float32Array(data.length);}copyArray(cache,data);};function StructuredUniform(id){this.id=id;this.seq=[];this.map={};}StructuredUniform.prototype.setValue=function(gl,value,textures){const seq=this.seq;for(let i=0,n=seq.length;i!==n;++i){const u=seq[i];u.setValue(gl,value[u.id],textures);}};// --- Top-level ---\n// Parser - builds up the property tree from the path strings\nconst RePathPart=/(\\w+)(\\])?(\\[|\\.)?/g;// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\nfunction addUniform(container,uniformObject){container.seq.push(uniformObject);container.map[uniformObject.id]=uniformObject;}function parseUniform(activeInfo,addr,container){const path=activeInfo.name,pathLength=path.length;// reset RegExp object, because of the early exit of a previous run\nRePathPart.lastIndex=0;while(true){const match=RePathPart.exec(path),matchEnd=RePathPart.lastIndex;let id=match[1];const idIsIndex=match[2]===']',subscript=match[3];if(idIsIndex)id=id|0;// convert to integer\nif(subscript===undefined||subscript==='['&&matchEnd+2===pathLength){// bare name or \"pure\" bottom-level array \"[0]\" suffix\naddUniform(container,subscript===undefined?new SingleUniform(id,activeInfo,addr):new PureArrayUniform(id,activeInfo,addr));break;}else{// step into inner node / create it in case it doesn't exist\nconst map=container.map;let next=map[id];if(next===undefined){next=new StructuredUniform(id);addUniform(container,next);}container=next;}}}// Root Container\nfunction WebGLUniforms(gl,program){this.seq=[];this.map={};const n=gl.getProgramParameter(program,35718);for(let i=0;i<n;++i){const info=gl.getActiveUniform(program,i),addr=gl.getUniformLocation(program,info.name);parseUniform(info,addr,this);}}WebGLUniforms.prototype.setValue=function(gl,name,value,textures){const u=this.map[name];if(u!==undefined)u.setValue(gl,value,textures);};WebGLUniforms.prototype.setOptional=function(gl,object,name){const v=object[name];if(v!==undefined)this.setValue(gl,name,v);};// Static interface\nWebGLUniforms.upload=function(gl,seq,values,textures){for(let i=0,n=seq.length;i!==n;++i){const u=seq[i],v=values[u.id];if(v.needsUpdate!==false){// note: always updating when .needsUpdate is undefined\nu.setValue(gl,v.value,textures);}}};WebGLUniforms.seqWithValue=function(seq,values){const r=[];for(let i=0,n=seq.length;i!==n;++i){const u=seq[i];if(u.id in values)r.push(u);}return r;};function WebGLShader(gl,type,string){const shader=gl.createShader(type);gl.shaderSource(shader,string);gl.compileShader(shader);return shader;}let programIdCount=0;function addLineNumbers(string){const lines=string.split('\\n');for(let i=0;i<lines.length;i++){lines[i]=i+1+': '+lines[i];}return lines.join('\\n');}function getEncodingComponents(encoding){switch(encoding){case LinearEncoding:return['Linear','( value )'];case sRGBEncoding:return['sRGB','( value )'];case RGBEEncoding:return['RGBE','( value )'];case RGBM7Encoding:return['RGBM','( value, 7.0 )'];case RGBM16Encoding:return['RGBM','( value, 16.0 )'];case RGBDEncoding:return['RGBD','( value, 256.0 )'];case GammaEncoding:return['Gamma','( value, float( GAMMA_FACTOR ) )'];case LogLuvEncoding:return['LogLuv','( value )'];default:console.warn('THREE.WebGLProgram: Unsupported encoding:',encoding);return['Linear','( value )'];}}function getShaderErrors(gl,shader,type){const status=gl.getShaderParameter(shader,35713);const log=gl.getShaderInfoLog(shader).trim();if(status&&log==='')return'';// --enable-privileged-webgl-extension\n// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\nconst source=gl.getShaderSource(shader);return'THREE.WebGLShader: gl.getShaderInfoLog() '+type+'\\n'+log+addLineNumbers(source);}function getTexelDecodingFunction(functionName,encoding){const components=getEncodingComponents(encoding);return'vec4 '+functionName+'( vec4 value ) { return '+components[0]+'ToLinear'+components[1]+'; }';}function getTexelEncodingFunction(functionName,encoding){const components=getEncodingComponents(encoding);return'vec4 '+functionName+'( vec4 value ) { return LinearTo'+components[0]+components[1]+'; }';}function getToneMappingFunction(functionName,toneMapping){let toneMappingName;switch(toneMapping){case LinearToneMapping:toneMappingName='Linear';break;case ReinhardToneMapping:toneMappingName='Reinhard';break;case CineonToneMapping:toneMappingName='OptimizedCineon';break;case ACESFilmicToneMapping:toneMappingName='ACESFilmic';break;case CustomToneMapping:toneMappingName='Custom';break;default:console.warn('THREE.WebGLProgram: Unsupported toneMapping:',toneMapping);toneMappingName='Linear';}return'vec3 '+functionName+'( vec3 color ) { return '+toneMappingName+'ToneMapping( color ); }';}function generateExtensions(parameters){const chunks=[parameters.extensionDerivatives||parameters.envMapCubeUV||parameters.bumpMap||parameters.tangentSpaceNormalMap||parameters.clearcoatNormalMap||parameters.flatShading||parameters.shaderID==='physical'?'#extension GL_OES_standard_derivatives : enable':'',(parameters.extensionFragDepth||parameters.logarithmicDepthBuffer)&&parameters.rendererExtensionFragDepth?'#extension GL_EXT_frag_depth : enable':'',parameters.extensionDrawBuffers&&parameters.rendererExtensionDrawBuffers?'#extension GL_EXT_draw_buffers : require':'',(parameters.extensionShaderTextureLOD||parameters.envMap)&&parameters.rendererExtensionShaderTextureLod?'#extension GL_EXT_shader_texture_lod : enable':''];return chunks.filter(filterEmptyLine).join('\\n');}function generateDefines(defines){const chunks=[];for(const name in defines){const value=defines[name];if(value===false)continue;chunks.push('#define '+name+' '+value);}return chunks.join('\\n');}function fetchAttributeLocations(gl,program){const attributes={};const n=gl.getProgramParameter(program,35721);for(let i=0;i<n;i++){const info=gl.getActiveAttrib(program,i);const name=info.name;// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\nattributes[name]=gl.getAttribLocation(program,name);}return attributes;}function filterEmptyLine(string){return string!=='';}function replaceLightNums(string,parameters){return string.replace(/NUM_DIR_LIGHTS/g,parameters.numDirLights).replace(/NUM_SPOT_LIGHTS/g,parameters.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,parameters.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,parameters.numPointLights).replace(/NUM_HEMI_LIGHTS/g,parameters.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,parameters.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,parameters.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,parameters.numPointLightShadows);}function replaceClippingPlaneNums(string,parameters){return string.replace(/NUM_CLIPPING_PLANES/g,parameters.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,parameters.numClippingPlanes-parameters.numClipIntersection);}// Resolve Includes\nconst includePattern=/^[ \\t]*#include +<([\\w\\d./]+)>/gm;function resolveIncludes(string){return string.replace(includePattern,includeReplacer);}function includeReplacer(match,include){const string=ShaderChunk[include];if(string===undefined){throw new Error('Can not resolve #include <'+include+'>');}return resolveIncludes(string);}// Unroll Loops\nconst deprecatedUnrollLoopPattern=/#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;const unrollLoopPattern=/#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;function unrollLoops(string){return string.replace(unrollLoopPattern,loopReplacer).replace(deprecatedUnrollLoopPattern,deprecatedLoopReplacer);}function deprecatedLoopReplacer(match,start,end,snippet){console.warn('WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.');return loopReplacer(match,start,end,snippet);}function loopReplacer(match,start,end,snippet){let string='';for(let i=parseInt(start);i<parseInt(end);i++){string+=snippet.replace(/\\[\\s*i\\s*\\]/g,'[ '+i+' ]').replace(/UNROLLED_LOOP_INDEX/g,i);}return string;}//\nfunction generatePrecision(parameters){let precisionstring='precision '+parameters.precision+' float;\\nprecision '+parameters.precision+' int;';if(parameters.precision==='highp'){precisionstring+='\\n#define HIGH_PRECISION';}else if(parameters.precision==='mediump'){precisionstring+='\\n#define MEDIUM_PRECISION';}else if(parameters.precision==='lowp'){precisionstring+='\\n#define LOW_PRECISION';}return precisionstring;}function generateShadowMapTypeDefine(parameters){let shadowMapTypeDefine='SHADOWMAP_TYPE_BASIC';if(parameters.shadowMapType===PCFShadowMap){shadowMapTypeDefine='SHADOWMAP_TYPE_PCF';}else if(parameters.shadowMapType===PCFSoftShadowMap){shadowMapTypeDefine='SHADOWMAP_TYPE_PCF_SOFT';}else if(parameters.shadowMapType===VSMShadowMap){shadowMapTypeDefine='SHADOWMAP_TYPE_VSM';}return shadowMapTypeDefine;}function generateEnvMapTypeDefine(parameters){let envMapTypeDefine='ENVMAP_TYPE_CUBE';if(parameters.envMap){switch(parameters.envMapMode){case CubeReflectionMapping:case CubeRefractionMapping:envMapTypeDefine='ENVMAP_TYPE_CUBE';break;case CubeUVReflectionMapping:case CubeUVRefractionMapping:envMapTypeDefine='ENVMAP_TYPE_CUBE_UV';break;}}return envMapTypeDefine;}function generateEnvMapModeDefine(parameters){let envMapModeDefine='ENVMAP_MODE_REFLECTION';if(parameters.envMap){switch(parameters.envMapMode){case CubeRefractionMapping:case CubeUVRefractionMapping:envMapModeDefine='ENVMAP_MODE_REFRACTION';break;}}return envMapModeDefine;}function generateEnvMapBlendingDefine(parameters){let envMapBlendingDefine='ENVMAP_BLENDING_NONE';if(parameters.envMap){switch(parameters.combine){case MultiplyOperation:envMapBlendingDefine='ENVMAP_BLENDING_MULTIPLY';break;case MixOperation:envMapBlendingDefine='ENVMAP_BLENDING_MIX';break;case AddOperation:envMapBlendingDefine='ENVMAP_BLENDING_ADD';break;}}return envMapBlendingDefine;}function WebGLProgram(renderer,cacheKey,parameters,bindingStates){const gl=renderer.getContext();const defines=parameters.defines;let vertexShader=parameters.vertexShader;let fragmentShader=parameters.fragmentShader;const shadowMapTypeDefine=generateShadowMapTypeDefine(parameters);const envMapTypeDefine=generateEnvMapTypeDefine(parameters);const envMapModeDefine=generateEnvMapModeDefine(parameters);const envMapBlendingDefine=generateEnvMapBlendingDefine(parameters);const gammaFactorDefine=renderer.gammaFactor>0?renderer.gammaFactor:1.0;const customExtensions=parameters.isWebGL2?'':generateExtensions(parameters);const customDefines=generateDefines(defines);const program=gl.createProgram();let prefixVertex,prefixFragment;let versionString=parameters.glslVersion?'#version '+parameters.glslVersion+'\\n':'';if(parameters.isRawShaderMaterial){prefixVertex=[customDefines].filter(filterEmptyLine).join('\\n');if(prefixVertex.length>0){prefixVertex+='\\n';}prefixFragment=[customExtensions,customDefines].filter(filterEmptyLine).join('\\n');if(prefixFragment.length>0){prefixFragment+='\\n';}}else{prefixVertex=[generatePrecision(parameters),'#define SHADER_NAME '+parameters.shaderName,customDefines,parameters.instancing?'#define USE_INSTANCING':'',parameters.instancingColor?'#define USE_INSTANCING_COLOR':'',parameters.supportsVertexTextures?'#define VERTEX_TEXTURES':'','#define GAMMA_FACTOR '+gammaFactorDefine,'#define MAX_BONES '+parameters.maxBones,parameters.useFog&&parameters.fog?'#define USE_FOG':'',parameters.useFog&&parameters.fogExp2?'#define FOG_EXP2':'',parameters.map?'#define USE_MAP':'',parameters.envMap?'#define USE_ENVMAP':'',parameters.envMap?'#define '+envMapModeDefine:'',parameters.lightMap?'#define USE_LIGHTMAP':'',parameters.aoMap?'#define USE_AOMAP':'',parameters.emissiveMap?'#define USE_EMISSIVEMAP':'',parameters.bumpMap?'#define USE_BUMPMAP':'',parameters.normalMap?'#define USE_NORMALMAP':'',parameters.normalMap&&parameters.objectSpaceNormalMap?'#define OBJECTSPACE_NORMALMAP':'',parameters.normalMap&&parameters.tangentSpaceNormalMap?'#define TANGENTSPACE_NORMALMAP':'',parameters.clearcoatMap?'#define USE_CLEARCOATMAP':'',parameters.clearcoatRoughnessMap?'#define USE_CLEARCOAT_ROUGHNESSMAP':'',parameters.clearcoatNormalMap?'#define USE_CLEARCOAT_NORMALMAP':'',parameters.displacementMap&&parameters.supportsVertexTextures?'#define USE_DISPLACEMENTMAP':'',parameters.specularMap?'#define USE_SPECULARMAP':'',parameters.roughnessMap?'#define USE_ROUGHNESSMAP':'',parameters.metalnessMap?'#define USE_METALNESSMAP':'',parameters.alphaMap?'#define USE_ALPHAMAP':'',parameters.transmissionMap?'#define USE_TRANSMISSIONMAP':'',parameters.vertexTangents?'#define USE_TANGENT':'',parameters.vertexColors?'#define USE_COLOR':'',parameters.vertexUvs?'#define USE_UV':'',parameters.uvsVertexOnly?'#define UVS_VERTEX_ONLY':'',parameters.flatShading?'#define FLAT_SHADED':'',parameters.skinning?'#define USE_SKINNING':'',parameters.useVertexTexture?'#define BONE_TEXTURE':'',parameters.morphTargets?'#define USE_MORPHTARGETS':'',parameters.morphNormals&&parameters.flatShading===false?'#define USE_MORPHNORMALS':'',parameters.doubleSided?'#define DOUBLE_SIDED':'',parameters.flipSided?'#define FLIP_SIDED':'',parameters.shadowMapEnabled?'#define USE_SHADOWMAP':'',parameters.shadowMapEnabled?'#define '+shadowMapTypeDefine:'',parameters.sizeAttenuation?'#define USE_SIZEATTENUATION':'',parameters.logarithmicDepthBuffer?'#define USE_LOGDEPTHBUF':'',parameters.logarithmicDepthBuffer&&parameters.rendererExtensionFragDepth?'#define USE_LOGDEPTHBUF_EXT':'','uniform mat4 modelMatrix;','uniform mat4 modelViewMatrix;','uniform mat4 projectionMatrix;','uniform mat4 viewMatrix;','uniform mat3 normalMatrix;','uniform vec3 cameraPosition;','uniform bool isOrthographic;','#ifdef USE_INSTANCING','\tattribute mat4 instanceMatrix;','#endif','#ifdef USE_INSTANCING_COLOR','\tattribute vec3 instanceColor;','#endif','attribute vec3 position;','attribute vec3 normal;','attribute vec2 uv;','#ifdef USE_TANGENT','\tattribute vec4 tangent;','#endif','#ifdef USE_COLOR','\tattribute vec3 color;','#endif','#ifdef USE_MORPHTARGETS','\tattribute vec3 morphTarget0;','\tattribute vec3 morphTarget1;','\tattribute vec3 morphTarget2;','\tattribute vec3 morphTarget3;','\t#ifdef USE_MORPHNORMALS','\t\tattribute vec3 morphNormal0;','\t\tattribute vec3 morphNormal1;','\t\tattribute vec3 morphNormal2;','\t\tattribute vec3 morphNormal3;','\t#else','\t\tattribute vec3 morphTarget4;','\t\tattribute vec3 morphTarget5;','\t\tattribute vec3 morphTarget6;','\t\tattribute vec3 morphTarget7;','\t#endif','#endif','#ifdef USE_SKINNING','\tattribute vec4 skinIndex;','\tattribute vec4 skinWeight;','#endif','\\n'].filter(filterEmptyLine).join('\\n');prefixFragment=[customExtensions,generatePrecision(parameters),'#define SHADER_NAME '+parameters.shaderName,customDefines,parameters.alphaTest?'#define ALPHATEST '+parameters.alphaTest+(parameters.alphaTest%1?'':'.0'):'',// add '.0' if integer\n'#define GAMMA_FACTOR '+gammaFactorDefine,parameters.useFog&&parameters.fog?'#define USE_FOG':'',parameters.useFog&&parameters.fogExp2?'#define FOG_EXP2':'',parameters.map?'#define USE_MAP':'',parameters.matcap?'#define USE_MATCAP':'',parameters.envMap?'#define USE_ENVMAP':'',parameters.envMap?'#define '+envMapTypeDefine:'',parameters.envMap?'#define '+envMapModeDefine:'',parameters.envMap?'#define '+envMapBlendingDefine:'',parameters.lightMap?'#define USE_LIGHTMAP':'',parameters.aoMap?'#define USE_AOMAP':'',parameters.emissiveMap?'#define USE_EMISSIVEMAP':'',parameters.bumpMap?'#define USE_BUMPMAP':'',parameters.normalMap?'#define USE_NORMALMAP':'',parameters.normalMap&&parameters.objectSpaceNormalMap?'#define OBJECTSPACE_NORMALMAP':'',parameters.normalMap&&parameters.tangentSpaceNormalMap?'#define TANGENTSPACE_NORMALMAP':'',parameters.clearcoatMap?'#define USE_CLEARCOATMAP':'',parameters.clearcoatRoughnessMap?'#define USE_CLEARCOAT_ROUGHNESSMAP':'',parameters.clearcoatNormalMap?'#define USE_CLEARCOAT_NORMALMAP':'',parameters.specularMap?'#define USE_SPECULARMAP':'',parameters.roughnessMap?'#define USE_ROUGHNESSMAP':'',parameters.metalnessMap?'#define USE_METALNESSMAP':'',parameters.alphaMap?'#define USE_ALPHAMAP':'',parameters.sheen?'#define USE_SHEEN':'',parameters.transmissionMap?'#define USE_TRANSMISSIONMAP':'',parameters.vertexTangents?'#define USE_TANGENT':'',parameters.vertexColors||parameters.instancingColor?'#define USE_COLOR':'',parameters.vertexUvs?'#define USE_UV':'',parameters.uvsVertexOnly?'#define UVS_VERTEX_ONLY':'',parameters.gradientMap?'#define USE_GRADIENTMAP':'',parameters.flatShading?'#define FLAT_SHADED':'',parameters.doubleSided?'#define DOUBLE_SIDED':'',parameters.flipSided?'#define FLIP_SIDED':'',parameters.shadowMapEnabled?'#define USE_SHADOWMAP':'',parameters.shadowMapEnabled?'#define '+shadowMapTypeDefine:'',parameters.premultipliedAlpha?'#define PREMULTIPLIED_ALPHA':'',parameters.physicallyCorrectLights?'#define PHYSICALLY_CORRECT_LIGHTS':'',parameters.logarithmicDepthBuffer?'#define USE_LOGDEPTHBUF':'',parameters.logarithmicDepthBuffer&&parameters.rendererExtensionFragDepth?'#define USE_LOGDEPTHBUF_EXT':'',(parameters.extensionShaderTextureLOD||parameters.envMap)&&parameters.rendererExtensionShaderTextureLod?'#define TEXTURE_LOD_EXT':'','uniform mat4 viewMatrix;','uniform vec3 cameraPosition;','uniform bool isOrthographic;',parameters.toneMapping!==NoToneMapping?'#define TONE_MAPPING':'',parameters.toneMapping!==NoToneMapping?ShaderChunk['tonemapping_pars_fragment']:'',// this code is required here because it is used by the toneMapping() function defined below\nparameters.toneMapping!==NoToneMapping?getToneMappingFunction('toneMapping',parameters.toneMapping):'',parameters.dithering?'#define DITHERING':'',ShaderChunk['encodings_pars_fragment'],// this code is required here because it is used by the various encoding/decoding function defined below\nparameters.map?getTexelDecodingFunction('mapTexelToLinear',parameters.mapEncoding):'',parameters.matcap?getTexelDecodingFunction('matcapTexelToLinear',parameters.matcapEncoding):'',parameters.envMap?getTexelDecodingFunction('envMapTexelToLinear',parameters.envMapEncoding):'',parameters.emissiveMap?getTexelDecodingFunction('emissiveMapTexelToLinear',parameters.emissiveMapEncoding):'',parameters.lightMap?getTexelDecodingFunction('lightMapTexelToLinear',parameters.lightMapEncoding):'',getTexelEncodingFunction('linearToOutputTexel',parameters.outputEncoding),parameters.depthPacking?'#define DEPTH_PACKING '+parameters.depthPacking:'','\\n'].filter(filterEmptyLine).join('\\n');}vertexShader=resolveIncludes(vertexShader);vertexShader=replaceLightNums(vertexShader,parameters);vertexShader=replaceClippingPlaneNums(vertexShader,parameters);fragmentShader=resolveIncludes(fragmentShader);fragmentShader=replaceLightNums(fragmentShader,parameters);fragmentShader=replaceClippingPlaneNums(fragmentShader,parameters);vertexShader=unrollLoops(vertexShader);fragmentShader=unrollLoops(fragmentShader);if(parameters.isWebGL2&&parameters.isRawShaderMaterial!==true){// GLSL 3.0 conversion for built-in materials and ShaderMaterial\nversionString='#version 300 es\\n';prefixVertex=['#define attribute in','#define varying out','#define texture2D texture'].join('\\n')+'\\n'+prefixVertex;prefixFragment=['#define varying in',parameters.glslVersion===GLSL3?'':'out highp vec4 pc_fragColor;',parameters.glslVersion===GLSL3?'':'#define gl_FragColor pc_fragColor','#define gl_FragDepthEXT gl_FragDepth','#define texture2D texture','#define textureCube texture','#define texture2DProj textureProj','#define texture2DLodEXT textureLod','#define texture2DProjLodEXT textureProjLod','#define textureCubeLodEXT textureLod','#define texture2DGradEXT textureGrad','#define texture2DProjGradEXT textureProjGrad','#define textureCubeGradEXT textureGrad'].join('\\n')+'\\n'+prefixFragment;}const vertexGlsl=versionString+prefixVertex+vertexShader;const fragmentGlsl=versionString+prefixFragment+fragmentShader;// console.log( '*VERTEX*', vertexGlsl );\n// console.log( '*FRAGMENT*', fragmentGlsl );\nconst glVertexShader=WebGLShader(gl,35633,vertexGlsl);const glFragmentShader=WebGLShader(gl,35632,fragmentGlsl);gl.attachShader(program,glVertexShader);gl.attachShader(program,glFragmentShader);// Force a particular attribute to index 0.\nif(parameters.index0AttributeName!==undefined){gl.bindAttribLocation(program,0,parameters.index0AttributeName);}else if(parameters.morphTargets===true){// programs with morphTargets displace position out of attribute 0\ngl.bindAttribLocation(program,0,'position');}gl.linkProgram(program);// check for link errors\nif(renderer.debug.checkShaderErrors){const programLog=gl.getProgramInfoLog(program).trim();const vertexLog=gl.getShaderInfoLog(glVertexShader).trim();const fragmentLog=gl.getShaderInfoLog(glFragmentShader).trim();let runnable=true;let haveDiagnostics=true;if(gl.getProgramParameter(program,35714)===false){runnable=false;const vertexErrors=getShaderErrors(gl,glVertexShader,'vertex');const fragmentErrors=getShaderErrors(gl,glFragmentShader,'fragment');console.error('THREE.WebGLProgram: shader error: ',gl.getError(),'35715',gl.getProgramParameter(program,35715),'gl.getProgramInfoLog',programLog,vertexErrors,fragmentErrors);}else if(programLog!==''){console.warn('THREE.WebGLProgram: gl.getProgramInfoLog()',programLog);}else if(vertexLog===''||fragmentLog===''){haveDiagnostics=false;}if(haveDiagnostics){this.diagnostics={runnable:runnable,programLog:programLog,vertexShader:{log:vertexLog,prefix:prefixVertex},fragmentShader:{log:fragmentLog,prefix:prefixFragment}};}}// Clean up\n// Crashes in iOS9 and iOS10. #18402\n// gl.detachShader( program, glVertexShader );\n// gl.detachShader( program, glFragmentShader );\ngl.deleteShader(glVertexShader);gl.deleteShader(glFragmentShader);// set up caching for uniform locations\nlet cachedUniforms;this.getUniforms=function(){if(cachedUniforms===undefined){cachedUniforms=new WebGLUniforms(gl,program);}return cachedUniforms;};// set up caching for attribute locations\nlet cachedAttributes;this.getAttributes=function(){if(cachedAttributes===undefined){cachedAttributes=fetchAttributeLocations(gl,program);}return cachedAttributes;};// free resource\nthis.destroy=function(){bindingStates.releaseStatesOfProgram(this);gl.deleteProgram(program);this.program=undefined;};//\nthis.name=parameters.shaderName;this.id=programIdCount++;this.cacheKey=cacheKey;this.usedTimes=1;this.program=program;this.vertexShader=glVertexShader;this.fragmentShader=glFragmentShader;return this;}function WebGLPrograms(renderer,cubemaps,extensions,capabilities,bindingStates,clipping){const programs=[];const isWebGL2=capabilities.isWebGL2;const logarithmicDepthBuffer=capabilities.logarithmicDepthBuffer;const floatVertexTextures=capabilities.floatVertexTextures;const maxVertexUniforms=capabilities.maxVertexUniforms;const vertexTextures=capabilities.vertexTextures;let precision=capabilities.precision;const shaderIDs={MeshDepthMaterial:'depth',MeshDistanceMaterial:'distanceRGBA',MeshNormalMaterial:'normal',MeshBasicMaterial:'basic',MeshLambertMaterial:'lambert',MeshPhongMaterial:'phong',MeshToonMaterial:'toon',MeshStandardMaterial:'physical',MeshPhysicalMaterial:'physical',MeshMatcapMaterial:'matcap',LineBasicMaterial:'basic',LineDashedMaterial:'dashed',PointsMaterial:'points',ShadowMaterial:'shadow',SpriteMaterial:'sprite'};const parameterNames=['precision','isWebGL2','supportsVertexTextures','outputEncoding','instancing','instancingColor','map','mapEncoding','matcap','matcapEncoding','envMap','envMapMode','envMapEncoding','envMapCubeUV','lightMap','lightMapEncoding','aoMap','emissiveMap','emissiveMapEncoding','bumpMap','normalMap','objectSpaceNormalMap','tangentSpaceNormalMap','clearcoatMap','clearcoatRoughnessMap','clearcoatNormalMap','displacementMap','specularMap','roughnessMap','metalnessMap','gradientMap','alphaMap','combine','vertexColors','vertexTangents','vertexUvs','uvsVertexOnly','fog','useFog','fogExp2','flatShading','sizeAttenuation','logarithmicDepthBuffer','skinning','maxBones','useVertexTexture','morphTargets','morphNormals','maxMorphTargets','maxMorphNormals','premultipliedAlpha','numDirLights','numPointLights','numSpotLights','numHemiLights','numRectAreaLights','numDirLightShadows','numPointLightShadows','numSpotLightShadows','shadowMapEnabled','shadowMapType','toneMapping','physicallyCorrectLights','alphaTest','doubleSided','flipSided','numClippingPlanes','numClipIntersection','depthPacking','dithering','sheen','transmissionMap'];function getMaxBones(object){const skeleton=object.skeleton;const bones=skeleton.bones;if(floatVertexTextures){return 1024;}else{// default for when object is not specified\n// ( for example when prebuilding shader to be used with multiple objects )\n//\n//  - leave some extra space for other uniforms\n//  - limit here is ANGLE's 254 max uniform vectors\n//    (up to 54 should be safe)\nconst nVertexUniforms=maxVertexUniforms;const nVertexMatrices=Math.floor((nVertexUniforms-20)/4);const maxBones=Math.min(nVertexMatrices,bones.length);if(maxBones<bones.length){console.warn('THREE.WebGLRenderer: Skeleton has '+bones.length+' bones. This GPU supports '+maxBones+'.');return 0;}return maxBones;}}function getTextureEncodingFromMap(map){let encoding;if(map&&map.isTexture){encoding=map.encoding;}else if(map&&map.isWebGLRenderTarget){console.warn('THREE.WebGLPrograms.getTextureEncodingFromMap: don\\'t use render targets as textures. Use their .texture property instead.');encoding=map.texture.encoding;}else{encoding=LinearEncoding;}return encoding;}function getParameters(material,lights,shadows,scene,object){const fog=scene.fog;const environment=material.isMeshStandardMaterial?scene.environment:null;const envMap=cubemaps.get(material.envMap||environment);const shaderID=shaderIDs[material.type];// heuristics to create shader parameters according to lights in the scene\n// (not to blow over maxLights budget)\nconst maxBones=object.isSkinnedMesh?getMaxBones(object):0;if(material.precision!==null){precision=capabilities.getMaxPrecision(material.precision);if(precision!==material.precision){console.warn('THREE.WebGLProgram.getParameters:',material.precision,'not supported, using',precision,'instead.');}}let vertexShader,fragmentShader;if(shaderID){const shader=ShaderLib[shaderID];vertexShader=shader.vertexShader;fragmentShader=shader.fragmentShader;}else{vertexShader=material.vertexShader;fragmentShader=material.fragmentShader;}const currentRenderTarget=renderer.getRenderTarget();const parameters={isWebGL2:isWebGL2,shaderID:shaderID,shaderName:material.type,vertexShader:vertexShader,fragmentShader:fragmentShader,defines:material.defines,isRawShaderMaterial:material.isRawShaderMaterial===true,glslVersion:material.glslVersion,precision:precision,instancing:object.isInstancedMesh===true,instancingColor:object.isInstancedMesh===true&&object.instanceColor!==null,supportsVertexTextures:vertexTextures,outputEncoding:currentRenderTarget!==null?getTextureEncodingFromMap(currentRenderTarget.texture):renderer.outputEncoding,map:!!material.map,mapEncoding:getTextureEncodingFromMap(material.map),matcap:!!material.matcap,matcapEncoding:getTextureEncodingFromMap(material.matcap),envMap:!!envMap,envMapMode:envMap&&envMap.mapping,envMapEncoding:getTextureEncodingFromMap(envMap),envMapCubeUV:!!envMap&&(envMap.mapping===CubeUVReflectionMapping||envMap.mapping===CubeUVRefractionMapping),lightMap:!!material.lightMap,lightMapEncoding:getTextureEncodingFromMap(material.lightMap),aoMap:!!material.aoMap,emissiveMap:!!material.emissiveMap,emissiveMapEncoding:getTextureEncodingFromMap(material.emissiveMap),bumpMap:!!material.bumpMap,normalMap:!!material.normalMap,objectSpaceNormalMap:material.normalMapType===ObjectSpaceNormalMap,tangentSpaceNormalMap:material.normalMapType===TangentSpaceNormalMap,clearcoatMap:!!material.clearcoatMap,clearcoatRoughnessMap:!!material.clearcoatRoughnessMap,clearcoatNormalMap:!!material.clearcoatNormalMap,displacementMap:!!material.displacementMap,roughnessMap:!!material.roughnessMap,metalnessMap:!!material.metalnessMap,specularMap:!!material.specularMap,alphaMap:!!material.alphaMap,gradientMap:!!material.gradientMap,sheen:!!material.sheen,transmissionMap:!!material.transmissionMap,combine:material.combine,vertexTangents:material.normalMap&&material.vertexTangents,vertexColors:material.vertexColors,vertexUvs:!!material.map||!!material.bumpMap||!!material.normalMap||!!material.specularMap||!!material.alphaMap||!!material.emissiveMap||!!material.roughnessMap||!!material.metalnessMap||!!material.clearcoatMap||!!material.clearcoatRoughnessMap||!!material.clearcoatNormalMap||!!material.displacementMap||!!material.transmissionMap,uvsVertexOnly:!(!!material.map||!!material.bumpMap||!!material.normalMap||!!material.specularMap||!!material.alphaMap||!!material.emissiveMap||!!material.roughnessMap||!!material.metalnessMap||!!material.clearcoatNormalMap||!!material.transmissionMap)&&!!material.displacementMap,fog:!!fog,useFog:material.fog,fogExp2:fog&&fog.isFogExp2,flatShading:material.flatShading,sizeAttenuation:material.sizeAttenuation,logarithmicDepthBuffer:logarithmicDepthBuffer,skinning:material.skinning&&maxBones>0,maxBones:maxBones,useVertexTexture:floatVertexTextures,morphTargets:material.morphTargets,morphNormals:material.morphNormals,maxMorphTargets:renderer.maxMorphTargets,maxMorphNormals:renderer.maxMorphNormals,numDirLights:lights.directional.length,numPointLights:lights.point.length,numSpotLights:lights.spot.length,numRectAreaLights:lights.rectArea.length,numHemiLights:lights.hemi.length,numDirLightShadows:lights.directionalShadowMap.length,numPointLightShadows:lights.pointShadowMap.length,numSpotLightShadows:lights.spotShadowMap.length,numClippingPlanes:clipping.numPlanes,numClipIntersection:clipping.numIntersection,dithering:material.dithering,shadowMapEnabled:renderer.shadowMap.enabled&&shadows.length>0,shadowMapType:renderer.shadowMap.type,toneMapping:material.toneMapped?renderer.toneMapping:NoToneMapping,physicallyCorrectLights:renderer.physicallyCorrectLights,premultipliedAlpha:material.premultipliedAlpha,alphaTest:material.alphaTest,doubleSided:material.side===DoubleSide,flipSided:material.side===BackSide,depthPacking:material.depthPacking!==undefined?material.depthPacking:false,index0AttributeName:material.index0AttributeName,extensionDerivatives:material.extensions&&material.extensions.derivatives,extensionFragDepth:material.extensions&&material.extensions.fragDepth,extensionDrawBuffers:material.extensions&&material.extensions.drawBuffers,extensionShaderTextureLOD:material.extensions&&material.extensions.shaderTextureLOD,rendererExtensionFragDepth:isWebGL2||extensions.has('EXT_frag_depth'),rendererExtensionDrawBuffers:isWebGL2||extensions.has('WEBGL_draw_buffers'),rendererExtensionShaderTextureLod:isWebGL2||extensions.has('EXT_shader_texture_lod'),customProgramCacheKey:material.customProgramCacheKey()};return parameters;}function getProgramCacheKey(parameters){const array=[];if(parameters.shaderID){array.push(parameters.shaderID);}else{array.push(parameters.fragmentShader);array.push(parameters.vertexShader);}if(parameters.defines!==undefined){for(const name in parameters.defines){array.push(name);array.push(parameters.defines[name]);}}if(parameters.isRawShaderMaterial===false){for(let i=0;i<parameterNames.length;i++){array.push(parameters[parameterNames[i]]);}array.push(renderer.outputEncoding);array.push(renderer.gammaFactor);}array.push(parameters.customProgramCacheKey);return array.join();}function getUniforms(material){const shaderID=shaderIDs[material.type];let uniforms;if(shaderID){const shader=ShaderLib[shaderID];uniforms=UniformsUtils.clone(shader.uniforms);}else{uniforms=material.uniforms;}return uniforms;}function acquireProgram(parameters,cacheKey){let program;// Check if code has been already compiled\nfor(let p=0,pl=programs.length;p<pl;p++){const preexistingProgram=programs[p];if(preexistingProgram.cacheKey===cacheKey){program=preexistingProgram;++program.usedTimes;break;}}if(program===undefined){program=new WebGLProgram(renderer,cacheKey,parameters,bindingStates);programs.push(program);}return program;}function releaseProgram(program){if(--program.usedTimes===0){// Remove from unordered set\nconst i=programs.indexOf(program);programs[i]=programs[programs.length-1];programs.pop();// Free WebGL resources\nprogram.destroy();}}return{getParameters:getParameters,getProgramCacheKey:getProgramCacheKey,getUniforms:getUniforms,acquireProgram:acquireProgram,releaseProgram:releaseProgram,// Exposed for resource monitoring & error feedback via renderer.info:\nprograms:programs};}function WebGLProperties(){let properties=new WeakMap();function get(object){let map=properties.get(object);if(map===undefined){map={};properties.set(object,map);}return map;}function remove(object){properties.delete(object);}function update(object,key,value){properties.get(object)[key]=value;}function dispose(){properties=new WeakMap();}return{get:get,remove:remove,update:update,dispose:dispose};}function painterSortStable(a,b){if(a.groupOrder!==b.groupOrder){return a.groupOrder-b.groupOrder;}else if(a.renderOrder!==b.renderOrder){return a.renderOrder-b.renderOrder;}else if(a.program!==b.program){return a.program.id-b.program.id;}else if(a.material.id!==b.material.id){return a.material.id-b.material.id;}else if(a.z!==b.z){return a.z-b.z;}else{return a.id-b.id;}}function reversePainterSortStable(a,b){if(a.groupOrder!==b.groupOrder){return a.groupOrder-b.groupOrder;}else if(a.renderOrder!==b.renderOrder){return a.renderOrder-b.renderOrder;}else if(a.z!==b.z){return b.z-a.z;}else{return a.id-b.id;}}function WebGLRenderList(properties){const renderItems=[];let renderItemsIndex=0;const opaque=[];const transparent=[];const defaultProgram={id:-1};function init(){renderItemsIndex=0;opaque.length=0;transparent.length=0;}function getNextRenderItem(object,geometry,material,groupOrder,z,group){let renderItem=renderItems[renderItemsIndex];const materialProperties=properties.get(material);if(renderItem===undefined){renderItem={id:object.id,object:object,geometry:geometry,material:material,program:materialProperties.program||defaultProgram,groupOrder:groupOrder,renderOrder:object.renderOrder,z:z,group:group};renderItems[renderItemsIndex]=renderItem;}else{renderItem.id=object.id;renderItem.object=object;renderItem.geometry=geometry;renderItem.material=material;renderItem.program=materialProperties.program||defaultProgram;renderItem.groupOrder=groupOrder;renderItem.renderOrder=object.renderOrder;renderItem.z=z;renderItem.group=group;}renderItemsIndex++;return renderItem;}function push(object,geometry,material,groupOrder,z,group){const renderItem=getNextRenderItem(object,geometry,material,groupOrder,z,group);(material.transparent===true?transparent:opaque).push(renderItem);}function unshift(object,geometry,material,groupOrder,z,group){const renderItem=getNextRenderItem(object,geometry,material,groupOrder,z,group);(material.transparent===true?transparent:opaque).unshift(renderItem);}function sort(customOpaqueSort,customTransparentSort){if(opaque.length>1)opaque.sort(customOpaqueSort||painterSortStable);if(transparent.length>1)transparent.sort(customTransparentSort||reversePainterSortStable);}function finish(){// Clear references from inactive renderItems in the list\nfor(let i=renderItemsIndex,il=renderItems.length;i<il;i++){const renderItem=renderItems[i];if(renderItem.id===null)break;renderItem.id=null;renderItem.object=null;renderItem.geometry=null;renderItem.material=null;renderItem.program=null;renderItem.group=null;}}return{opaque:opaque,transparent:transparent,init:init,push:push,unshift:unshift,finish:finish,sort:sort};}function WebGLRenderLists(properties){let lists=new WeakMap();function get(scene,camera){const cameras=lists.get(scene);let list;if(cameras===undefined){list=new WebGLRenderList(properties);lists.set(scene,new WeakMap());lists.get(scene).set(camera,list);}else{list=cameras.get(camera);if(list===undefined){list=new WebGLRenderList(properties);cameras.set(camera,list);}}return list;}function dispose(){lists=new WeakMap();}return{get:get,dispose:dispose};}function UniformsCache(){const lights={};return{get:function(light){if(lights[light.id]!==undefined){return lights[light.id];}let uniforms;switch(light.type){case'DirectionalLight':uniforms={direction:new Vector3(),color:new Color()};break;case'SpotLight':uniforms={position:new Vector3(),direction:new Vector3(),color:new Color(),distance:0,coneCos:0,penumbraCos:0,decay:0};break;case'PointLight':uniforms={position:new Vector3(),color:new Color(),distance:0,decay:0};break;case'HemisphereLight':uniforms={direction:new Vector3(),skyColor:new Color(),groundColor:new Color()};break;case'RectAreaLight':uniforms={color:new Color(),position:new Vector3(),halfWidth:new Vector3(),halfHeight:new Vector3()};break;}lights[light.id]=uniforms;return uniforms;}};}function ShadowUniformsCache(){const lights={};return{get:function(light){if(lights[light.id]!==undefined){return lights[light.id];}let uniforms;switch(light.type){case'DirectionalLight':uniforms={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Vector2()};break;case'SpotLight':uniforms={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Vector2()};break;case'PointLight':uniforms={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Vector2(),shadowCameraNear:1,shadowCameraFar:1000};break;// TODO (abelnation): set RectAreaLight shadow uniforms\n}lights[light.id]=uniforms;return uniforms;}};}let nextVersion=0;function shadowCastingLightsFirst(lightA,lightB){return(lightB.castShadow?1:0)-(lightA.castShadow?1:0);}function WebGLLights(extensions,capabilities){const cache=new UniformsCache();const shadowCache=ShadowUniformsCache();const state={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let i=0;i<9;i++)state.probe.push(new Vector3());const vector3=new Vector3();const matrix4=new Matrix4();const matrix42=new Matrix4();function setup(lights){let r=0,g=0,b=0;for(let i=0;i<9;i++)state.probe[i].set(0,0,0);let directionalLength=0;let pointLength=0;let spotLength=0;let rectAreaLength=0;let hemiLength=0;let numDirectionalShadows=0;let numPointShadows=0;let numSpotShadows=0;lights.sort(shadowCastingLightsFirst);for(let i=0,l=lights.length;i<l;i++){const light=lights[i];const color=light.color;const intensity=light.intensity;const distance=light.distance;const shadowMap=light.shadow&&light.shadow.map?light.shadow.map.texture:null;if(light.isAmbientLight){r+=color.r*intensity;g+=color.g*intensity;b+=color.b*intensity;}else if(light.isLightProbe){for(let j=0;j<9;j++){state.probe[j].addScaledVector(light.sh.coefficients[j],intensity);}}else if(light.isDirectionalLight){const uniforms=cache.get(light);uniforms.color.copy(light.color).multiplyScalar(light.intensity);if(light.castShadow){const shadow=light.shadow;const shadowUniforms=shadowCache.get(light);shadowUniforms.shadowBias=shadow.bias;shadowUniforms.shadowNormalBias=shadow.normalBias;shadowUniforms.shadowRadius=shadow.radius;shadowUniforms.shadowMapSize=shadow.mapSize;state.directionalShadow[directionalLength]=shadowUniforms;state.directionalShadowMap[directionalLength]=shadowMap;state.directionalShadowMatrix[directionalLength]=light.shadow.matrix;numDirectionalShadows++;}state.directional[directionalLength]=uniforms;directionalLength++;}else if(light.isSpotLight){const uniforms=cache.get(light);uniforms.position.setFromMatrixPosition(light.matrixWorld);uniforms.color.copy(color).multiplyScalar(intensity);uniforms.distance=distance;uniforms.coneCos=Math.cos(light.angle);uniforms.penumbraCos=Math.cos(light.angle*(1-light.penumbra));uniforms.decay=light.decay;if(light.castShadow){const shadow=light.shadow;const shadowUniforms=shadowCache.get(light);shadowUniforms.shadowBias=shadow.bias;shadowUniforms.shadowNormalBias=shadow.normalBias;shadowUniforms.shadowRadius=shadow.radius;shadowUniforms.shadowMapSize=shadow.mapSize;state.spotShadow[spotLength]=shadowUniforms;state.spotShadowMap[spotLength]=shadowMap;state.spotShadowMatrix[spotLength]=light.shadow.matrix;numSpotShadows++;}state.spot[spotLength]=uniforms;spotLength++;}else if(light.isRectAreaLight){const uniforms=cache.get(light);// (a) intensity is the total visible light emitted\n//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n// (b) intensity is the brightness of the light\nuniforms.color.copy(color).multiplyScalar(intensity);uniforms.halfWidth.set(light.width*0.5,0.0,0.0);uniforms.halfHeight.set(0.0,light.height*0.5,0.0);state.rectArea[rectAreaLength]=uniforms;rectAreaLength++;}else if(light.isPointLight){const uniforms=cache.get(light);uniforms.color.copy(light.color).multiplyScalar(light.intensity);uniforms.distance=light.distance;uniforms.decay=light.decay;if(light.castShadow){const shadow=light.shadow;const shadowUniforms=shadowCache.get(light);shadowUniforms.shadowBias=shadow.bias;shadowUniforms.shadowNormalBias=shadow.normalBias;shadowUniforms.shadowRadius=shadow.radius;shadowUniforms.shadowMapSize=shadow.mapSize;shadowUniforms.shadowCameraNear=shadow.camera.near;shadowUniforms.shadowCameraFar=shadow.camera.far;state.pointShadow[pointLength]=shadowUniforms;state.pointShadowMap[pointLength]=shadowMap;state.pointShadowMatrix[pointLength]=light.shadow.matrix;numPointShadows++;}state.point[pointLength]=uniforms;pointLength++;}else if(light.isHemisphereLight){const uniforms=cache.get(light);uniforms.skyColor.copy(light.color).multiplyScalar(intensity);uniforms.groundColor.copy(light.groundColor).multiplyScalar(intensity);state.hemi[hemiLength]=uniforms;hemiLength++;}}if(rectAreaLength>0){if(capabilities.isWebGL2){// WebGL 2\nstate.rectAreaLTC1=UniformsLib.LTC_FLOAT_1;state.rectAreaLTC2=UniformsLib.LTC_FLOAT_2;}else{// WebGL 1\nif(extensions.has('OES_texture_float_linear')===true){state.rectAreaLTC1=UniformsLib.LTC_FLOAT_1;state.rectAreaLTC2=UniformsLib.LTC_FLOAT_2;}else if(extensions.has('OES_texture_half_float_linear')===true){state.rectAreaLTC1=UniformsLib.LTC_HALF_1;state.rectAreaLTC2=UniformsLib.LTC_HALF_2;}else{console.error('THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.');}}}state.ambient[0]=r;state.ambient[1]=g;state.ambient[2]=b;const hash=state.hash;if(hash.directionalLength!==directionalLength||hash.pointLength!==pointLength||hash.spotLength!==spotLength||hash.rectAreaLength!==rectAreaLength||hash.hemiLength!==hemiLength||hash.numDirectionalShadows!==numDirectionalShadows||hash.numPointShadows!==numPointShadows||hash.numSpotShadows!==numSpotShadows){state.directional.length=directionalLength;state.spot.length=spotLength;state.rectArea.length=rectAreaLength;state.point.length=pointLength;state.hemi.length=hemiLength;state.directionalShadow.length=numDirectionalShadows;state.directionalShadowMap.length=numDirectionalShadows;state.pointShadow.length=numPointShadows;state.pointShadowMap.length=numPointShadows;state.spotShadow.length=numSpotShadows;state.spotShadowMap.length=numSpotShadows;state.directionalShadowMatrix.length=numDirectionalShadows;state.pointShadowMatrix.length=numPointShadows;state.spotShadowMatrix.length=numSpotShadows;hash.directionalLength=directionalLength;hash.pointLength=pointLength;hash.spotLength=spotLength;hash.rectAreaLength=rectAreaLength;hash.hemiLength=hemiLength;hash.numDirectionalShadows=numDirectionalShadows;hash.numPointShadows=numPointShadows;hash.numSpotShadows=numSpotShadows;state.version=nextVersion++;}}function setupView(lights,camera){let directionalLength=0;let pointLength=0;let spotLength=0;let rectAreaLength=0;let hemiLength=0;const viewMatrix=camera.matrixWorldInverse;for(let i=0,l=lights.length;i<l;i++){const light=lights[i];if(light.isDirectionalLight){const uniforms=state.directional[directionalLength];uniforms.direction.setFromMatrixPosition(light.matrixWorld);vector3.setFromMatrixPosition(light.target.matrixWorld);uniforms.direction.sub(vector3);uniforms.direction.transformDirection(viewMatrix);directionalLength++;}else if(light.isSpotLight){const uniforms=state.spot[spotLength];uniforms.position.setFromMatrixPosition(light.matrixWorld);uniforms.position.applyMatrix4(viewMatrix);uniforms.direction.setFromMatrixPosition(light.matrixWorld);vector3.setFromMatrixPosition(light.target.matrixWorld);uniforms.direction.sub(vector3);uniforms.direction.transformDirection(viewMatrix);spotLength++;}else if(light.isRectAreaLight){const uniforms=state.rectArea[rectAreaLength];uniforms.position.setFromMatrixPosition(light.matrixWorld);uniforms.position.applyMatrix4(viewMatrix);// extract local rotation of light to derive width/height half vectors\nmatrix42.identity();matrix4.copy(light.matrixWorld);matrix4.premultiply(viewMatrix);matrix42.extractRotation(matrix4);uniforms.halfWidth.set(light.width*0.5,0.0,0.0);uniforms.halfHeight.set(0.0,light.height*0.5,0.0);uniforms.halfWidth.applyMatrix4(matrix42);uniforms.halfHeight.applyMatrix4(matrix42);rectAreaLength++;}else if(light.isPointLight){const uniforms=state.point[pointLength];uniforms.position.setFromMatrixPosition(light.matrixWorld);uniforms.position.applyMatrix4(viewMatrix);pointLength++;}else if(light.isHemisphereLight){const uniforms=state.hemi[hemiLength];uniforms.direction.setFromMatrixPosition(light.matrixWorld);uniforms.direction.transformDirection(viewMatrix);uniforms.direction.normalize();hemiLength++;}}}return{setup:setup,setupView:setupView,state:state};}function WebGLRenderState(extensions,capabilities){const lights=new WebGLLights(extensions,capabilities);const lightsArray=[];const shadowsArray=[];function init(){lightsArray.length=0;shadowsArray.length=0;}function pushLight(light){lightsArray.push(light);}function pushShadow(shadowLight){shadowsArray.push(shadowLight);}function setupLights(){lights.setup(lightsArray);}function setupLightsView(camera){lights.setupView(lightsArray,camera);}const state={lightsArray:lightsArray,shadowsArray:shadowsArray,lights:lights};return{init:init,state:state,setupLights:setupLights,setupLightsView:setupLightsView,pushLight:pushLight,pushShadow:pushShadow};}function WebGLRenderStates(extensions,capabilities){let renderStates=new WeakMap();function get(scene,renderCallDepth=0){let renderState;if(renderStates.has(scene)===false){renderState=new WebGLRenderState(extensions,capabilities);renderStates.set(scene,[]);renderStates.get(scene).push(renderState);}else{if(renderCallDepth>=renderStates.get(scene).length){renderState=new WebGLRenderState(extensions,capabilities);renderStates.get(scene).push(renderState);}else{renderState=renderStates.get(scene)[renderCallDepth];}}return renderState;}function dispose(){renderStates=new WeakMap();}return{get:get,dispose:dispose};}/**\n * parameters = {\n *\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */function MeshDepthMaterial(parameters){Material.call(this);this.type='MeshDepthMaterial';this.depthPacking=BasicDepthPacking;this.skinning=false;this.morphTargets=false;this.map=null;this.alphaMap=null;this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.wireframe=false;this.wireframeLinewidth=1;this.fog=false;this.setValues(parameters);}MeshDepthMaterial.prototype=Object.create(Material.prototype);MeshDepthMaterial.prototype.constructor=MeshDepthMaterial;MeshDepthMaterial.prototype.isMeshDepthMaterial=true;MeshDepthMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.depthPacking=source.depthPacking;this.skinning=source.skinning;this.morphTargets=source.morphTargets;this.map=source.map;this.alphaMap=source.alphaMap;this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;return this;};/**\n * parameters = {\n *\n *  referencePosition: <float>,\n *  nearDistance: <float>,\n *  farDistance: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>\n *\n * }\n */function MeshDistanceMaterial(parameters){Material.call(this);this.type='MeshDistanceMaterial';this.referencePosition=new Vector3();this.nearDistance=1;this.farDistance=1000;this.skinning=false;this.morphTargets=false;this.map=null;this.alphaMap=null;this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.fog=false;this.setValues(parameters);}MeshDistanceMaterial.prototype=Object.create(Material.prototype);MeshDistanceMaterial.prototype.constructor=MeshDistanceMaterial;MeshDistanceMaterial.prototype.isMeshDistanceMaterial=true;MeshDistanceMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.referencePosition.copy(source.referencePosition);this.nearDistance=source.nearDistance;this.farDistance=source.farDistance;this.skinning=source.skinning;this.morphTargets=source.morphTargets;this.map=source.map;this.alphaMap=source.alphaMap;this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;return this;};var vsm_frag=\"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\\n\\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean * HALF_SAMPLE_RATE;\\n\\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";var vsm_vert=\"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";function WebGLShadowMap(_renderer,_objects,maxTextureSize){let _frustum=new Frustum();const _shadowMapSize=new Vector2(),_viewportSize=new Vector2(),_viewport=new Vector4(),_depthMaterials=[],_distanceMaterials=[],_materialCache={};const shadowSide={0:BackSide,1:FrontSide,2:DoubleSide};const shadowMaterialVertical=new ShaderMaterial({defines:{SAMPLE_RATE:2.0/8.0,HALF_SAMPLE_RATE:1.0/8.0},uniforms:{shadow_pass:{value:null},resolution:{value:new Vector2()},radius:{value:4.0}},vertexShader:vsm_vert,fragmentShader:vsm_frag});const shadowMaterialHorizontal=shadowMaterialVertical.clone();shadowMaterialHorizontal.defines.HORIZONTAL_PASS=1;const fullScreenTri=new BufferGeometry();fullScreenTri.setAttribute('position',new BufferAttribute(new Float32Array([-1,-1,0.5,3,-1,0.5,-1,3,0.5]),3));const fullScreenMesh=new Mesh(fullScreenTri,shadowMaterialVertical);const scope=this;this.enabled=false;this.autoUpdate=true;this.needsUpdate=false;this.type=PCFShadowMap;this.render=function(lights,scene,camera){if(scope.enabled===false)return;if(scope.autoUpdate===false&&scope.needsUpdate===false)return;if(lights.length===0)return;const currentRenderTarget=_renderer.getRenderTarget();const activeCubeFace=_renderer.getActiveCubeFace();const activeMipmapLevel=_renderer.getActiveMipmapLevel();const _state=_renderer.state;// Set GL state for depth map.\n_state.setBlending(NoBlending);_state.buffers.color.setClear(1,1,1,1);_state.buffers.depth.setTest(true);_state.setScissorTest(false);// render depth map\nfor(let i=0,il=lights.length;i<il;i++){const light=lights[i];const shadow=light.shadow;if(shadow===undefined){console.warn('THREE.WebGLShadowMap:',light,'has no shadow.');continue;}if(shadow.autoUpdate===false&&shadow.needsUpdate===false)continue;_shadowMapSize.copy(shadow.mapSize);const shadowFrameExtents=shadow.getFrameExtents();_shadowMapSize.multiply(shadowFrameExtents);_viewportSize.copy(shadow.mapSize);if(_shadowMapSize.x>maxTextureSize||_shadowMapSize.y>maxTextureSize){if(_shadowMapSize.x>maxTextureSize){_viewportSize.x=Math.floor(maxTextureSize/shadowFrameExtents.x);_shadowMapSize.x=_viewportSize.x*shadowFrameExtents.x;shadow.mapSize.x=_viewportSize.x;}if(_shadowMapSize.y>maxTextureSize){_viewportSize.y=Math.floor(maxTextureSize/shadowFrameExtents.y);_shadowMapSize.y=_viewportSize.y*shadowFrameExtents.y;shadow.mapSize.y=_viewportSize.y;}}if(shadow.map===null&&!shadow.isPointLightShadow&&this.type===VSMShadowMap){const pars={minFilter:LinearFilter,magFilter:LinearFilter,format:RGBAFormat};shadow.map=new WebGLRenderTarget(_shadowMapSize.x,_shadowMapSize.y,pars);shadow.map.texture.name=light.name+'.shadowMap';shadow.mapPass=new WebGLRenderTarget(_shadowMapSize.x,_shadowMapSize.y,pars);shadow.camera.updateProjectionMatrix();}if(shadow.map===null){const pars={minFilter:NearestFilter,magFilter:NearestFilter,format:RGBAFormat};shadow.map=new WebGLRenderTarget(_shadowMapSize.x,_shadowMapSize.y,pars);shadow.map.texture.name=light.name+'.shadowMap';shadow.camera.updateProjectionMatrix();}_renderer.setRenderTarget(shadow.map);_renderer.clear();const viewportCount=shadow.getViewportCount();for(let vp=0;vp<viewportCount;vp++){const viewport=shadow.getViewport(vp);_viewport.set(_viewportSize.x*viewport.x,_viewportSize.y*viewport.y,_viewportSize.x*viewport.z,_viewportSize.y*viewport.w);_state.viewport(_viewport);shadow.updateMatrices(light,vp);_frustum=shadow.getFrustum();renderObject(scene,camera,shadow.camera,light,this.type);}// do blur pass for VSM\nif(!shadow.isPointLightShadow&&this.type===VSMShadowMap){VSMPass(shadow,camera);}shadow.needsUpdate=false;}scope.needsUpdate=false;_renderer.setRenderTarget(currentRenderTarget,activeCubeFace,activeMipmapLevel);};function VSMPass(shadow,camera){const geometry=_objects.update(fullScreenMesh);// vertical pass\nshadowMaterialVertical.uniforms.shadow_pass.value=shadow.map.texture;shadowMaterialVertical.uniforms.resolution.value=shadow.mapSize;shadowMaterialVertical.uniforms.radius.value=shadow.radius;_renderer.setRenderTarget(shadow.mapPass);_renderer.clear();_renderer.renderBufferDirect(camera,null,geometry,shadowMaterialVertical,fullScreenMesh,null);// horizontal pass\nshadowMaterialHorizontal.uniforms.shadow_pass.value=shadow.mapPass.texture;shadowMaterialHorizontal.uniforms.resolution.value=shadow.mapSize;shadowMaterialHorizontal.uniforms.radius.value=shadow.radius;_renderer.setRenderTarget(shadow.map);_renderer.clear();_renderer.renderBufferDirect(camera,null,geometry,shadowMaterialHorizontal,fullScreenMesh,null);}function getDepthMaterialVariant(useMorphing,useSkinning,useInstancing){const index=useMorphing<<0|useSkinning<<1|useInstancing<<2;let material=_depthMaterials[index];if(material===undefined){material=new MeshDepthMaterial({depthPacking:RGBADepthPacking,morphTargets:useMorphing,skinning:useSkinning});_depthMaterials[index]=material;}return material;}function getDistanceMaterialVariant(useMorphing,useSkinning,useInstancing){const index=useMorphing<<0|useSkinning<<1|useInstancing<<2;let material=_distanceMaterials[index];if(material===undefined){material=new MeshDistanceMaterial({morphTargets:useMorphing,skinning:useSkinning});_distanceMaterials[index]=material;}return material;}function getDepthMaterial(object,geometry,material,light,shadowCameraNear,shadowCameraFar,type){let result=null;let getMaterialVariant=getDepthMaterialVariant;let customMaterial=object.customDepthMaterial;if(light.isPointLight===true){getMaterialVariant=getDistanceMaterialVariant;customMaterial=object.customDistanceMaterial;}if(customMaterial===undefined){let useMorphing=false;if(material.morphTargets===true){useMorphing=geometry.morphAttributes&&geometry.morphAttributes.position&&geometry.morphAttributes.position.length>0;}let useSkinning=false;if(object.isSkinnedMesh===true){if(material.skinning===true){useSkinning=true;}else{console.warn('THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:',object);}}const useInstancing=object.isInstancedMesh===true;result=getMaterialVariant(useMorphing,useSkinning,useInstancing);}else{result=customMaterial;}if(_renderer.localClippingEnabled&&material.clipShadows===true&&material.clippingPlanes.length!==0){// in this case we need a unique material instance reflecting the\n// appropriate state\nconst keyA=result.uuid,keyB=material.uuid;let materialsForVariant=_materialCache[keyA];if(materialsForVariant===undefined){materialsForVariant={};_materialCache[keyA]=materialsForVariant;}let cachedMaterial=materialsForVariant[keyB];if(cachedMaterial===undefined){cachedMaterial=result.clone();materialsForVariant[keyB]=cachedMaterial;}result=cachedMaterial;}result.visible=material.visible;result.wireframe=material.wireframe;if(type===VSMShadowMap){result.side=material.shadowSide!==null?material.shadowSide:material.side;}else{result.side=material.shadowSide!==null?material.shadowSide:shadowSide[material.side];}result.clipShadows=material.clipShadows;result.clippingPlanes=material.clippingPlanes;result.clipIntersection=material.clipIntersection;result.wireframeLinewidth=material.wireframeLinewidth;result.linewidth=material.linewidth;if(light.isPointLight===true&&result.isMeshDistanceMaterial===true){result.referencePosition.setFromMatrixPosition(light.matrixWorld);result.nearDistance=shadowCameraNear;result.farDistance=shadowCameraFar;}return result;}function renderObject(object,camera,shadowCamera,light,type){if(object.visible===false)return;const visible=object.layers.test(camera.layers);if(visible&&(object.isMesh||object.isLine||object.isPoints)){if((object.castShadow||object.receiveShadow&&type===VSMShadowMap)&&(!object.frustumCulled||_frustum.intersectsObject(object))){object.modelViewMatrix.multiplyMatrices(shadowCamera.matrixWorldInverse,object.matrixWorld);const geometry=_objects.update(object);const material=object.material;if(Array.isArray(material)){const groups=geometry.groups;for(let k=0,kl=groups.length;k<kl;k++){const group=groups[k];const groupMaterial=material[group.materialIndex];if(groupMaterial&&groupMaterial.visible){const depthMaterial=getDepthMaterial(object,geometry,groupMaterial,light,shadowCamera.near,shadowCamera.far,type);_renderer.renderBufferDirect(shadowCamera,null,geometry,depthMaterial,object,group);}}}else if(material.visible){const depthMaterial=getDepthMaterial(object,geometry,material,light,shadowCamera.near,shadowCamera.far,type);_renderer.renderBufferDirect(shadowCamera,null,geometry,depthMaterial,object,null);}}}const children=object.children;for(let i=0,l=children.length;i<l;i++){renderObject(children[i],camera,shadowCamera,light,type);}}}function WebGLState(gl,extensions,capabilities){const isWebGL2=capabilities.isWebGL2;function ColorBuffer(){let locked=false;const color=new Vector4();let currentColorMask=null;const currentColorClear=new Vector4(0,0,0,0);return{setMask:function(colorMask){if(currentColorMask!==colorMask&&!locked){gl.colorMask(colorMask,colorMask,colorMask,colorMask);currentColorMask=colorMask;}},setLocked:function(lock){locked=lock;},setClear:function(r,g,b,a,premultipliedAlpha){if(premultipliedAlpha===true){r*=a;g*=a;b*=a;}color.set(r,g,b,a);if(currentColorClear.equals(color)===false){gl.clearColor(r,g,b,a);currentColorClear.copy(color);}},reset:function(){locked=false;currentColorMask=null;currentColorClear.set(-1,0,0,0);// set to invalid state\n}};}function DepthBuffer(){let locked=false;let currentDepthMask=null;let currentDepthFunc=null;let currentDepthClear=null;return{setTest:function(depthTest){if(depthTest){enable(2929);}else{disable(2929);}},setMask:function(depthMask){if(currentDepthMask!==depthMask&&!locked){gl.depthMask(depthMask);currentDepthMask=depthMask;}},setFunc:function(depthFunc){if(currentDepthFunc!==depthFunc){if(depthFunc){switch(depthFunc){case NeverDepth:gl.depthFunc(512);break;case AlwaysDepth:gl.depthFunc(519);break;case LessDepth:gl.depthFunc(513);break;case LessEqualDepth:gl.depthFunc(515);break;case EqualDepth:gl.depthFunc(514);break;case GreaterEqualDepth:gl.depthFunc(518);break;case GreaterDepth:gl.depthFunc(516);break;case NotEqualDepth:gl.depthFunc(517);break;default:gl.depthFunc(515);}}else{gl.depthFunc(515);}currentDepthFunc=depthFunc;}},setLocked:function(lock){locked=lock;},setClear:function(depth){if(currentDepthClear!==depth){gl.clearDepth(depth);currentDepthClear=depth;}},reset:function(){locked=false;currentDepthMask=null;currentDepthFunc=null;currentDepthClear=null;}};}function StencilBuffer(){let locked=false;let currentStencilMask=null;let currentStencilFunc=null;let currentStencilRef=null;let currentStencilFuncMask=null;let currentStencilFail=null;let currentStencilZFail=null;let currentStencilZPass=null;let currentStencilClear=null;return{setTest:function(stencilTest){if(!locked){if(stencilTest){enable(2960);}else{disable(2960);}}},setMask:function(stencilMask){if(currentStencilMask!==stencilMask&&!locked){gl.stencilMask(stencilMask);currentStencilMask=stencilMask;}},setFunc:function(stencilFunc,stencilRef,stencilMask){if(currentStencilFunc!==stencilFunc||currentStencilRef!==stencilRef||currentStencilFuncMask!==stencilMask){gl.stencilFunc(stencilFunc,stencilRef,stencilMask);currentStencilFunc=stencilFunc;currentStencilRef=stencilRef;currentStencilFuncMask=stencilMask;}},setOp:function(stencilFail,stencilZFail,stencilZPass){if(currentStencilFail!==stencilFail||currentStencilZFail!==stencilZFail||currentStencilZPass!==stencilZPass){gl.stencilOp(stencilFail,stencilZFail,stencilZPass);currentStencilFail=stencilFail;currentStencilZFail=stencilZFail;currentStencilZPass=stencilZPass;}},setLocked:function(lock){locked=lock;},setClear:function(stencil){if(currentStencilClear!==stencil){gl.clearStencil(stencil);currentStencilClear=stencil;}},reset:function(){locked=false;currentStencilMask=null;currentStencilFunc=null;currentStencilRef=null;currentStencilFuncMask=null;currentStencilFail=null;currentStencilZFail=null;currentStencilZPass=null;currentStencilClear=null;}};}//\nconst colorBuffer=new ColorBuffer();const depthBuffer=new DepthBuffer();const stencilBuffer=new StencilBuffer();let enabledCapabilities={};let currentProgram=null;let currentBlendingEnabled=null;let currentBlending=null;let currentBlendEquation=null;let currentBlendSrc=null;let currentBlendDst=null;let currentBlendEquationAlpha=null;let currentBlendSrcAlpha=null;let currentBlendDstAlpha=null;let currentPremultipledAlpha=false;let currentFlipSided=null;let currentCullFace=null;let currentLineWidth=null;let currentPolygonOffsetFactor=null;let currentPolygonOffsetUnits=null;const maxTextures=gl.getParameter(35661);let lineWidthAvailable=false;let version=0;const glVersion=gl.getParameter(7938);if(glVersion.indexOf('WebGL')!==-1){version=parseFloat(/^WebGL (\\d)/.exec(glVersion)[1]);lineWidthAvailable=version>=1.0;}else if(glVersion.indexOf('OpenGL ES')!==-1){version=parseFloat(/^OpenGL ES (\\d)/.exec(glVersion)[1]);lineWidthAvailable=version>=2.0;}let currentTextureSlot=null;let currentBoundTextures={};const currentScissor=new Vector4();const currentViewport=new Vector4();function createTexture(type,target,count){const data=new Uint8Array(4);// 4 is required to match default unpack alignment of 4.\nconst texture=gl.createTexture();gl.bindTexture(type,texture);gl.texParameteri(type,10241,9728);gl.texParameteri(type,10240,9728);for(let i=0;i<count;i++){gl.texImage2D(target+i,0,6408,1,1,0,6408,5121,data);}return texture;}const emptyTextures={};emptyTextures[3553]=createTexture(3553,3553,1);emptyTextures[34067]=createTexture(34067,34069,6);// init\ncolorBuffer.setClear(0,0,0,1);depthBuffer.setClear(1);stencilBuffer.setClear(0);enable(2929);depthBuffer.setFunc(LessEqualDepth);setFlipSided(false);setCullFace(CullFaceBack);enable(2884);setBlending(NoBlending);//\nfunction enable(id){if(enabledCapabilities[id]!==true){gl.enable(id);enabledCapabilities[id]=true;}}function disable(id){if(enabledCapabilities[id]!==false){gl.disable(id);enabledCapabilities[id]=false;}}function useProgram(program){if(currentProgram!==program){gl.useProgram(program);currentProgram=program;return true;}return false;}const equationToGL={[AddEquation]:32774,[SubtractEquation]:32778,[ReverseSubtractEquation]:32779};if(isWebGL2){equationToGL[MinEquation]=32775;equationToGL[MaxEquation]=32776;}else{const extension=extensions.get('EXT_blend_minmax');if(extension!==null){equationToGL[MinEquation]=extension.MIN_EXT;equationToGL[MaxEquation]=extension.MAX_EXT;}}const factorToGL={[ZeroFactor]:0,[OneFactor]:1,[SrcColorFactor]:768,[SrcAlphaFactor]:770,[SrcAlphaSaturateFactor]:776,[DstColorFactor]:774,[DstAlphaFactor]:772,[OneMinusSrcColorFactor]:769,[OneMinusSrcAlphaFactor]:771,[OneMinusDstColorFactor]:775,[OneMinusDstAlphaFactor]:773};function setBlending(blending,blendEquation,blendSrc,blendDst,blendEquationAlpha,blendSrcAlpha,blendDstAlpha,premultipliedAlpha){if(blending===NoBlending){if(currentBlendingEnabled){disable(3042);currentBlendingEnabled=false;}return;}if(!currentBlendingEnabled){enable(3042);currentBlendingEnabled=true;}if(blending!==CustomBlending){if(blending!==currentBlending||premultipliedAlpha!==currentPremultipledAlpha){if(currentBlendEquation!==AddEquation||currentBlendEquationAlpha!==AddEquation){gl.blendEquation(32774);currentBlendEquation=AddEquation;currentBlendEquationAlpha=AddEquation;}if(premultipliedAlpha){switch(blending){case NormalBlending:gl.blendFuncSeparate(1,771,1,771);break;case AdditiveBlending:gl.blendFunc(1,1);break;case SubtractiveBlending:gl.blendFuncSeparate(0,0,769,771);break;case MultiplyBlending:gl.blendFuncSeparate(0,768,0,770);break;default:console.error('THREE.WebGLState: Invalid blending: ',blending);break;}}else{switch(blending){case NormalBlending:gl.blendFuncSeparate(770,771,1,771);break;case AdditiveBlending:gl.blendFunc(770,1);break;case SubtractiveBlending:gl.blendFunc(0,769);break;case MultiplyBlending:gl.blendFunc(0,768);break;default:console.error('THREE.WebGLState: Invalid blending: ',blending);break;}}currentBlendSrc=null;currentBlendDst=null;currentBlendSrcAlpha=null;currentBlendDstAlpha=null;currentBlending=blending;currentPremultipledAlpha=premultipliedAlpha;}return;}// custom blending\nblendEquationAlpha=blendEquationAlpha||blendEquation;blendSrcAlpha=blendSrcAlpha||blendSrc;blendDstAlpha=blendDstAlpha||blendDst;if(blendEquation!==currentBlendEquation||blendEquationAlpha!==currentBlendEquationAlpha){gl.blendEquationSeparate(equationToGL[blendEquation],equationToGL[blendEquationAlpha]);currentBlendEquation=blendEquation;currentBlendEquationAlpha=blendEquationAlpha;}if(blendSrc!==currentBlendSrc||blendDst!==currentBlendDst||blendSrcAlpha!==currentBlendSrcAlpha||blendDstAlpha!==currentBlendDstAlpha){gl.blendFuncSeparate(factorToGL[blendSrc],factorToGL[blendDst],factorToGL[blendSrcAlpha],factorToGL[blendDstAlpha]);currentBlendSrc=blendSrc;currentBlendDst=blendDst;currentBlendSrcAlpha=blendSrcAlpha;currentBlendDstAlpha=blendDstAlpha;}currentBlending=blending;currentPremultipledAlpha=null;}function setMaterial(material,frontFaceCW){material.side===DoubleSide?disable(2884):enable(2884);let flipSided=material.side===BackSide;if(frontFaceCW)flipSided=!flipSided;setFlipSided(flipSided);material.blending===NormalBlending&&material.transparent===false?setBlending(NoBlending):setBlending(material.blending,material.blendEquation,material.blendSrc,material.blendDst,material.blendEquationAlpha,material.blendSrcAlpha,material.blendDstAlpha,material.premultipliedAlpha);depthBuffer.setFunc(material.depthFunc);depthBuffer.setTest(material.depthTest);depthBuffer.setMask(material.depthWrite);colorBuffer.setMask(material.colorWrite);const stencilWrite=material.stencilWrite;stencilBuffer.setTest(stencilWrite);if(stencilWrite){stencilBuffer.setMask(material.stencilWriteMask);stencilBuffer.setFunc(material.stencilFunc,material.stencilRef,material.stencilFuncMask);stencilBuffer.setOp(material.stencilFail,material.stencilZFail,material.stencilZPass);}setPolygonOffset(material.polygonOffset,material.polygonOffsetFactor,material.polygonOffsetUnits);}//\nfunction setFlipSided(flipSided){if(currentFlipSided!==flipSided){if(flipSided){gl.frontFace(2304);}else{gl.frontFace(2305);}currentFlipSided=flipSided;}}function setCullFace(cullFace){if(cullFace!==CullFaceNone){enable(2884);if(cullFace!==currentCullFace){if(cullFace===CullFaceBack){gl.cullFace(1029);}else if(cullFace===CullFaceFront){gl.cullFace(1028);}else{gl.cullFace(1032);}}}else{disable(2884);}currentCullFace=cullFace;}function setLineWidth(width){if(width!==currentLineWidth){if(lineWidthAvailable)gl.lineWidth(width);currentLineWidth=width;}}function setPolygonOffset(polygonOffset,factor,units){if(polygonOffset){enable(32823);if(currentPolygonOffsetFactor!==factor||currentPolygonOffsetUnits!==units){gl.polygonOffset(factor,units);currentPolygonOffsetFactor=factor;currentPolygonOffsetUnits=units;}}else{disable(32823);}}function setScissorTest(scissorTest){if(scissorTest){enable(3089);}else{disable(3089);}}// texture\nfunction activeTexture(webglSlot){if(webglSlot===undefined)webglSlot=33984+maxTextures-1;if(currentTextureSlot!==webglSlot){gl.activeTexture(webglSlot);currentTextureSlot=webglSlot;}}function bindTexture(webglType,webglTexture){if(currentTextureSlot===null){activeTexture();}let boundTexture=currentBoundTextures[currentTextureSlot];if(boundTexture===undefined){boundTexture={type:undefined,texture:undefined};currentBoundTextures[currentTextureSlot]=boundTexture;}if(boundTexture.type!==webglType||boundTexture.texture!==webglTexture){gl.bindTexture(webglType,webglTexture||emptyTextures[webglType]);boundTexture.type=webglType;boundTexture.texture=webglTexture;}}function unbindTexture(){const boundTexture=currentBoundTextures[currentTextureSlot];if(boundTexture!==undefined&&boundTexture.type!==undefined){gl.bindTexture(boundTexture.type,null);boundTexture.type=undefined;boundTexture.texture=undefined;}}function compressedTexImage2D(){try{gl.compressedTexImage2D.apply(gl,arguments);}catch(error){console.error('THREE.WebGLState:',error);}}function texImage2D(){try{gl.texImage2D.apply(gl,arguments);}catch(error){console.error('THREE.WebGLState:',error);}}function texImage3D(){try{gl.texImage3D.apply(gl,arguments);}catch(error){console.error('THREE.WebGLState:',error);}}//\nfunction scissor(scissor){if(currentScissor.equals(scissor)===false){gl.scissor(scissor.x,scissor.y,scissor.z,scissor.w);currentScissor.copy(scissor);}}function viewport(viewport){if(currentViewport.equals(viewport)===false){gl.viewport(viewport.x,viewport.y,viewport.z,viewport.w);currentViewport.copy(viewport);}}//\nfunction reset(){enabledCapabilities={};currentTextureSlot=null;currentBoundTextures={};currentProgram=null;currentBlendingEnabled=null;currentBlending=null;currentBlendEquation=null;currentBlendSrc=null;currentBlendDst=null;currentBlendEquationAlpha=null;currentBlendSrcAlpha=null;currentBlendDstAlpha=null;currentPremultipledAlpha=false;currentFlipSided=null;currentCullFace=null;currentLineWidth=null;currentPolygonOffsetFactor=null;currentPolygonOffsetUnits=null;colorBuffer.reset();depthBuffer.reset();stencilBuffer.reset();}return{buffers:{color:colorBuffer,depth:depthBuffer,stencil:stencilBuffer},enable:enable,disable:disable,useProgram:useProgram,setBlending:setBlending,setMaterial:setMaterial,setFlipSided:setFlipSided,setCullFace:setCullFace,setLineWidth:setLineWidth,setPolygonOffset:setPolygonOffset,setScissorTest:setScissorTest,activeTexture:activeTexture,bindTexture:bindTexture,unbindTexture:unbindTexture,compressedTexImage2D:compressedTexImage2D,texImage2D:texImage2D,texImage3D:texImage3D,scissor:scissor,viewport:viewport,reset:reset};}function WebGLTextures(_gl,extensions,state,properties,capabilities,utils,info){const isWebGL2=capabilities.isWebGL2;const maxTextures=capabilities.maxTextures;const maxCubemapSize=capabilities.maxCubemapSize;const maxTextureSize=capabilities.maxTextureSize;const maxSamples=capabilities.maxSamples;const _videoTextures=new WeakMap();let _canvas;// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\nlet useOffscreenCanvas=false;try{useOffscreenCanvas=typeof OffscreenCanvas!=='undefined'&&new OffscreenCanvas(1,1).getContext('2d')!==null;}catch(err){// Ignore any errors\n}function createCanvas(width,height){// Use OffscreenCanvas when available. Specially needed in web workers\nreturn useOffscreenCanvas?new OffscreenCanvas(width,height):document.createElementNS('http://www.w3.org/1999/xhtml','canvas');}function resizeImage(image,needsPowerOfTwo,needsNewCanvas,maxSize){let scale=1;// handle case if texture exceeds max size\nif(image.width>maxSize||image.height>maxSize){scale=maxSize/Math.max(image.width,image.height);}// only perform resize if necessary\nif(scale<1||needsPowerOfTwo===true){// only perform resize for certain image types\nif(typeof HTMLImageElement!=='undefined'&&image instanceof HTMLImageElement||typeof HTMLCanvasElement!=='undefined'&&image instanceof HTMLCanvasElement||typeof ImageBitmap!=='undefined'&&image instanceof ImageBitmap){const floor=needsPowerOfTwo?MathUtils.floorPowerOfTwo:Math.floor;const width=floor(scale*image.width);const height=floor(scale*image.height);if(_canvas===undefined)_canvas=createCanvas(width,height);// cube textures can't reuse the same canvas\nconst canvas=needsNewCanvas?createCanvas(width,height):_canvas;canvas.width=width;canvas.height=height;const context=canvas.getContext('2d');context.drawImage(image,0,0,width,height);console.warn('THREE.WebGLRenderer: Texture has been resized from ('+image.width+'x'+image.height+') to ('+width+'x'+height+').');return canvas;}else{if('data'in image){console.warn('THREE.WebGLRenderer: Image in DataTexture is too big ('+image.width+'x'+image.height+').');}return image;}}return image;}function isPowerOfTwo(image){return MathUtils.isPowerOfTwo(image.width)&&MathUtils.isPowerOfTwo(image.height);}function textureNeedsPowerOfTwo(texture){if(isWebGL2)return false;return texture.wrapS!==ClampToEdgeWrapping||texture.wrapT!==ClampToEdgeWrapping||texture.minFilter!==NearestFilter&&texture.minFilter!==LinearFilter;}function textureNeedsGenerateMipmaps(texture,supportsMips){return texture.generateMipmaps&&supportsMips&&texture.minFilter!==NearestFilter&&texture.minFilter!==LinearFilter;}function generateMipmap(target,texture,width,height){_gl.generateMipmap(target);const textureProperties=properties.get(texture);// Note: Math.log( x ) * Math.LOG2E used instead of Math.log2( x ) which is not supported by IE11\ntextureProperties.__maxMipLevel=Math.log(Math.max(width,height))*Math.LOG2E;}function getInternalFormat(internalFormatName,glFormat,glType){if(isWebGL2===false)return glFormat;if(internalFormatName!==null){if(_gl[internalFormatName]!==undefined)return _gl[internalFormatName];console.warn('THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\''+internalFormatName+'\\'');}let internalFormat=glFormat;if(glFormat===6403){if(glType===5126)internalFormat=33326;if(glType===5131)internalFormat=33325;if(glType===5121)internalFormat=33321;}if(glFormat===6407){if(glType===5126)internalFormat=34837;if(glType===5131)internalFormat=34843;if(glType===5121)internalFormat=32849;}if(glFormat===6408){if(glType===5126)internalFormat=34836;if(glType===5131)internalFormat=34842;if(glType===5121)internalFormat=32856;}if(internalFormat===33325||internalFormat===33326||internalFormat===34842||internalFormat===34836){extensions.get('EXT_color_buffer_float');}return internalFormat;}// Fallback filters for non-power-of-2 textures\nfunction filterFallback(f){if(f===NearestFilter||f===NearestMipmapNearestFilter||f===NearestMipmapLinearFilter){return 9728;}return 9729;}//\nfunction onTextureDispose(event){const texture=event.target;texture.removeEventListener('dispose',onTextureDispose);deallocateTexture(texture);if(texture.isVideoTexture){_videoTextures.delete(texture);}info.memory.textures--;}function onRenderTargetDispose(event){const renderTarget=event.target;renderTarget.removeEventListener('dispose',onRenderTargetDispose);deallocateRenderTarget(renderTarget);info.memory.textures--;}//\nfunction deallocateTexture(texture){const textureProperties=properties.get(texture);if(textureProperties.__webglInit===undefined)return;_gl.deleteTexture(textureProperties.__webglTexture);properties.remove(texture);}function deallocateRenderTarget(renderTarget){const renderTargetProperties=properties.get(renderTarget);const textureProperties=properties.get(renderTarget.texture);if(!renderTarget)return;if(textureProperties.__webglTexture!==undefined){_gl.deleteTexture(textureProperties.__webglTexture);}if(renderTarget.depthTexture){renderTarget.depthTexture.dispose();}if(renderTarget.isWebGLCubeRenderTarget){for(let i=0;i<6;i++){_gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer[i]);if(renderTargetProperties.__webglDepthbuffer)_gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer[i]);}}else{_gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer);if(renderTargetProperties.__webglDepthbuffer)_gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer);if(renderTargetProperties.__webglMultisampledFramebuffer)_gl.deleteFramebuffer(renderTargetProperties.__webglMultisampledFramebuffer);if(renderTargetProperties.__webglColorRenderbuffer)_gl.deleteRenderbuffer(renderTargetProperties.__webglColorRenderbuffer);if(renderTargetProperties.__webglDepthRenderbuffer)_gl.deleteRenderbuffer(renderTargetProperties.__webglDepthRenderbuffer);}properties.remove(renderTarget.texture);properties.remove(renderTarget);}//\nlet textureUnits=0;function resetTextureUnits(){textureUnits=0;}function allocateTextureUnit(){const textureUnit=textureUnits;if(textureUnit>=maxTextures){console.warn('THREE.WebGLTextures: Trying to use '+textureUnit+' texture units while this GPU supports only '+maxTextures);}textureUnits+=1;return textureUnit;}//\nfunction setTexture2D(texture,slot){const textureProperties=properties.get(texture);if(texture.isVideoTexture)updateVideoTexture(texture);if(texture.version>0&&textureProperties.__version!==texture.version){const image=texture.image;if(image===undefined){console.warn('THREE.WebGLRenderer: Texture marked for update but image is undefined');}else if(image.complete===false){console.warn('THREE.WebGLRenderer: Texture marked for update but image is incomplete');}else{uploadTexture(textureProperties,texture,slot);return;}}state.activeTexture(33984+slot);state.bindTexture(3553,textureProperties.__webglTexture);}function setTexture2DArray(texture,slot){const textureProperties=properties.get(texture);if(texture.version>0&&textureProperties.__version!==texture.version){uploadTexture(textureProperties,texture,slot);return;}state.activeTexture(33984+slot);state.bindTexture(35866,textureProperties.__webglTexture);}function setTexture3D(texture,slot){const textureProperties=properties.get(texture);if(texture.version>0&&textureProperties.__version!==texture.version){uploadTexture(textureProperties,texture,slot);return;}state.activeTexture(33984+slot);state.bindTexture(32879,textureProperties.__webglTexture);}function setTextureCube(texture,slot){const textureProperties=properties.get(texture);if(texture.version>0&&textureProperties.__version!==texture.version){uploadCubeTexture(textureProperties,texture,slot);return;}state.activeTexture(33984+slot);state.bindTexture(34067,textureProperties.__webglTexture);}const wrappingToGL={[RepeatWrapping]:10497,[ClampToEdgeWrapping]:33071,[MirroredRepeatWrapping]:33648};const filterToGL={[NearestFilter]:9728,[NearestMipmapNearestFilter]:9984,[NearestMipmapLinearFilter]:9986,[LinearFilter]:9729,[LinearMipmapNearestFilter]:9985,[LinearMipmapLinearFilter]:9987};function setTextureParameters(textureType,texture,supportsMips){if(supportsMips){_gl.texParameteri(textureType,10242,wrappingToGL[texture.wrapS]);_gl.texParameteri(textureType,10243,wrappingToGL[texture.wrapT]);if(textureType===32879||textureType===35866){_gl.texParameteri(textureType,32882,wrappingToGL[texture.wrapR]);}_gl.texParameteri(textureType,10240,filterToGL[texture.magFilter]);_gl.texParameteri(textureType,10241,filterToGL[texture.minFilter]);}else{_gl.texParameteri(textureType,10242,33071);_gl.texParameteri(textureType,10243,33071);if(textureType===32879||textureType===35866){_gl.texParameteri(textureType,32882,33071);}if(texture.wrapS!==ClampToEdgeWrapping||texture.wrapT!==ClampToEdgeWrapping){console.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.');}_gl.texParameteri(textureType,10240,filterFallback(texture.magFilter));_gl.texParameteri(textureType,10241,filterFallback(texture.minFilter));if(texture.minFilter!==NearestFilter&&texture.minFilter!==LinearFilter){console.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.');}}const extension=extensions.get('EXT_texture_filter_anisotropic');if(extension){if(texture.type===FloatType&&extensions.get('OES_texture_float_linear')===null)return;if(texture.type===HalfFloatType&&(isWebGL2||extensions.get('OES_texture_half_float_linear'))===null)return;if(texture.anisotropy>1||properties.get(texture).__currentAnisotropy){_gl.texParameterf(textureType,extension.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(texture.anisotropy,capabilities.getMaxAnisotropy()));properties.get(texture).__currentAnisotropy=texture.anisotropy;}}}function initTexture(textureProperties,texture){if(textureProperties.__webglInit===undefined){textureProperties.__webglInit=true;texture.addEventListener('dispose',onTextureDispose);textureProperties.__webglTexture=_gl.createTexture();info.memory.textures++;}}function uploadTexture(textureProperties,texture,slot){let textureType=3553;if(texture.isDataTexture2DArray)textureType=35866;if(texture.isDataTexture3D)textureType=32879;initTexture(textureProperties,texture);state.activeTexture(33984+slot);state.bindTexture(textureType,textureProperties.__webglTexture);_gl.pixelStorei(37440,texture.flipY);_gl.pixelStorei(37441,texture.premultiplyAlpha);_gl.pixelStorei(3317,texture.unpackAlignment);const needsPowerOfTwo=textureNeedsPowerOfTwo(texture)&&isPowerOfTwo(texture.image)===false;const image=resizeImage(texture.image,needsPowerOfTwo,false,maxTextureSize);const supportsMips=isPowerOfTwo(image)||isWebGL2,glFormat=utils.convert(texture.format);let glType=utils.convert(texture.type),glInternalFormat=getInternalFormat(texture.internalFormat,glFormat,glType);setTextureParameters(textureType,texture,supportsMips);let mipmap;const mipmaps=texture.mipmaps;if(texture.isDepthTexture){// populate depth texture with dummy data\nglInternalFormat=6402;if(isWebGL2){if(texture.type===FloatType){glInternalFormat=36012;}else if(texture.type===UnsignedIntType){glInternalFormat=33190;}else if(texture.type===UnsignedInt248Type){glInternalFormat=35056;}else{glInternalFormat=33189;// WebGL2 requires sized internalformat for glTexImage2D\n}}else{if(texture.type===FloatType){console.error('WebGLRenderer: Floating point depth texture requires WebGL2.');}}// validation checks for WebGL 1\nif(texture.format===DepthFormat&&glInternalFormat===6402){// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\nif(texture.type!==UnsignedShortType&&texture.type!==UnsignedIntType){console.warn('THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.');texture.type=UnsignedShortType;glType=utils.convert(texture.type);}}if(texture.format===DepthStencilFormat&&glInternalFormat===6402){// Depth stencil textures need the DEPTH_STENCIL internal format\n// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\nglInternalFormat=34041;// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\nif(texture.type!==UnsignedInt248Type){console.warn('THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.');texture.type=UnsignedInt248Type;glType=utils.convert(texture.type);}}//\nstate.texImage2D(3553,0,glInternalFormat,image.width,image.height,0,glFormat,glType,null);}else if(texture.isDataTexture){// use manually created mipmaps if available\n// if there are no manual mipmaps\n// set 0 level mipmap and then use GL to generate other mipmap levels\nif(mipmaps.length>0&&supportsMips){for(let i=0,il=mipmaps.length;i<il;i++){mipmap=mipmaps[i];state.texImage2D(3553,i,glInternalFormat,mipmap.width,mipmap.height,0,glFormat,glType,mipmap.data);}texture.generateMipmaps=false;textureProperties.__maxMipLevel=mipmaps.length-1;}else{state.texImage2D(3553,0,glInternalFormat,image.width,image.height,0,glFormat,glType,image.data);textureProperties.__maxMipLevel=0;}}else if(texture.isCompressedTexture){for(let i=0,il=mipmaps.length;i<il;i++){mipmap=mipmaps[i];if(texture.format!==RGBAFormat&&texture.format!==RGBFormat){if(glFormat!==null){state.compressedTexImage2D(3553,i,glInternalFormat,mipmap.width,mipmap.height,0,mipmap.data);}else{console.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()');}}else{state.texImage2D(3553,i,glInternalFormat,mipmap.width,mipmap.height,0,glFormat,glType,mipmap.data);}}textureProperties.__maxMipLevel=mipmaps.length-1;}else if(texture.isDataTexture2DArray){state.texImage3D(35866,0,glInternalFormat,image.width,image.height,image.depth,0,glFormat,glType,image.data);textureProperties.__maxMipLevel=0;}else if(texture.isDataTexture3D){state.texImage3D(32879,0,glInternalFormat,image.width,image.height,image.depth,0,glFormat,glType,image.data);textureProperties.__maxMipLevel=0;}else{// regular Texture (image, video, canvas)\n// use manually created mipmaps if available\n// if there are no manual mipmaps\n// set 0 level mipmap and then use GL to generate other mipmap levels\nif(mipmaps.length>0&&supportsMips){for(let i=0,il=mipmaps.length;i<il;i++){mipmap=mipmaps[i];state.texImage2D(3553,i,glInternalFormat,glFormat,glType,mipmap);}texture.generateMipmaps=false;textureProperties.__maxMipLevel=mipmaps.length-1;}else{state.texImage2D(3553,0,glInternalFormat,glFormat,glType,image);textureProperties.__maxMipLevel=0;}}if(textureNeedsGenerateMipmaps(texture,supportsMips)){generateMipmap(textureType,texture,image.width,image.height);}textureProperties.__version=texture.version;if(texture.onUpdate)texture.onUpdate(texture);}function uploadCubeTexture(textureProperties,texture,slot){if(texture.image.length!==6)return;initTexture(textureProperties,texture);state.activeTexture(33984+slot);state.bindTexture(34067,textureProperties.__webglTexture);_gl.pixelStorei(37440,texture.flipY);_gl.pixelStorei(37441,texture.premultiplyAlpha);_gl.pixelStorei(3317,texture.unpackAlignment);const isCompressed=texture&&(texture.isCompressedTexture||texture.image[0].isCompressedTexture);const isDataTexture=texture.image[0]&&texture.image[0].isDataTexture;const cubeImage=[];for(let i=0;i<6;i++){if(!isCompressed&&!isDataTexture){cubeImage[i]=resizeImage(texture.image[i],false,true,maxCubemapSize);}else{cubeImage[i]=isDataTexture?texture.image[i].image:texture.image[i];}}const image=cubeImage[0],supportsMips=isPowerOfTwo(image)||isWebGL2,glFormat=utils.convert(texture.format),glType=utils.convert(texture.type),glInternalFormat=getInternalFormat(texture.internalFormat,glFormat,glType);setTextureParameters(34067,texture,supportsMips);let mipmaps;if(isCompressed){for(let i=0;i<6;i++){mipmaps=cubeImage[i].mipmaps;for(let j=0;j<mipmaps.length;j++){const mipmap=mipmaps[j];if(texture.format!==RGBAFormat&&texture.format!==RGBFormat){if(glFormat!==null){state.compressedTexImage2D(34069+i,j,glInternalFormat,mipmap.width,mipmap.height,0,mipmap.data);}else{console.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()');}}else{state.texImage2D(34069+i,j,glInternalFormat,mipmap.width,mipmap.height,0,glFormat,glType,mipmap.data);}}}textureProperties.__maxMipLevel=mipmaps.length-1;}else{mipmaps=texture.mipmaps;for(let i=0;i<6;i++){if(isDataTexture){state.texImage2D(34069+i,0,glInternalFormat,cubeImage[i].width,cubeImage[i].height,0,glFormat,glType,cubeImage[i].data);for(let j=0;j<mipmaps.length;j++){const mipmap=mipmaps[j];const mipmapImage=mipmap.image[i].image;state.texImage2D(34069+i,j+1,glInternalFormat,mipmapImage.width,mipmapImage.height,0,glFormat,glType,mipmapImage.data);}}else{state.texImage2D(34069+i,0,glInternalFormat,glFormat,glType,cubeImage[i]);for(let j=0;j<mipmaps.length;j++){const mipmap=mipmaps[j];state.texImage2D(34069+i,j+1,glInternalFormat,glFormat,glType,mipmap.image[i]);}}}textureProperties.__maxMipLevel=mipmaps.length;}if(textureNeedsGenerateMipmaps(texture,supportsMips)){// We assume images for cube map have the same size.\ngenerateMipmap(34067,texture,image.width,image.height);}textureProperties.__version=texture.version;if(texture.onUpdate)texture.onUpdate(texture);}// Render targets\n// Setup storage for target texture and bind it to correct framebuffer\nfunction setupFrameBufferTexture(framebuffer,renderTarget,attachment,textureTarget){const glFormat=utils.convert(renderTarget.texture.format);const glType=utils.convert(renderTarget.texture.type);const glInternalFormat=getInternalFormat(renderTarget.texture.internalFormat,glFormat,glType);state.texImage2D(textureTarget,0,glInternalFormat,renderTarget.width,renderTarget.height,0,glFormat,glType,null);_gl.bindFramebuffer(36160,framebuffer);_gl.framebufferTexture2D(36160,attachment,textureTarget,properties.get(renderTarget.texture).__webglTexture,0);_gl.bindFramebuffer(36160,null);}// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\nfunction setupRenderBufferStorage(renderbuffer,renderTarget,isMultisample){_gl.bindRenderbuffer(36161,renderbuffer);if(renderTarget.depthBuffer&&!renderTarget.stencilBuffer){let glInternalFormat=33189;if(isMultisample){const depthTexture=renderTarget.depthTexture;if(depthTexture&&depthTexture.isDepthTexture){if(depthTexture.type===FloatType){glInternalFormat=36012;}else if(depthTexture.type===UnsignedIntType){glInternalFormat=33190;}}const samples=getRenderTargetSamples(renderTarget);_gl.renderbufferStorageMultisample(36161,samples,glInternalFormat,renderTarget.width,renderTarget.height);}else{_gl.renderbufferStorage(36161,glInternalFormat,renderTarget.width,renderTarget.height);}_gl.framebufferRenderbuffer(36160,36096,36161,renderbuffer);}else if(renderTarget.depthBuffer&&renderTarget.stencilBuffer){if(isMultisample){const samples=getRenderTargetSamples(renderTarget);_gl.renderbufferStorageMultisample(36161,samples,35056,renderTarget.width,renderTarget.height);}else{_gl.renderbufferStorage(36161,34041,renderTarget.width,renderTarget.height);}_gl.framebufferRenderbuffer(36160,33306,36161,renderbuffer);}else{const glFormat=utils.convert(renderTarget.texture.format);const glType=utils.convert(renderTarget.texture.type);const glInternalFormat=getInternalFormat(renderTarget.texture.internalFormat,glFormat,glType);if(isMultisample){const samples=getRenderTargetSamples(renderTarget);_gl.renderbufferStorageMultisample(36161,samples,glInternalFormat,renderTarget.width,renderTarget.height);}else{_gl.renderbufferStorage(36161,glInternalFormat,renderTarget.width,renderTarget.height);}}_gl.bindRenderbuffer(36161,null);}// Setup resources for a Depth Texture for a FBO (needs an extension)\nfunction setupDepthTexture(framebuffer,renderTarget){const isCube=renderTarget&&renderTarget.isWebGLCubeRenderTarget;if(isCube)throw new Error('Depth Texture with cube render targets is not supported');_gl.bindFramebuffer(36160,framebuffer);if(!(renderTarget.depthTexture&&renderTarget.depthTexture.isDepthTexture)){throw new Error('renderTarget.depthTexture must be an instance of THREE.DepthTexture');}// upload an empty depth texture with framebuffer size\nif(!properties.get(renderTarget.depthTexture).__webglTexture||renderTarget.depthTexture.image.width!==renderTarget.width||renderTarget.depthTexture.image.height!==renderTarget.height){renderTarget.depthTexture.image.width=renderTarget.width;renderTarget.depthTexture.image.height=renderTarget.height;renderTarget.depthTexture.needsUpdate=true;}setTexture2D(renderTarget.depthTexture,0);const webglDepthTexture=properties.get(renderTarget.depthTexture).__webglTexture;if(renderTarget.depthTexture.format===DepthFormat){_gl.framebufferTexture2D(36160,36096,3553,webglDepthTexture,0);}else if(renderTarget.depthTexture.format===DepthStencilFormat){_gl.framebufferTexture2D(36160,33306,3553,webglDepthTexture,0);}else{throw new Error('Unknown depthTexture format');}}// Setup GL resources for a non-texture depth buffer\nfunction setupDepthRenderbuffer(renderTarget){const renderTargetProperties=properties.get(renderTarget);const isCube=renderTarget.isWebGLCubeRenderTarget===true;if(renderTarget.depthTexture){if(isCube)throw new Error('target.depthTexture not supported in Cube render targets');setupDepthTexture(renderTargetProperties.__webglFramebuffer,renderTarget);}else{if(isCube){renderTargetProperties.__webglDepthbuffer=[];for(let i=0;i<6;i++){_gl.bindFramebuffer(36160,renderTargetProperties.__webglFramebuffer[i]);renderTargetProperties.__webglDepthbuffer[i]=_gl.createRenderbuffer();setupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer[i],renderTarget,false);}}else{_gl.bindFramebuffer(36160,renderTargetProperties.__webglFramebuffer);renderTargetProperties.__webglDepthbuffer=_gl.createRenderbuffer();setupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer,renderTarget,false);}}_gl.bindFramebuffer(36160,null);}// Set up GL resources for the render target\nfunction setupRenderTarget(renderTarget){const renderTargetProperties=properties.get(renderTarget);const textureProperties=properties.get(renderTarget.texture);renderTarget.addEventListener('dispose',onRenderTargetDispose);textureProperties.__webglTexture=_gl.createTexture();info.memory.textures++;const isCube=renderTarget.isWebGLCubeRenderTarget===true;const isMultisample=renderTarget.isWebGLMultisampleRenderTarget===true;const supportsMips=isPowerOfTwo(renderTarget)||isWebGL2;// Handles WebGL2 RGBFormat fallback - #18858\nif(isWebGL2&&renderTarget.texture.format===RGBFormat&&(renderTarget.texture.type===FloatType||renderTarget.texture.type===HalfFloatType)){renderTarget.texture.format=RGBAFormat;console.warn('THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.');}// Setup framebuffer\nif(isCube){renderTargetProperties.__webglFramebuffer=[];for(let i=0;i<6;i++){renderTargetProperties.__webglFramebuffer[i]=_gl.createFramebuffer();}}else{renderTargetProperties.__webglFramebuffer=_gl.createFramebuffer();if(isMultisample){if(isWebGL2){renderTargetProperties.__webglMultisampledFramebuffer=_gl.createFramebuffer();renderTargetProperties.__webglColorRenderbuffer=_gl.createRenderbuffer();_gl.bindRenderbuffer(36161,renderTargetProperties.__webglColorRenderbuffer);const glFormat=utils.convert(renderTarget.texture.format);const glType=utils.convert(renderTarget.texture.type);const glInternalFormat=getInternalFormat(renderTarget.texture.internalFormat,glFormat,glType);const samples=getRenderTargetSamples(renderTarget);_gl.renderbufferStorageMultisample(36161,samples,glInternalFormat,renderTarget.width,renderTarget.height);_gl.bindFramebuffer(36160,renderTargetProperties.__webglMultisampledFramebuffer);_gl.framebufferRenderbuffer(36160,36064,36161,renderTargetProperties.__webglColorRenderbuffer);_gl.bindRenderbuffer(36161,null);if(renderTarget.depthBuffer){renderTargetProperties.__webglDepthRenderbuffer=_gl.createRenderbuffer();setupRenderBufferStorage(renderTargetProperties.__webglDepthRenderbuffer,renderTarget,true);}_gl.bindFramebuffer(36160,null);}else{console.warn('THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.');}}}// Setup color buffer\nif(isCube){state.bindTexture(34067,textureProperties.__webglTexture);setTextureParameters(34067,renderTarget.texture,supportsMips);for(let i=0;i<6;i++){setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer[i],renderTarget,36064,34069+i);}if(textureNeedsGenerateMipmaps(renderTarget.texture,supportsMips)){generateMipmap(34067,renderTarget.texture,renderTarget.width,renderTarget.height);}state.bindTexture(34067,null);}else{state.bindTexture(3553,textureProperties.__webglTexture);setTextureParameters(3553,renderTarget.texture,supportsMips);setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer,renderTarget,36064,3553);if(textureNeedsGenerateMipmaps(renderTarget.texture,supportsMips)){generateMipmap(3553,renderTarget.texture,renderTarget.width,renderTarget.height);}state.bindTexture(3553,null);}// Setup depth and stencil buffers\nif(renderTarget.depthBuffer){setupDepthRenderbuffer(renderTarget);}}function updateRenderTargetMipmap(renderTarget){const texture=renderTarget.texture;const supportsMips=isPowerOfTwo(renderTarget)||isWebGL2;if(textureNeedsGenerateMipmaps(texture,supportsMips)){const target=renderTarget.isWebGLCubeRenderTarget?34067:3553;const webglTexture=properties.get(texture).__webglTexture;state.bindTexture(target,webglTexture);generateMipmap(target,texture,renderTarget.width,renderTarget.height);state.bindTexture(target,null);}}function updateMultisampleRenderTarget(renderTarget){if(renderTarget.isWebGLMultisampleRenderTarget){if(isWebGL2){const renderTargetProperties=properties.get(renderTarget);_gl.bindFramebuffer(36008,renderTargetProperties.__webglMultisampledFramebuffer);_gl.bindFramebuffer(36009,renderTargetProperties.__webglFramebuffer);const width=renderTarget.width;const height=renderTarget.height;let mask=16384;if(renderTarget.depthBuffer)mask|=256;if(renderTarget.stencilBuffer)mask|=1024;_gl.blitFramebuffer(0,0,width,height,0,0,width,height,mask,9728);_gl.bindFramebuffer(36160,renderTargetProperties.__webglMultisampledFramebuffer);// see #18905\n}else{console.warn('THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.');}}}function getRenderTargetSamples(renderTarget){return isWebGL2&&renderTarget.isWebGLMultisampleRenderTarget?Math.min(maxSamples,renderTarget.samples):0;}function updateVideoTexture(texture){const frame=info.render.frame;// Check the last frame we updated the VideoTexture\nif(_videoTextures.get(texture)!==frame){_videoTextures.set(texture,frame);texture.update();}}// backwards compatibility\nlet warnedTexture2D=false;let warnedTextureCube=false;function safeSetTexture2D(texture,slot){if(texture&&texture.isWebGLRenderTarget){if(warnedTexture2D===false){console.warn('THREE.WebGLTextures.safeSetTexture2D: don\\'t use render targets as textures. Use their .texture property instead.');warnedTexture2D=true;}texture=texture.texture;}setTexture2D(texture,slot);}function safeSetTextureCube(texture,slot){if(texture&&texture.isWebGLCubeRenderTarget){if(warnedTextureCube===false){console.warn('THREE.WebGLTextures.safeSetTextureCube: don\\'t use cube render targets as textures. Use their .texture property instead.');warnedTextureCube=true;}texture=texture.texture;}setTextureCube(texture,slot);}//\nthis.allocateTextureUnit=allocateTextureUnit;this.resetTextureUnits=resetTextureUnits;this.setTexture2D=setTexture2D;this.setTexture2DArray=setTexture2DArray;this.setTexture3D=setTexture3D;this.setTextureCube=setTextureCube;this.setupRenderTarget=setupRenderTarget;this.updateRenderTargetMipmap=updateRenderTargetMipmap;this.updateMultisampleRenderTarget=updateMultisampleRenderTarget;this.safeSetTexture2D=safeSetTexture2D;this.safeSetTextureCube=safeSetTextureCube;}function WebGLUtils(gl,extensions,capabilities){const isWebGL2=capabilities.isWebGL2;function convert(p){let extension;if(p===UnsignedByteType)return 5121;if(p===UnsignedShort4444Type)return 32819;if(p===UnsignedShort5551Type)return 32820;if(p===UnsignedShort565Type)return 33635;if(p===ByteType)return 5120;if(p===ShortType)return 5122;if(p===UnsignedShortType)return 5123;if(p===IntType)return 5124;if(p===UnsignedIntType)return 5125;if(p===FloatType)return 5126;if(p===HalfFloatType){if(isWebGL2)return 5131;extension=extensions.get('OES_texture_half_float');if(extension!==null){return extension.HALF_FLOAT_OES;}else{return null;}}if(p===AlphaFormat)return 6406;if(p===RGBFormat)return 6407;if(p===RGBAFormat)return 6408;if(p===LuminanceFormat)return 6409;if(p===LuminanceAlphaFormat)return 6410;if(p===DepthFormat)return 6402;if(p===DepthStencilFormat)return 34041;if(p===RedFormat)return 6403;// WebGL2 formats.\nif(p===RedIntegerFormat)return 36244;if(p===RGFormat)return 33319;if(p===RGIntegerFormat)return 33320;if(p===RGBIntegerFormat)return 36248;if(p===RGBAIntegerFormat)return 36249;if(p===RGB_S3TC_DXT1_Format||p===RGBA_S3TC_DXT1_Format||p===RGBA_S3TC_DXT3_Format||p===RGBA_S3TC_DXT5_Format){extension=extensions.get('WEBGL_compressed_texture_s3tc');if(extension!==null){if(p===RGB_S3TC_DXT1_Format)return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;if(p===RGBA_S3TC_DXT1_Format)return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(p===RGBA_S3TC_DXT3_Format)return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(p===RGBA_S3TC_DXT5_Format)return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;}else{return null;}}if(p===RGB_PVRTC_4BPPV1_Format||p===RGB_PVRTC_2BPPV1_Format||p===RGBA_PVRTC_4BPPV1_Format||p===RGBA_PVRTC_2BPPV1_Format){extension=extensions.get('WEBGL_compressed_texture_pvrtc');if(extension!==null){if(p===RGB_PVRTC_4BPPV1_Format)return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(p===RGB_PVRTC_2BPPV1_Format)return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(p===RGBA_PVRTC_4BPPV1_Format)return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(p===RGBA_PVRTC_2BPPV1_Format)return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;}else{return null;}}if(p===RGB_ETC1_Format){extension=extensions.get('WEBGL_compressed_texture_etc1');if(extension!==null){return extension.COMPRESSED_RGB_ETC1_WEBGL;}else{return null;}}if(p===RGB_ETC2_Format||p===RGBA_ETC2_EAC_Format){extension=extensions.get('WEBGL_compressed_texture_etc');if(extension!==null){if(p===RGB_ETC2_Format)return extension.COMPRESSED_RGB8_ETC2;if(p===RGBA_ETC2_EAC_Format)return extension.COMPRESSED_RGBA8_ETC2_EAC;}}if(p===RGBA_ASTC_4x4_Format||p===RGBA_ASTC_5x4_Format||p===RGBA_ASTC_5x5_Format||p===RGBA_ASTC_6x5_Format||p===RGBA_ASTC_6x6_Format||p===RGBA_ASTC_8x5_Format||p===RGBA_ASTC_8x6_Format||p===RGBA_ASTC_8x8_Format||p===RGBA_ASTC_10x5_Format||p===RGBA_ASTC_10x6_Format||p===RGBA_ASTC_10x8_Format||p===RGBA_ASTC_10x10_Format||p===RGBA_ASTC_12x10_Format||p===RGBA_ASTC_12x12_Format||p===SRGB8_ALPHA8_ASTC_4x4_Format||p===SRGB8_ALPHA8_ASTC_5x4_Format||p===SRGB8_ALPHA8_ASTC_5x5_Format||p===SRGB8_ALPHA8_ASTC_6x5_Format||p===SRGB8_ALPHA8_ASTC_6x6_Format||p===SRGB8_ALPHA8_ASTC_8x5_Format||p===SRGB8_ALPHA8_ASTC_8x6_Format||p===SRGB8_ALPHA8_ASTC_8x8_Format||p===SRGB8_ALPHA8_ASTC_10x5_Format||p===SRGB8_ALPHA8_ASTC_10x6_Format||p===SRGB8_ALPHA8_ASTC_10x8_Format||p===SRGB8_ALPHA8_ASTC_10x10_Format||p===SRGB8_ALPHA8_ASTC_12x10_Format||p===SRGB8_ALPHA8_ASTC_12x12_Format){extension=extensions.get('WEBGL_compressed_texture_astc');if(extension!==null){// TODO Complete?\nreturn p;}else{return null;}}if(p===RGBA_BPTC_Format){extension=extensions.get('EXT_texture_compression_bptc');if(extension!==null){// TODO Complete?\nreturn p;}else{return null;}}if(p===UnsignedInt248Type){if(isWebGL2)return 34042;extension=extensions.get('WEBGL_depth_texture');if(extension!==null){return extension.UNSIGNED_INT_24_8_WEBGL;}else{return null;}}}return{convert:convert};}function ArrayCamera(array=[]){PerspectiveCamera.call(this);this.cameras=array;}ArrayCamera.prototype=Object.assign(Object.create(PerspectiveCamera.prototype),{constructor:ArrayCamera,isArrayCamera:true});function Group(){Object3D.call(this);this.type='Group';}Group.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Group,isGroup:true});function WebXRController(){this._targetRay=null;this._grip=null;this._hand=null;}Object.assign(WebXRController.prototype,{constructor:WebXRController,getHandSpace:function(){if(this._hand===null){this._hand=new Group();this._hand.matrixAutoUpdate=false;this._hand.visible=false;this._hand.joints={};this._hand.inputState={pinching:false};}return this._hand;},getTargetRaySpace:function(){if(this._targetRay===null){this._targetRay=new Group();this._targetRay.matrixAutoUpdate=false;this._targetRay.visible=false;}return this._targetRay;},getGripSpace:function(){if(this._grip===null){this._grip=new Group();this._grip.matrixAutoUpdate=false;this._grip.visible=false;}return this._grip;},dispatchEvent:function(event){if(this._targetRay!==null){this._targetRay.dispatchEvent(event);}if(this._grip!==null){this._grip.dispatchEvent(event);}if(this._hand!==null){this._hand.dispatchEvent(event);}return this;},disconnect:function(inputSource){this.dispatchEvent({type:'disconnected',data:inputSource});if(this._targetRay!==null){this._targetRay.visible=false;}if(this._grip!==null){this._grip.visible=false;}if(this._hand!==null){this._hand.visible=false;}return this;},update:function(inputSource,frame,referenceSpace){let inputPose=null;let gripPose=null;let handPose=null;const targetRay=this._targetRay;const grip=this._grip;const hand=this._hand;if(inputSource&&frame.session.visibilityState!=='visible-blurred'){if(hand&&inputSource.hand){handPose=true;for(const inputjoint of inputSource.hand.values()){// Update the joints groups with the XRJoint poses\nconst jointPose=frame.getJointPose(inputjoint,referenceSpace);if(hand.joints[inputjoint.jointName]===undefined){// The transform of this joint will be updated with the joint pose on each frame\nconst joint=new Group();joint.matrixAutoUpdate=false;joint.visible=false;hand.joints[inputjoint.jointName]=joint;// ??\nhand.add(joint);}const joint=hand.joints[inputjoint.jointName];if(jointPose!==null){joint.matrix.fromArray(jointPose.transform.matrix);joint.matrix.decompose(joint.position,joint.rotation,joint.scale);joint.jointRadius=jointPose.radius;}joint.visible=jointPose!==null;}// Custom events\n// Check pinchz\nconst indexTip=hand.joints['index-finger-tip'];const thumbTip=hand.joints['thumb-tip'];const distance=indexTip.position.distanceTo(thumbTip.position);const distanceToPinch=0.02;const threshold=0.005;if(hand.inputState.pinching&&distance>distanceToPinch+threshold){hand.inputState.pinching=false;this.dispatchEvent({type:'pinchend',handedness:inputSource.handedness,target:this});}else if(!hand.inputState.pinching&&distance<=distanceToPinch-threshold){hand.inputState.pinching=true;this.dispatchEvent({type:'pinchstart',handedness:inputSource.handedness,target:this});}}else{if(targetRay!==null){inputPose=frame.getPose(inputSource.targetRaySpace,referenceSpace);if(inputPose!==null){targetRay.matrix.fromArray(inputPose.transform.matrix);targetRay.matrix.decompose(targetRay.position,targetRay.rotation,targetRay.scale);}}if(grip!==null&&inputSource.gripSpace){gripPose=frame.getPose(inputSource.gripSpace,referenceSpace);if(gripPose!==null){grip.matrix.fromArray(gripPose.transform.matrix);grip.matrix.decompose(grip.position,grip.rotation,grip.scale);}}}}if(targetRay!==null){targetRay.visible=inputPose!==null;}if(grip!==null){grip.visible=gripPose!==null;}if(hand!==null){hand.visible=handPose!==null;}return this;}});function WebXRManager(renderer,gl){const scope=this;let session=null;let framebufferScaleFactor=1.0;let referenceSpace=null;let referenceSpaceType='local-floor';let pose=null;const controllers=[];const inputSourcesMap=new Map();//\nconst cameraL=new PerspectiveCamera();cameraL.layers.enable(1);cameraL.viewport=new Vector4();const cameraR=new PerspectiveCamera();cameraR.layers.enable(2);cameraR.viewport=new Vector4();const cameras=[cameraL,cameraR];const cameraVR=new ArrayCamera();cameraVR.layers.enable(1);cameraVR.layers.enable(2);let _currentDepthNear=null;let _currentDepthFar=null;//\nthis.enabled=false;this.isPresenting=false;this.getController=function(index){let controller=controllers[index];if(controller===undefined){controller=new WebXRController();controllers[index]=controller;}return controller.getTargetRaySpace();};this.getControllerGrip=function(index){let controller=controllers[index];if(controller===undefined){controller=new WebXRController();controllers[index]=controller;}return controller.getGripSpace();};this.getHand=function(index){let controller=controllers[index];if(controller===undefined){controller=new WebXRController();controllers[index]=controller;}return controller.getHandSpace();};//\nfunction onSessionEvent(event){const controller=inputSourcesMap.get(event.inputSource);if(controller){controller.dispatchEvent({type:event.type,data:event.inputSource});}}function onSessionEnd(){inputSourcesMap.forEach(function(controller,inputSource){controller.disconnect(inputSource);});inputSourcesMap.clear();_currentDepthNear=null;_currentDepthFar=null;//\nrenderer.setFramebuffer(null);renderer.setRenderTarget(renderer.getRenderTarget());// Hack #15830\nanimation.stop();scope.isPresenting=false;scope.dispatchEvent({type:'sessionend'});}this.setFramebufferScaleFactor=function(value){framebufferScaleFactor=value;if(scope.isPresenting===true){console.warn('THREE.WebXRManager: Cannot change framebuffer scale while presenting.');}};this.setReferenceSpaceType=function(value){referenceSpaceType=value;if(scope.isPresenting===true){console.warn('THREE.WebXRManager: Cannot change reference space type while presenting.');}};this.getReferenceSpace=function(){return referenceSpace;};this.getSession=function(){return session;};this.setSession=async function(value){session=value;if(session!==null){session.addEventListener('select',onSessionEvent);session.addEventListener('selectstart',onSessionEvent);session.addEventListener('selectend',onSessionEvent);session.addEventListener('squeeze',onSessionEvent);session.addEventListener('squeezestart',onSessionEvent);session.addEventListener('squeezeend',onSessionEvent);session.addEventListener('end',onSessionEnd);session.addEventListener('inputsourceschange',onInputSourcesChange);const attributes=gl.getContextAttributes();if(attributes.xrCompatible!==true){await gl.makeXRCompatible();}const layerInit={antialias:attributes.antialias,alpha:attributes.alpha,depth:attributes.depth,stencil:attributes.stencil,framebufferScaleFactor:framebufferScaleFactor};// eslint-disable-next-line no-undef\nconst baseLayer=new XRWebGLLayer(session,gl,layerInit);session.updateRenderState({baseLayer:baseLayer});referenceSpace=await session.requestReferenceSpace(referenceSpaceType);animation.setContext(session);animation.start();scope.isPresenting=true;scope.dispatchEvent({type:'sessionstart'});}};function onInputSourcesChange(event){const inputSources=session.inputSources;// Assign inputSources to available controllers\nfor(let i=0;i<controllers.length;i++){inputSourcesMap.set(inputSources[i],controllers[i]);}// Notify disconnected\nfor(let i=0;i<event.removed.length;i++){const inputSource=event.removed[i];const controller=inputSourcesMap.get(inputSource);if(controller){controller.dispatchEvent({type:'disconnected',data:inputSource});inputSourcesMap.delete(inputSource);}}// Notify connected\nfor(let i=0;i<event.added.length;i++){const inputSource=event.added[i];const controller=inputSourcesMap.get(inputSource);if(controller){controller.dispatchEvent({type:'connected',data:inputSource});}}}//\nconst cameraLPos=new Vector3();const cameraRPos=new Vector3();/**\n\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t * the cameras' projection and world matrices have already been set.\n\t * And that near and far planes are identical for both cameras.\n\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t */function setProjectionFromUnion(camera,cameraL,cameraR){cameraLPos.setFromMatrixPosition(cameraL.matrixWorld);cameraRPos.setFromMatrixPosition(cameraR.matrixWorld);const ipd=cameraLPos.distanceTo(cameraRPos);const projL=cameraL.projectionMatrix.elements;const projR=cameraR.projectionMatrix.elements;// VR systems will have identical far and near planes, and\n// most likely identical top and bottom frustum extents.\n// Use the left camera for these values.\nconst near=projL[14]/(projL[10]-1);const far=projL[14]/(projL[10]+1);const topFov=(projL[9]+1)/projL[5];const bottomFov=(projL[9]-1)/projL[5];const leftFov=(projL[8]-1)/projL[0];const rightFov=(projR[8]+1)/projR[0];const left=near*leftFov;const right=near*rightFov;// Calculate the new camera's position offset from the\n// left camera. xOffset should be roughly half `ipd`.\nconst zOffset=ipd/(-leftFov+rightFov);const xOffset=zOffset*-leftFov;// TODO: Better way to apply this offset?\ncameraL.matrixWorld.decompose(camera.position,camera.quaternion,camera.scale);camera.translateX(xOffset);camera.translateZ(zOffset);camera.matrixWorld.compose(camera.position,camera.quaternion,camera.scale);camera.matrixWorldInverse.copy(camera.matrixWorld).invert();// Find the union of the frustum values of the cameras and scale\n// the values so that the near plane's position does not change in world space,\n// although must now be relative to the new union camera.\nconst near2=near+zOffset;const far2=far+zOffset;const left2=left-xOffset;const right2=right+(ipd-xOffset);const top2=topFov*far/far2*near2;const bottom2=bottomFov*far/far2*near2;camera.projectionMatrix.makePerspective(left2,right2,top2,bottom2,near2,far2);}function updateCamera(camera,parent){if(parent===null){camera.matrixWorld.copy(camera.matrix);}else{camera.matrixWorld.multiplyMatrices(parent.matrixWorld,camera.matrix);}camera.matrixWorldInverse.copy(camera.matrixWorld).invert();}this.getCamera=function(camera){cameraVR.near=cameraR.near=cameraL.near=camera.near;cameraVR.far=cameraR.far=cameraL.far=camera.far;if(_currentDepthNear!==cameraVR.near||_currentDepthFar!==cameraVR.far){// Note that the new renderState won't apply until the next frame. See #18320\nsession.updateRenderState({depthNear:cameraVR.near,depthFar:cameraVR.far});_currentDepthNear=cameraVR.near;_currentDepthFar=cameraVR.far;}const parent=camera.parent;const cameras=cameraVR.cameras;updateCamera(cameraVR,parent);for(let i=0;i<cameras.length;i++){updateCamera(cameras[i],parent);}// update camera and its children\ncamera.matrixWorld.copy(cameraVR.matrixWorld);camera.matrix.copy(cameraVR.matrix);camera.matrix.decompose(camera.position,camera.quaternion,camera.scale);const children=camera.children;for(let i=0,l=children.length;i<l;i++){children[i].updateMatrixWorld(true);}// update projection matrix for proper view frustum culling\nif(cameras.length===2){setProjectionFromUnion(cameraVR,cameraL,cameraR);}else{// assume single camera setup (AR)\ncameraVR.projectionMatrix.copy(cameraL.projectionMatrix);}return cameraVR;};// Animation Loop\nlet onAnimationFrameCallback=null;function onAnimationFrame(time,frame){pose=frame.getViewerPose(referenceSpace);if(pose!==null){const views=pose.views;const baseLayer=session.renderState.baseLayer;renderer.setFramebuffer(baseLayer.framebuffer);let cameraVRNeedsUpdate=false;// check if it's necessary to rebuild cameraVR's camera list\nif(views.length!==cameraVR.cameras.length){cameraVR.cameras.length=0;cameraVRNeedsUpdate=true;}for(let i=0;i<views.length;i++){const view=views[i];const viewport=baseLayer.getViewport(view);const camera=cameras[i];camera.matrix.fromArray(view.transform.matrix);camera.projectionMatrix.fromArray(view.projectionMatrix);camera.viewport.set(viewport.x,viewport.y,viewport.width,viewport.height);if(i===0){cameraVR.matrix.copy(camera.matrix);}if(cameraVRNeedsUpdate===true){cameraVR.cameras.push(camera);}}}//\nconst inputSources=session.inputSources;for(let i=0;i<controllers.length;i++){const controller=controllers[i];const inputSource=inputSources[i];controller.update(inputSource,frame,referenceSpace);}if(onAnimationFrameCallback)onAnimationFrameCallback(time,frame);}const animation=new WebGLAnimation();animation.setAnimationLoop(onAnimationFrame);this.setAnimationLoop=function(callback){onAnimationFrameCallback=callback;};this.dispose=function(){};}Object.assign(WebXRManager.prototype,EventDispatcher.prototype);function WebGLMaterials(properties){function refreshFogUniforms(uniforms,fog){uniforms.fogColor.value.copy(fog.color);if(fog.isFog){uniforms.fogNear.value=fog.near;uniforms.fogFar.value=fog.far;}else if(fog.isFogExp2){uniforms.fogDensity.value=fog.density;}}function refreshMaterialUniforms(uniforms,material,pixelRatio,height){if(material.isMeshBasicMaterial){refreshUniformsCommon(uniforms,material);}else if(material.isMeshLambertMaterial){refreshUniformsCommon(uniforms,material);refreshUniformsLambert(uniforms,material);}else if(material.isMeshToonMaterial){refreshUniformsCommon(uniforms,material);refreshUniformsToon(uniforms,material);}else if(material.isMeshPhongMaterial){refreshUniformsCommon(uniforms,material);refreshUniformsPhong(uniforms,material);}else if(material.isMeshStandardMaterial){refreshUniformsCommon(uniforms,material);if(material.isMeshPhysicalMaterial){refreshUniformsPhysical(uniforms,material);}else{refreshUniformsStandard(uniforms,material);}}else if(material.isMeshMatcapMaterial){refreshUniformsCommon(uniforms,material);refreshUniformsMatcap(uniforms,material);}else if(material.isMeshDepthMaterial){refreshUniformsCommon(uniforms,material);refreshUniformsDepth(uniforms,material);}else if(material.isMeshDistanceMaterial){refreshUniformsCommon(uniforms,material);refreshUniformsDistance(uniforms,material);}else if(material.isMeshNormalMaterial){refreshUniformsCommon(uniforms,material);refreshUniformsNormal(uniforms,material);}else if(material.isLineBasicMaterial){refreshUniformsLine(uniforms,material);if(material.isLineDashedMaterial){refreshUniformsDash(uniforms,material);}}else if(material.isPointsMaterial){refreshUniformsPoints(uniforms,material,pixelRatio,height);}else if(material.isSpriteMaterial){refreshUniformsSprites(uniforms,material);}else if(material.isShadowMaterial){uniforms.color.value.copy(material.color);uniforms.opacity.value=material.opacity;}else if(material.isShaderMaterial){material.uniformsNeedUpdate=false;// #15581\n}}function refreshUniformsCommon(uniforms,material){uniforms.opacity.value=material.opacity;if(material.color){uniforms.diffuse.value.copy(material.color);}if(material.emissive){uniforms.emissive.value.copy(material.emissive).multiplyScalar(material.emissiveIntensity);}if(material.map){uniforms.map.value=material.map;}if(material.alphaMap){uniforms.alphaMap.value=material.alphaMap;}if(material.specularMap){uniforms.specularMap.value=material.specularMap;}const envMap=properties.get(material).envMap;if(envMap){uniforms.envMap.value=envMap;uniforms.flipEnvMap.value=envMap.isCubeTexture&&envMap._needsFlipEnvMap?-1:1;uniforms.reflectivity.value=material.reflectivity;uniforms.refractionRatio.value=material.refractionRatio;const maxMipLevel=properties.get(envMap).__maxMipLevel;if(maxMipLevel!==undefined){uniforms.maxMipLevel.value=maxMipLevel;}}if(material.lightMap){uniforms.lightMap.value=material.lightMap;uniforms.lightMapIntensity.value=material.lightMapIntensity;}if(material.aoMap){uniforms.aoMap.value=material.aoMap;uniforms.aoMapIntensity.value=material.aoMapIntensity;}// uv repeat and offset setting priorities\n// 1. color map\n// 2. specular map\n// 3. displacementMap map\n// 4. normal map\n// 5. bump map\n// 6. roughnessMap map\n// 7. metalnessMap map\n// 8. alphaMap map\n// 9. emissiveMap map\n// 10. clearcoat map\n// 11. clearcoat normal map\n// 12. clearcoat roughnessMap map\nlet uvScaleMap;if(material.map){uvScaleMap=material.map;}else if(material.specularMap){uvScaleMap=material.specularMap;}else if(material.displacementMap){uvScaleMap=material.displacementMap;}else if(material.normalMap){uvScaleMap=material.normalMap;}else if(material.bumpMap){uvScaleMap=material.bumpMap;}else if(material.roughnessMap){uvScaleMap=material.roughnessMap;}else if(material.metalnessMap){uvScaleMap=material.metalnessMap;}else if(material.alphaMap){uvScaleMap=material.alphaMap;}else if(material.emissiveMap){uvScaleMap=material.emissiveMap;}else if(material.clearcoatMap){uvScaleMap=material.clearcoatMap;}else if(material.clearcoatNormalMap){uvScaleMap=material.clearcoatNormalMap;}else if(material.clearcoatRoughnessMap){uvScaleMap=material.clearcoatRoughnessMap;}if(uvScaleMap!==undefined){// backwards compatibility\nif(uvScaleMap.isWebGLRenderTarget){uvScaleMap=uvScaleMap.texture;}if(uvScaleMap.matrixAutoUpdate===true){uvScaleMap.updateMatrix();}uniforms.uvTransform.value.copy(uvScaleMap.matrix);}// uv repeat and offset setting priorities for uv2\n// 1. ao map\n// 2. light map\nlet uv2ScaleMap;if(material.aoMap){uv2ScaleMap=material.aoMap;}else if(material.lightMap){uv2ScaleMap=material.lightMap;}if(uv2ScaleMap!==undefined){// backwards compatibility\nif(uv2ScaleMap.isWebGLRenderTarget){uv2ScaleMap=uv2ScaleMap.texture;}if(uv2ScaleMap.matrixAutoUpdate===true){uv2ScaleMap.updateMatrix();}uniforms.uv2Transform.value.copy(uv2ScaleMap.matrix);}}function refreshUniformsLine(uniforms,material){uniforms.diffuse.value.copy(material.color);uniforms.opacity.value=material.opacity;}function refreshUniformsDash(uniforms,material){uniforms.dashSize.value=material.dashSize;uniforms.totalSize.value=material.dashSize+material.gapSize;uniforms.scale.value=material.scale;}function refreshUniformsPoints(uniforms,material,pixelRatio,height){uniforms.diffuse.value.copy(material.color);uniforms.opacity.value=material.opacity;uniforms.size.value=material.size*pixelRatio;uniforms.scale.value=height*0.5;if(material.map){uniforms.map.value=material.map;}if(material.alphaMap){uniforms.alphaMap.value=material.alphaMap;}// uv repeat and offset setting priorities\n// 1. color map\n// 2. alpha map\nlet uvScaleMap;if(material.map){uvScaleMap=material.map;}else if(material.alphaMap){uvScaleMap=material.alphaMap;}if(uvScaleMap!==undefined){if(uvScaleMap.matrixAutoUpdate===true){uvScaleMap.updateMatrix();}uniforms.uvTransform.value.copy(uvScaleMap.matrix);}}function refreshUniformsSprites(uniforms,material){uniforms.diffuse.value.copy(material.color);uniforms.opacity.value=material.opacity;uniforms.rotation.value=material.rotation;if(material.map){uniforms.map.value=material.map;}if(material.alphaMap){uniforms.alphaMap.value=material.alphaMap;}// uv repeat and offset setting priorities\n// 1. color map\n// 2. alpha map\nlet uvScaleMap;if(material.map){uvScaleMap=material.map;}else if(material.alphaMap){uvScaleMap=material.alphaMap;}if(uvScaleMap!==undefined){if(uvScaleMap.matrixAutoUpdate===true){uvScaleMap.updateMatrix();}uniforms.uvTransform.value.copy(uvScaleMap.matrix);}}function refreshUniformsLambert(uniforms,material){if(material.emissiveMap){uniforms.emissiveMap.value=material.emissiveMap;}}function refreshUniformsPhong(uniforms,material){uniforms.specular.value.copy(material.specular);uniforms.shininess.value=Math.max(material.shininess,1e-4);// to prevent pow( 0.0, 0.0 )\nif(material.emissiveMap){uniforms.emissiveMap.value=material.emissiveMap;}if(material.bumpMap){uniforms.bumpMap.value=material.bumpMap;uniforms.bumpScale.value=material.bumpScale;if(material.side===BackSide)uniforms.bumpScale.value*=-1;}if(material.normalMap){uniforms.normalMap.value=material.normalMap;uniforms.normalScale.value.copy(material.normalScale);if(material.side===BackSide)uniforms.normalScale.value.negate();}if(material.displacementMap){uniforms.displacementMap.value=material.displacementMap;uniforms.displacementScale.value=material.displacementScale;uniforms.displacementBias.value=material.displacementBias;}}function refreshUniformsToon(uniforms,material){if(material.gradientMap){uniforms.gradientMap.value=material.gradientMap;}if(material.emissiveMap){uniforms.emissiveMap.value=material.emissiveMap;}if(material.bumpMap){uniforms.bumpMap.value=material.bumpMap;uniforms.bumpScale.value=material.bumpScale;if(material.side===BackSide)uniforms.bumpScale.value*=-1;}if(material.normalMap){uniforms.normalMap.value=material.normalMap;uniforms.normalScale.value.copy(material.normalScale);if(material.side===BackSide)uniforms.normalScale.value.negate();}if(material.displacementMap){uniforms.displacementMap.value=material.displacementMap;uniforms.displacementScale.value=material.displacementScale;uniforms.displacementBias.value=material.displacementBias;}}function refreshUniformsStandard(uniforms,material){uniforms.roughness.value=material.roughness;uniforms.metalness.value=material.metalness;if(material.roughnessMap){uniforms.roughnessMap.value=material.roughnessMap;}if(material.metalnessMap){uniforms.metalnessMap.value=material.metalnessMap;}if(material.emissiveMap){uniforms.emissiveMap.value=material.emissiveMap;}if(material.bumpMap){uniforms.bumpMap.value=material.bumpMap;uniforms.bumpScale.value=material.bumpScale;if(material.side===BackSide)uniforms.bumpScale.value*=-1;}if(material.normalMap){uniforms.normalMap.value=material.normalMap;uniforms.normalScale.value.copy(material.normalScale);if(material.side===BackSide)uniforms.normalScale.value.negate();}if(material.displacementMap){uniforms.displacementMap.value=material.displacementMap;uniforms.displacementScale.value=material.displacementScale;uniforms.displacementBias.value=material.displacementBias;}const envMap=properties.get(material).envMap;if(envMap){//uniforms.envMap.value = material.envMap; // part of uniforms common\nuniforms.envMapIntensity.value=material.envMapIntensity;}}function refreshUniformsPhysical(uniforms,material){refreshUniformsStandard(uniforms,material);uniforms.reflectivity.value=material.reflectivity;// also part of uniforms common\nuniforms.clearcoat.value=material.clearcoat;uniforms.clearcoatRoughness.value=material.clearcoatRoughness;if(material.sheen)uniforms.sheen.value.copy(material.sheen);if(material.clearcoatMap){uniforms.clearcoatMap.value=material.clearcoatMap;}if(material.clearcoatRoughnessMap){uniforms.clearcoatRoughnessMap.value=material.clearcoatRoughnessMap;}if(material.clearcoatNormalMap){uniforms.clearcoatNormalScale.value.copy(material.clearcoatNormalScale);uniforms.clearcoatNormalMap.value=material.clearcoatNormalMap;if(material.side===BackSide){uniforms.clearcoatNormalScale.value.negate();}}uniforms.transmission.value=material.transmission;if(material.transmissionMap){uniforms.transmissionMap.value=material.transmissionMap;}}function refreshUniformsMatcap(uniforms,material){if(material.matcap){uniforms.matcap.value=material.matcap;}if(material.bumpMap){uniforms.bumpMap.value=material.bumpMap;uniforms.bumpScale.value=material.bumpScale;if(material.side===BackSide)uniforms.bumpScale.value*=-1;}if(material.normalMap){uniforms.normalMap.value=material.normalMap;uniforms.normalScale.value.copy(material.normalScale);if(material.side===BackSide)uniforms.normalScale.value.negate();}if(material.displacementMap){uniforms.displacementMap.value=material.displacementMap;uniforms.displacementScale.value=material.displacementScale;uniforms.displacementBias.value=material.displacementBias;}}function refreshUniformsDepth(uniforms,material){if(material.displacementMap){uniforms.displacementMap.value=material.displacementMap;uniforms.displacementScale.value=material.displacementScale;uniforms.displacementBias.value=material.displacementBias;}}function refreshUniformsDistance(uniforms,material){if(material.displacementMap){uniforms.displacementMap.value=material.displacementMap;uniforms.displacementScale.value=material.displacementScale;uniforms.displacementBias.value=material.displacementBias;}uniforms.referencePosition.value.copy(material.referencePosition);uniforms.nearDistance.value=material.nearDistance;uniforms.farDistance.value=material.farDistance;}function refreshUniformsNormal(uniforms,material){if(material.bumpMap){uniforms.bumpMap.value=material.bumpMap;uniforms.bumpScale.value=material.bumpScale;if(material.side===BackSide)uniforms.bumpScale.value*=-1;}if(material.normalMap){uniforms.normalMap.value=material.normalMap;uniforms.normalScale.value.copy(material.normalScale);if(material.side===BackSide)uniforms.normalScale.value.negate();}if(material.displacementMap){uniforms.displacementMap.value=material.displacementMap;uniforms.displacementScale.value=material.displacementScale;uniforms.displacementBias.value=material.displacementBias;}}return{refreshFogUniforms:refreshFogUniforms,refreshMaterialUniforms:refreshMaterialUniforms};}function createCanvasElement(){const canvas=document.createElementNS('http://www.w3.org/1999/xhtml','canvas');canvas.style.display='block';return canvas;}function WebGLRenderer(parameters){parameters=parameters||{};const _canvas=parameters.canvas!==undefined?parameters.canvas:createCanvasElement(),_context=parameters.context!==undefined?parameters.context:null,_alpha=parameters.alpha!==undefined?parameters.alpha:false,_depth=parameters.depth!==undefined?parameters.depth:true,_stencil=parameters.stencil!==undefined?parameters.stencil:true,_antialias=parameters.antialias!==undefined?parameters.antialias:false,_premultipliedAlpha=parameters.premultipliedAlpha!==undefined?parameters.premultipliedAlpha:true,_preserveDrawingBuffer=parameters.preserveDrawingBuffer!==undefined?parameters.preserveDrawingBuffer:false,_powerPreference=parameters.powerPreference!==undefined?parameters.powerPreference:'default',_failIfMajorPerformanceCaveat=parameters.failIfMajorPerformanceCaveat!==undefined?parameters.failIfMajorPerformanceCaveat:false;let currentRenderList=null;let currentRenderState=null;// render() can be called from within a callback triggered by another render.\n// We track this so that the nested render call gets its state isolated from the parent render call.\nconst renderStateStack=[];// public properties\nthis.domElement=_canvas;// Debug configuration container\nthis.debug={/**\n\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t * @type {boolean}\n\t\t */checkShaderErrors:true};// clearing\nthis.autoClear=true;this.autoClearColor=true;this.autoClearDepth=true;this.autoClearStencil=true;// scene graph\nthis.sortObjects=true;// user-defined clipping\nthis.clippingPlanes=[];this.localClippingEnabled=false;// physically based shading\nthis.gammaFactor=2.0;// for backwards compatibility\nthis.outputEncoding=LinearEncoding;// physical lights\nthis.physicallyCorrectLights=false;// tone mapping\nthis.toneMapping=NoToneMapping;this.toneMappingExposure=1.0;// morphs\nthis.maxMorphTargets=8;this.maxMorphNormals=4;// internal properties\nconst _this=this;let _isContextLost=false;// internal state cache\nlet _framebuffer=null;let _currentActiveCubeFace=0;let _currentActiveMipmapLevel=0;let _currentRenderTarget=null;let _currentFramebuffer=null;let _currentMaterialId=-1;let _currentCamera=null;const _currentViewport=new Vector4();const _currentScissor=new Vector4();let _currentScissorTest=null;//\nlet _width=_canvas.width;let _height=_canvas.height;let _pixelRatio=1;let _opaqueSort=null;let _transparentSort=null;const _viewport=new Vector4(0,0,_width,_height);const _scissor=new Vector4(0,0,_width,_height);let _scissorTest=false;// frustum\nconst _frustum=new Frustum();// clipping\nlet _clippingEnabled=false;let _localClippingEnabled=false;// camera matrices cache\nconst _projScreenMatrix=new Matrix4();const _vector3=new Vector3();const _emptyScene={background:null,fog:null,environment:null,overrideMaterial:null,isScene:true};function getTargetPixelRatio(){return _currentRenderTarget===null?_pixelRatio:1;}// initialize\nlet _gl=_context;function getContext(contextNames,contextAttributes){for(let i=0;i<contextNames.length;i++){const contextName=contextNames[i];const context=_canvas.getContext(contextName,contextAttributes);if(context!==null)return context;}return null;}try{const contextAttributes={alpha:_alpha,depth:_depth,stencil:_stencil,antialias:_antialias,premultipliedAlpha:_premultipliedAlpha,preserveDrawingBuffer:_preserveDrawingBuffer,powerPreference:_powerPreference,failIfMajorPerformanceCaveat:_failIfMajorPerformanceCaveat};// event listeners must be registered before WebGL context is created, see #12753\n_canvas.addEventListener('webglcontextlost',onContextLost,false);_canvas.addEventListener('webglcontextrestored',onContextRestore,false);if(_gl===null){const contextNames=['webgl2','webgl','experimental-webgl'];if(_this.isWebGL1Renderer===true){contextNames.shift();}_gl=getContext(contextNames,contextAttributes);if(_gl===null){if(getContext(contextNames)){throw new Error('Error creating WebGL context with your selected attributes.');}else{throw new Error('Error creating WebGL context.');}}}// Some experimental-webgl implementations do not have getShaderPrecisionFormat\nif(_gl.getShaderPrecisionFormat===undefined){_gl.getShaderPrecisionFormat=function(){return{'rangeMin':1,'rangeMax':1,'precision':1};};}}catch(error){console.error('THREE.WebGLRenderer: '+error.message);throw error;}let extensions,capabilities,state,info;let properties,textures,cubemaps,attributes,geometries,objects;let programCache,materials,renderLists,renderStates,clipping;let background,morphtargets,bufferRenderer,indexedBufferRenderer;let utils,bindingStates;function initGLContext(){extensions=new WebGLExtensions(_gl);capabilities=new WebGLCapabilities(_gl,extensions,parameters);extensions.init(capabilities);utils=new WebGLUtils(_gl,extensions,capabilities);state=new WebGLState(_gl,extensions,capabilities);state.scissor(_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor());state.viewport(_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor());info=new WebGLInfo(_gl);properties=new WebGLProperties();textures=new WebGLTextures(_gl,extensions,state,properties,capabilities,utils,info);cubemaps=new WebGLCubeMaps(_this);attributes=new WebGLAttributes(_gl,capabilities);bindingStates=new WebGLBindingStates(_gl,extensions,attributes,capabilities);geometries=new WebGLGeometries(_gl,attributes,info,bindingStates);objects=new WebGLObjects(_gl,geometries,attributes,info);morphtargets=new WebGLMorphtargets(_gl);clipping=new WebGLClipping(properties);programCache=new WebGLPrograms(_this,cubemaps,extensions,capabilities,bindingStates,clipping);materials=new WebGLMaterials(properties);renderLists=new WebGLRenderLists(properties);renderStates=new WebGLRenderStates(extensions,capabilities);background=new WebGLBackground(_this,cubemaps,state,objects,_premultipliedAlpha);bufferRenderer=new WebGLBufferRenderer(_gl,extensions,info,capabilities);indexedBufferRenderer=new WebGLIndexedBufferRenderer(_gl,extensions,info,capabilities);info.programs=programCache.programs;_this.capabilities=capabilities;_this.extensions=extensions;_this.properties=properties;_this.renderLists=renderLists;_this.state=state;_this.info=info;}initGLContext();// xr\nconst xr=new WebXRManager(_this,_gl);this.xr=xr;// shadow map\nconst shadowMap=new WebGLShadowMap(_this,objects,capabilities.maxTextureSize);this.shadowMap=shadowMap;// API\nthis.getContext=function(){return _gl;};this.getContextAttributes=function(){return _gl.getContextAttributes();};this.forceContextLoss=function(){const extension=extensions.get('WEBGL_lose_context');if(extension)extension.loseContext();};this.forceContextRestore=function(){const extension=extensions.get('WEBGL_lose_context');if(extension)extension.restoreContext();};this.getPixelRatio=function(){return _pixelRatio;};this.setPixelRatio=function(value){if(value===undefined)return;_pixelRatio=value;this.setSize(_width,_height,false);};this.getSize=function(target){if(target===undefined){console.warn('WebGLRenderer: .getsize() now requires a Vector2 as an argument');target=new Vector2();}return target.set(_width,_height);};this.setSize=function(width,height,updateStyle){if(xr.isPresenting){console.warn('THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.');return;}_width=width;_height=height;_canvas.width=Math.floor(width*_pixelRatio);_canvas.height=Math.floor(height*_pixelRatio);if(updateStyle!==false){_canvas.style.width=width+'px';_canvas.style.height=height+'px';}this.setViewport(0,0,width,height);};this.getDrawingBufferSize=function(target){if(target===undefined){console.warn('WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument');target=new Vector2();}return target.set(_width*_pixelRatio,_height*_pixelRatio).floor();};this.setDrawingBufferSize=function(width,height,pixelRatio){_width=width;_height=height;_pixelRatio=pixelRatio;_canvas.width=Math.floor(width*pixelRatio);_canvas.height=Math.floor(height*pixelRatio);this.setViewport(0,0,width,height);};this.getCurrentViewport=function(target){if(target===undefined){console.warn('WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument');target=new Vector4();}return target.copy(_currentViewport);};this.getViewport=function(target){return target.copy(_viewport);};this.setViewport=function(x,y,width,height){if(x.isVector4){_viewport.set(x.x,x.y,x.z,x.w);}else{_viewport.set(x,y,width,height);}state.viewport(_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor());};this.getScissor=function(target){return target.copy(_scissor);};this.setScissor=function(x,y,width,height){if(x.isVector4){_scissor.set(x.x,x.y,x.z,x.w);}else{_scissor.set(x,y,width,height);}state.scissor(_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor());};this.getScissorTest=function(){return _scissorTest;};this.setScissorTest=function(boolean){state.setScissorTest(_scissorTest=boolean);};this.setOpaqueSort=function(method){_opaqueSort=method;};this.setTransparentSort=function(method){_transparentSort=method;};// Clearing\nthis.getClearColor=function(target){if(target===undefined){console.warn('WebGLRenderer: .getClearColor() now requires a Color as an argument');target=new Color();}return target.copy(background.getClearColor());};this.setClearColor=function(){background.setClearColor.apply(background,arguments);};this.getClearAlpha=function(){return background.getClearAlpha();};this.setClearAlpha=function(){background.setClearAlpha.apply(background,arguments);};this.clear=function(color,depth,stencil){let bits=0;if(color===undefined||color)bits|=16384;if(depth===undefined||depth)bits|=256;if(stencil===undefined||stencil)bits|=1024;_gl.clear(bits);};this.clearColor=function(){this.clear(true,false,false);};this.clearDepth=function(){this.clear(false,true,false);};this.clearStencil=function(){this.clear(false,false,true);};//\nthis.dispose=function(){_canvas.removeEventListener('webglcontextlost',onContextLost,false);_canvas.removeEventListener('webglcontextrestored',onContextRestore,false);renderLists.dispose();renderStates.dispose();properties.dispose();cubemaps.dispose();objects.dispose();bindingStates.dispose();xr.dispose();animation.stop();};// Events\nfunction onContextLost(event){event.preventDefault();console.log('THREE.WebGLRenderer: Context Lost.');_isContextLost=true;}function onContextRestore()/* event */{console.log('THREE.WebGLRenderer: Context Restored.');_isContextLost=false;initGLContext();}function onMaterialDispose(event){const material=event.target;material.removeEventListener('dispose',onMaterialDispose);deallocateMaterial(material);}// Buffer deallocation\nfunction deallocateMaterial(material){releaseMaterialProgramReference(material);properties.remove(material);}function releaseMaterialProgramReference(material){const programInfo=properties.get(material).program;if(programInfo!==undefined){programCache.releaseProgram(programInfo);}}// Buffer rendering\nfunction renderObjectImmediate(object,program){object.render(function(object){_this.renderBufferImmediate(object,program);});}this.renderBufferImmediate=function(object,program){bindingStates.initAttributes();const buffers=properties.get(object);if(object.hasPositions&&!buffers.position)buffers.position=_gl.createBuffer();if(object.hasNormals&&!buffers.normal)buffers.normal=_gl.createBuffer();if(object.hasUvs&&!buffers.uv)buffers.uv=_gl.createBuffer();if(object.hasColors&&!buffers.color)buffers.color=_gl.createBuffer();const programAttributes=program.getAttributes();if(object.hasPositions){_gl.bindBuffer(34962,buffers.position);_gl.bufferData(34962,object.positionArray,35048);bindingStates.enableAttribute(programAttributes.position);_gl.vertexAttribPointer(programAttributes.position,3,5126,false,0,0);}if(object.hasNormals){_gl.bindBuffer(34962,buffers.normal);_gl.bufferData(34962,object.normalArray,35048);bindingStates.enableAttribute(programAttributes.normal);_gl.vertexAttribPointer(programAttributes.normal,3,5126,false,0,0);}if(object.hasUvs){_gl.bindBuffer(34962,buffers.uv);_gl.bufferData(34962,object.uvArray,35048);bindingStates.enableAttribute(programAttributes.uv);_gl.vertexAttribPointer(programAttributes.uv,2,5126,false,0,0);}if(object.hasColors){_gl.bindBuffer(34962,buffers.color);_gl.bufferData(34962,object.colorArray,35048);bindingStates.enableAttribute(programAttributes.color);_gl.vertexAttribPointer(programAttributes.color,3,5126,false,0,0);}bindingStates.disableUnusedAttributes();_gl.drawArrays(4,0,object.count);object.count=0;};this.renderBufferDirect=function(camera,scene,geometry,material,object,group){if(scene===null)scene=_emptyScene;// renderBufferDirect second parameter used to be fog (could be null)\nconst frontFaceCW=object.isMesh&&object.matrixWorld.determinant()<0;const program=setProgram(camera,scene,material,object);state.setMaterial(material,frontFaceCW);//\nlet index=geometry.index;const position=geometry.attributes.position;//\nif(index===null){if(position===undefined||position.count===0)return;}else if(index.count===0){return;}//\nlet rangeFactor=1;if(material.wireframe===true){index=geometries.getWireframeAttribute(geometry);rangeFactor=2;}if(material.morphTargets||material.morphNormals){morphtargets.update(object,geometry,material,program);}bindingStates.setup(object,material,program,geometry,index);let attribute;let renderer=bufferRenderer;if(index!==null){attribute=attributes.get(index);renderer=indexedBufferRenderer;renderer.setIndex(attribute);}//\nconst dataCount=index!==null?index.count:position.count;const rangeStart=geometry.drawRange.start*rangeFactor;const rangeCount=geometry.drawRange.count*rangeFactor;const groupStart=group!==null?group.start*rangeFactor:0;const groupCount=group!==null?group.count*rangeFactor:Infinity;const drawStart=Math.max(rangeStart,groupStart);const drawEnd=Math.min(dataCount,rangeStart+rangeCount,groupStart+groupCount)-1;const drawCount=Math.max(0,drawEnd-drawStart+1);if(drawCount===0)return;//\nif(object.isMesh){if(material.wireframe===true){state.setLineWidth(material.wireframeLinewidth*getTargetPixelRatio());renderer.setMode(1);}else{renderer.setMode(4);}}else if(object.isLine){let lineWidth=material.linewidth;if(lineWidth===undefined)lineWidth=1;// Not using Line*Material\nstate.setLineWidth(lineWidth*getTargetPixelRatio());if(object.isLineSegments){renderer.setMode(1);}else if(object.isLineLoop){renderer.setMode(2);}else{renderer.setMode(3);}}else if(object.isPoints){renderer.setMode(0);}else if(object.isSprite){renderer.setMode(4);}if(object.isInstancedMesh){renderer.renderInstances(drawStart,drawCount,object.count);}else if(geometry.isInstancedBufferGeometry){const instanceCount=Math.min(geometry.instanceCount,geometry._maxInstanceCount);renderer.renderInstances(drawStart,drawCount,instanceCount);}else{renderer.render(drawStart,drawCount);}};// Compile\nthis.compile=function(scene,camera){currentRenderState=renderStates.get(scene);currentRenderState.init();scene.traverseVisible(function(object){if(object.isLight&&object.layers.test(camera.layers)){currentRenderState.pushLight(object);if(object.castShadow){currentRenderState.pushShadow(object);}}});currentRenderState.setupLights();const compiled=new WeakMap();scene.traverse(function(object){const material=object.material;if(material){if(Array.isArray(material)){for(let i=0;i<material.length;i++){const material2=material[i];if(compiled.has(material2)===false){initMaterial(material2,scene,object);compiled.set(material2);}}}else if(compiled.has(material)===false){initMaterial(material,scene,object);compiled.set(material);}}});};// Animation Loop\nlet onAnimationFrameCallback=null;function onAnimationFrame(time){if(xr.isPresenting)return;if(onAnimationFrameCallback)onAnimationFrameCallback(time);}const animation=new WebGLAnimation();animation.setAnimationLoop(onAnimationFrame);if(typeof window!=='undefined')animation.setContext(window);this.setAnimationLoop=function(callback){onAnimationFrameCallback=callback;xr.setAnimationLoop(callback);callback===null?animation.stop():animation.start();};// Rendering\nthis.render=function(scene,camera){let renderTarget,forceClear;if(arguments[2]!==undefined){console.warn('THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead.');renderTarget=arguments[2];}if(arguments[3]!==undefined){console.warn('THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead.');forceClear=arguments[3];}if(camera!==undefined&&camera.isCamera!==true){console.error('THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.');return;}if(_isContextLost===true)return;// reset caching for this frame\nbindingStates.resetDefaultState();_currentMaterialId=-1;_currentCamera=null;// update scene graph\nif(scene.autoUpdate===true)scene.updateMatrixWorld();// update camera matrices and frustum\nif(camera.parent===null)camera.updateMatrixWorld();if(xr.enabled===true&&xr.isPresenting===true){camera=xr.getCamera(camera);}//\nif(scene.isScene===true)scene.onBeforeRender(_this,scene,camera,renderTarget||_currentRenderTarget);currentRenderState=renderStates.get(scene,renderStateStack.length);currentRenderState.init();renderStateStack.push(currentRenderState);_projScreenMatrix.multiplyMatrices(camera.projectionMatrix,camera.matrixWorldInverse);_frustum.setFromProjectionMatrix(_projScreenMatrix);_localClippingEnabled=this.localClippingEnabled;_clippingEnabled=clipping.init(this.clippingPlanes,_localClippingEnabled,camera);currentRenderList=renderLists.get(scene,camera);currentRenderList.init();projectObject(scene,camera,0,_this.sortObjects);currentRenderList.finish();if(_this.sortObjects===true){currentRenderList.sort(_opaqueSort,_transparentSort);}//\nif(_clippingEnabled===true)clipping.beginShadows();const shadowsArray=currentRenderState.state.shadowsArray;shadowMap.render(shadowsArray,scene,camera);currentRenderState.setupLights();currentRenderState.setupLightsView(camera);if(_clippingEnabled===true)clipping.endShadows();//\nif(this.info.autoReset===true)this.info.reset();if(renderTarget!==undefined){this.setRenderTarget(renderTarget);}//\nbackground.render(currentRenderList,scene,camera,forceClear);// render scene\nconst opaqueObjects=currentRenderList.opaque;const transparentObjects=currentRenderList.transparent;if(opaqueObjects.length>0)renderObjects(opaqueObjects,scene,camera);if(transparentObjects.length>0)renderObjects(transparentObjects,scene,camera);//\nif(scene.isScene===true)scene.onAfterRender(_this,scene,camera);//\nif(_currentRenderTarget!==null){// Generate mipmap if we're using any kind of mipmap filtering\ntextures.updateRenderTargetMipmap(_currentRenderTarget);// resolve multisample renderbuffers to a single-sample texture if necessary\ntextures.updateMultisampleRenderTarget(_currentRenderTarget);}// Ensure depth buffer writing is enabled so it can be cleared on next render\nstate.buffers.depth.setTest(true);state.buffers.depth.setMask(true);state.buffers.color.setMask(true);state.setPolygonOffset(false);// _gl.finish();\nrenderStateStack.pop();if(renderStateStack.length>0){currentRenderState=renderStateStack[renderStateStack.length-1];}else{currentRenderState=null;}currentRenderList=null;};function projectObject(object,camera,groupOrder,sortObjects){if(object.visible===false)return;const visible=object.layers.test(camera.layers);if(visible){if(object.isGroup){groupOrder=object.renderOrder;}else if(object.isLOD){if(object.autoUpdate===true)object.update(camera);}else if(object.isLight){currentRenderState.pushLight(object);if(object.castShadow){currentRenderState.pushShadow(object);}}else if(object.isSprite){if(!object.frustumCulled||_frustum.intersectsSprite(object)){if(sortObjects){_vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);}const geometry=objects.update(object);const material=object.material;if(material.visible){currentRenderList.push(object,geometry,material,groupOrder,_vector3.z,null);}}}else if(object.isImmediateRenderObject){if(sortObjects){_vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);}currentRenderList.push(object,null,object.material,groupOrder,_vector3.z,null);}else if(object.isMesh||object.isLine||object.isPoints){if(object.isSkinnedMesh){// update skeleton only once in a frame\nif(object.skeleton.frame!==info.render.frame){object.skeleton.update();object.skeleton.frame=info.render.frame;}}if(!object.frustumCulled||_frustum.intersectsObject(object)){if(sortObjects){_vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);}const geometry=objects.update(object);const material=object.material;if(Array.isArray(material)){const groups=geometry.groups;for(let i=0,l=groups.length;i<l;i++){const group=groups[i];const groupMaterial=material[group.materialIndex];if(groupMaterial&&groupMaterial.visible){currentRenderList.push(object,geometry,groupMaterial,groupOrder,_vector3.z,group);}}}else if(material.visible){currentRenderList.push(object,geometry,material,groupOrder,_vector3.z,null);}}}}const children=object.children;for(let i=0,l=children.length;i<l;i++){projectObject(children[i],camera,groupOrder,sortObjects);}}function renderObjects(renderList,scene,camera){const overrideMaterial=scene.isScene===true?scene.overrideMaterial:null;for(let i=0,l=renderList.length;i<l;i++){const renderItem=renderList[i];const object=renderItem.object;const geometry=renderItem.geometry;const material=overrideMaterial===null?renderItem.material:overrideMaterial;const group=renderItem.group;if(camera.isArrayCamera){const cameras=camera.cameras;for(let j=0,jl=cameras.length;j<jl;j++){const camera2=cameras[j];if(object.layers.test(camera2.layers)){state.viewport(_currentViewport.copy(camera2.viewport));currentRenderState.setupLightsView(camera2);renderObject(object,scene,camera2,geometry,material,group);}}}else{renderObject(object,scene,camera,geometry,material,group);}}}function renderObject(object,scene,camera,geometry,material,group){object.onBeforeRender(_this,scene,camera,geometry,material,group);object.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse,object.matrixWorld);object.normalMatrix.getNormalMatrix(object.modelViewMatrix);if(object.isImmediateRenderObject){const program=setProgram(camera,scene,material,object);state.setMaterial(material);bindingStates.reset();renderObjectImmediate(object,program);}else{_this.renderBufferDirect(camera,scene,geometry,material,object,group);}object.onAfterRender(_this,scene,camera,geometry,material,group);}function initMaterial(material,scene,object){if(scene.isScene!==true)scene=_emptyScene;// scene could be a Mesh, Line, Points, ...\nconst materialProperties=properties.get(material);const lights=currentRenderState.state.lights;const shadowsArray=currentRenderState.state.shadowsArray;const lightsStateVersion=lights.state.version;const parameters=programCache.getParameters(material,lights.state,shadowsArray,scene,object);const programCacheKey=programCache.getProgramCacheKey(parameters);let program=materialProperties.program;let programChange=true;// always update environment and fog - changing these trigger an initMaterial call, but it's possible that the program doesn't change\nmaterialProperties.environment=material.isMeshStandardMaterial?scene.environment:null;materialProperties.fog=scene.fog;materialProperties.envMap=cubemaps.get(material.envMap||materialProperties.environment);if(program===undefined){// new material\nmaterial.addEventListener('dispose',onMaterialDispose);}else if(program.cacheKey!==programCacheKey){// changed glsl or parameters\nreleaseMaterialProgramReference(material);}else if(materialProperties.lightsStateVersion!==lightsStateVersion){programChange=false;}else if(parameters.shaderID!==undefined){// same glsl and uniform list\nreturn;}else{// only rebuild uniform list\nprogramChange=false;}if(programChange){parameters.uniforms=programCache.getUniforms(material);material.onBeforeCompile(parameters,_this);program=programCache.acquireProgram(parameters,programCacheKey);materialProperties.program=program;materialProperties.uniforms=parameters.uniforms;materialProperties.outputEncoding=parameters.outputEncoding;}const uniforms=materialProperties.uniforms;if(!material.isShaderMaterial&&!material.isRawShaderMaterial||material.clipping===true){materialProperties.numClippingPlanes=clipping.numPlanes;materialProperties.numIntersection=clipping.numIntersection;uniforms.clippingPlanes=clipping.uniform;}// store the light setup it was created for\nmaterialProperties.needsLights=materialNeedsLights(material);materialProperties.lightsStateVersion=lightsStateVersion;if(materialProperties.needsLights){// wire up the material to this renderer's lighting state\nuniforms.ambientLightColor.value=lights.state.ambient;uniforms.lightProbe.value=lights.state.probe;uniforms.directionalLights.value=lights.state.directional;uniforms.directionalLightShadows.value=lights.state.directionalShadow;uniforms.spotLights.value=lights.state.spot;uniforms.spotLightShadows.value=lights.state.spotShadow;uniforms.rectAreaLights.value=lights.state.rectArea;uniforms.ltc_1.value=lights.state.rectAreaLTC1;uniforms.ltc_2.value=lights.state.rectAreaLTC2;uniforms.pointLights.value=lights.state.point;uniforms.pointLightShadows.value=lights.state.pointShadow;uniforms.hemisphereLights.value=lights.state.hemi;uniforms.directionalShadowMap.value=lights.state.directionalShadowMap;uniforms.directionalShadowMatrix.value=lights.state.directionalShadowMatrix;uniforms.spotShadowMap.value=lights.state.spotShadowMap;uniforms.spotShadowMatrix.value=lights.state.spotShadowMatrix;uniforms.pointShadowMap.value=lights.state.pointShadowMap;uniforms.pointShadowMatrix.value=lights.state.pointShadowMatrix;// TODO (abelnation): add area lights shadow info to uniforms\n}const progUniforms=materialProperties.program.getUniforms();const uniformsList=WebGLUniforms.seqWithValue(progUniforms.seq,uniforms);materialProperties.uniformsList=uniformsList;}function setProgram(camera,scene,material,object){if(scene.isScene!==true)scene=_emptyScene;// scene could be a Mesh, Line, Points, ...\ntextures.resetTextureUnits();const fog=scene.fog;const environment=material.isMeshStandardMaterial?scene.environment:null;const encoding=_currentRenderTarget===null?_this.outputEncoding:_currentRenderTarget.texture.encoding;const envMap=cubemaps.get(material.envMap||environment);const materialProperties=properties.get(material);const lights=currentRenderState.state.lights;if(_clippingEnabled===true){if(_localClippingEnabled===true||camera!==_currentCamera){const useCache=camera===_currentCamera&&material.id===_currentMaterialId;// we might want to call this function with some ClippingGroup\n// object instead of the material, once it becomes feasible\n// (#8465, #8379)\nclipping.setState(material,camera,useCache);}}if(material.version===materialProperties.__version){if(material.fog&&materialProperties.fog!==fog){initMaterial(material,scene,object);}else if(materialProperties.environment!==environment){initMaterial(material,scene,object);}else if(materialProperties.needsLights&&materialProperties.lightsStateVersion!==lights.state.version){initMaterial(material,scene,object);}else if(materialProperties.numClippingPlanes!==undefined&&(materialProperties.numClippingPlanes!==clipping.numPlanes||materialProperties.numIntersection!==clipping.numIntersection)){initMaterial(material,scene,object);}else if(materialProperties.outputEncoding!==encoding){initMaterial(material,scene,object);}else if(materialProperties.envMap!==envMap){initMaterial(material,scene,object);}}else{initMaterial(material,scene,object);materialProperties.__version=material.version;}let refreshProgram=false;let refreshMaterial=false;let refreshLights=false;const program=materialProperties.program,p_uniforms=program.getUniforms(),m_uniforms=materialProperties.uniforms;if(state.useProgram(program.program)){refreshProgram=true;refreshMaterial=true;refreshLights=true;}if(material.id!==_currentMaterialId){_currentMaterialId=material.id;refreshMaterial=true;}if(refreshProgram||_currentCamera!==camera){p_uniforms.setValue(_gl,'projectionMatrix',camera.projectionMatrix);if(capabilities.logarithmicDepthBuffer){p_uniforms.setValue(_gl,'logDepthBufFC',2.0/(Math.log(camera.far+1.0)/Math.LN2));}if(_currentCamera!==camera){_currentCamera=camera;// lighting uniforms depend on the camera so enforce an update\n// now, in case this material supports lights - or later, when\n// the next material that does gets activated:\nrefreshMaterial=true;// set to true on material change\nrefreshLights=true;// remains set until update done\n}// load material specific uniforms\n// (shader material also gets them for the sake of genericity)\nif(material.isShaderMaterial||material.isMeshPhongMaterial||material.isMeshToonMaterial||material.isMeshStandardMaterial||material.envMap){const uCamPos=p_uniforms.map.cameraPosition;if(uCamPos!==undefined){uCamPos.setValue(_gl,_vector3.setFromMatrixPosition(camera.matrixWorld));}}if(material.isMeshPhongMaterial||material.isMeshToonMaterial||material.isMeshLambertMaterial||material.isMeshBasicMaterial||material.isMeshStandardMaterial||material.isShaderMaterial){p_uniforms.setValue(_gl,'isOrthographic',camera.isOrthographicCamera===true);}if(material.isMeshPhongMaterial||material.isMeshToonMaterial||material.isMeshLambertMaterial||material.isMeshBasicMaterial||material.isMeshStandardMaterial||material.isShaderMaterial||material.isShadowMaterial||material.skinning){p_uniforms.setValue(_gl,'viewMatrix',camera.matrixWorldInverse);}}// skinning uniforms must be set even if material didn't change\n// auto-setting of texture unit for bone texture must go before other textures\n// otherwise textures used for skinning can take over texture units reserved for other material textures\nif(material.skinning){p_uniforms.setOptional(_gl,object,'bindMatrix');p_uniforms.setOptional(_gl,object,'bindMatrixInverse');const skeleton=object.skeleton;if(skeleton){const bones=skeleton.bones;if(capabilities.floatVertexTextures){if(skeleton.boneTexture===null){// layout (1 matrix = 4 pixels)\n//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\nlet size=Math.sqrt(bones.length*4);// 4 pixels needed for 1 matrix\nsize=MathUtils.ceilPowerOfTwo(size);size=Math.max(size,4);const boneMatrices=new Float32Array(size*size*4);// 4 floats per RGBA pixel\nboneMatrices.set(skeleton.boneMatrices);// copy current values\nconst boneTexture=new DataTexture(boneMatrices,size,size,RGBAFormat,FloatType);skeleton.boneMatrices=boneMatrices;skeleton.boneTexture=boneTexture;skeleton.boneTextureSize=size;}p_uniforms.setValue(_gl,'boneTexture',skeleton.boneTexture,textures);p_uniforms.setValue(_gl,'boneTextureSize',skeleton.boneTextureSize);}else{p_uniforms.setOptional(_gl,skeleton,'boneMatrices');}}}if(refreshMaterial||materialProperties.receiveShadow!==object.receiveShadow){materialProperties.receiveShadow=object.receiveShadow;p_uniforms.setValue(_gl,'receiveShadow',object.receiveShadow);}if(refreshMaterial){p_uniforms.setValue(_gl,'toneMappingExposure',_this.toneMappingExposure);if(materialProperties.needsLights){// the current material requires lighting info\n// note: all lighting uniforms are always set correctly\n// they simply reference the renderer's state for their\n// values\n//\n// use the current material's .needsUpdate flags to set\n// the GL state when required\nmarkUniformsLightsNeedsUpdate(m_uniforms,refreshLights);}// refresh uniforms common to several materials\nif(fog&&material.fog){materials.refreshFogUniforms(m_uniforms,fog);}materials.refreshMaterialUniforms(m_uniforms,material,_pixelRatio,_height);WebGLUniforms.upload(_gl,materialProperties.uniformsList,m_uniforms,textures);}if(material.isShaderMaterial&&material.uniformsNeedUpdate===true){WebGLUniforms.upload(_gl,materialProperties.uniformsList,m_uniforms,textures);material.uniformsNeedUpdate=false;}if(material.isSpriteMaterial){p_uniforms.setValue(_gl,'center',object.center);}// common matrices\np_uniforms.setValue(_gl,'modelViewMatrix',object.modelViewMatrix);p_uniforms.setValue(_gl,'normalMatrix',object.normalMatrix);p_uniforms.setValue(_gl,'modelMatrix',object.matrixWorld);return program;}// If uniforms are marked as clean, they don't need to be loaded to the GPU.\nfunction markUniformsLightsNeedsUpdate(uniforms,value){uniforms.ambientLightColor.needsUpdate=value;uniforms.lightProbe.needsUpdate=value;uniforms.directionalLights.needsUpdate=value;uniforms.directionalLightShadows.needsUpdate=value;uniforms.pointLights.needsUpdate=value;uniforms.pointLightShadows.needsUpdate=value;uniforms.spotLights.needsUpdate=value;uniforms.spotLightShadows.needsUpdate=value;uniforms.rectAreaLights.needsUpdate=value;uniforms.hemisphereLights.needsUpdate=value;}function materialNeedsLights(material){return material.isMeshLambertMaterial||material.isMeshToonMaterial||material.isMeshPhongMaterial||material.isMeshStandardMaterial||material.isShadowMaterial||material.isShaderMaterial&&material.lights===true;}//\nthis.setFramebuffer=function(value){if(_framebuffer!==value&&_currentRenderTarget===null)_gl.bindFramebuffer(36160,value);_framebuffer=value;};this.getActiveCubeFace=function(){return _currentActiveCubeFace;};this.getActiveMipmapLevel=function(){return _currentActiveMipmapLevel;};this.getRenderList=function(){return currentRenderList;};this.setRenderList=function(renderList){currentRenderList=renderList;};this.getRenderTarget=function(){return _currentRenderTarget;};this.setRenderTarget=function(renderTarget,activeCubeFace=0,activeMipmapLevel=0){_currentRenderTarget=renderTarget;_currentActiveCubeFace=activeCubeFace;_currentActiveMipmapLevel=activeMipmapLevel;if(renderTarget&&properties.get(renderTarget).__webglFramebuffer===undefined){textures.setupRenderTarget(renderTarget);}let framebuffer=_framebuffer;let isCube=false;if(renderTarget){const __webglFramebuffer=properties.get(renderTarget).__webglFramebuffer;if(renderTarget.isWebGLCubeRenderTarget){framebuffer=__webglFramebuffer[activeCubeFace];isCube=true;}else if(renderTarget.isWebGLMultisampleRenderTarget){framebuffer=properties.get(renderTarget).__webglMultisampledFramebuffer;}else{framebuffer=__webglFramebuffer;}_currentViewport.copy(renderTarget.viewport);_currentScissor.copy(renderTarget.scissor);_currentScissorTest=renderTarget.scissorTest;}else{_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor();_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor();_currentScissorTest=_scissorTest;}if(_currentFramebuffer!==framebuffer){_gl.bindFramebuffer(36160,framebuffer);_currentFramebuffer=framebuffer;}state.viewport(_currentViewport);state.scissor(_currentScissor);state.setScissorTest(_currentScissorTest);if(isCube){const textureProperties=properties.get(renderTarget.texture);_gl.framebufferTexture2D(36160,36064,34069+activeCubeFace,textureProperties.__webglTexture,activeMipmapLevel);}};this.readRenderTargetPixels=function(renderTarget,x,y,width,height,buffer,activeCubeFaceIndex){if(!(renderTarget&&renderTarget.isWebGLRenderTarget)){console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.');return;}let framebuffer=properties.get(renderTarget).__webglFramebuffer;if(renderTarget.isWebGLCubeRenderTarget&&activeCubeFaceIndex!==undefined){framebuffer=framebuffer[activeCubeFaceIndex];}if(framebuffer){let restore=false;if(framebuffer!==_currentFramebuffer){_gl.bindFramebuffer(36160,framebuffer);restore=true;}try{const texture=renderTarget.texture;const textureFormat=texture.format;const textureType=texture.type;if(textureFormat!==RGBAFormat&&utils.convert(textureFormat)!==_gl.getParameter(35739)){console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.');return;}const halfFloatSupportedByExt=textureType===HalfFloatType&&(extensions.has('EXT_color_buffer_half_float')||capabilities.isWebGL2&&extensions.has('EXT_color_buffer_float'));if(textureType!==UnsignedByteType&&utils.convert(textureType)!==_gl.getParameter(35738)&&// IE11, Edge and Chrome Mac < 52 (#9513)\n!(textureType===FloatType&&(capabilities.isWebGL2||extensions.has('OES_texture_float')||extensions.has('WEBGL_color_buffer_float')))&&// Chrome Mac >= 52 and Firefox\n!halfFloatSupportedByExt){console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.');return;}if(_gl.checkFramebufferStatus(36160)===36053){// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\nif(x>=0&&x<=renderTarget.width-width&&y>=0&&y<=renderTarget.height-height){_gl.readPixels(x,y,width,height,utils.convert(textureFormat),utils.convert(textureType),buffer);}}else{console.error('THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.');}}finally{if(restore){_gl.bindFramebuffer(36160,_currentFramebuffer);}}}};this.copyFramebufferToTexture=function(position,texture,level=0){const levelScale=Math.pow(2,-level);const width=Math.floor(texture.image.width*levelScale);const height=Math.floor(texture.image.height*levelScale);const glFormat=utils.convert(texture.format);textures.setTexture2D(texture,0);_gl.copyTexImage2D(3553,level,glFormat,position.x,position.y,width,height,0);state.unbindTexture();};this.copyTextureToTexture=function(position,srcTexture,dstTexture,level=0){const width=srcTexture.image.width;const height=srcTexture.image.height;const glFormat=utils.convert(dstTexture.format);const glType=utils.convert(dstTexture.type);textures.setTexture2D(dstTexture,0);// As another texture upload may have changed pixelStorei\n// parameters, make sure they are correct for the dstTexture\n_gl.pixelStorei(37440,dstTexture.flipY);_gl.pixelStorei(37441,dstTexture.premultiplyAlpha);_gl.pixelStorei(3317,dstTexture.unpackAlignment);if(srcTexture.isDataTexture){_gl.texSubImage2D(3553,level,position.x,position.y,width,height,glFormat,glType,srcTexture.image.data);}else{if(srcTexture.isCompressedTexture){_gl.compressedTexSubImage2D(3553,level,position.x,position.y,srcTexture.mipmaps[0].width,srcTexture.mipmaps[0].height,glFormat,srcTexture.mipmaps[0].data);}else{_gl.texSubImage2D(3553,level,position.x,position.y,glFormat,glType,srcTexture.image);}}// Generate mipmaps only when copying level 0\nif(level===0&&dstTexture.generateMipmaps)_gl.generateMipmap(3553);state.unbindTexture();};this.initTexture=function(texture){textures.setTexture2D(texture,0);state.unbindTexture();};this.resetState=function(){state.reset();bindingStates.reset();};if(typeof __THREE_DEVTOOLS__!=='undefined'){__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('observe',{detail:this}));// eslint-disable-line no-undef\n}}function WebGL1Renderer(parameters){WebGLRenderer.call(this,parameters);}WebGL1Renderer.prototype=Object.assign(Object.create(WebGLRenderer.prototype),{constructor:WebGL1Renderer,isWebGL1Renderer:true});class FogExp2{constructor(color,density){Object.defineProperty(this,'isFogExp2',{value:true});this.name='';this.color=new Color(color);this.density=density!==undefined?density:0.00025;}clone(){return new FogExp2(this.color,this.density);}toJSON()/* meta */{return{type:'FogExp2',color:this.color.getHex(),density:this.density};}}class Fog{constructor(color,near,far){Object.defineProperty(this,'isFog',{value:true});this.name='';this.color=new Color(color);this.near=near!==undefined?near:1;this.far=far!==undefined?far:1000;}clone(){return new Fog(this.color,this.near,this.far);}toJSON()/* meta */{return{type:'Fog',color:this.color.getHex(),near:this.near,far:this.far};}}class Scene extends Object3D{constructor(){super();Object.defineProperty(this,'isScene',{value:true});this.type='Scene';this.background=null;this.environment=null;this.fog=null;this.overrideMaterial=null;this.autoUpdate=true;// checked by the renderer\nif(typeof __THREE_DEVTOOLS__!=='undefined'){__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('observe',{detail:this}));// eslint-disable-line no-undef\n}}copy(source,recursive){super.copy(source,recursive);if(source.background!==null)this.background=source.background.clone();if(source.environment!==null)this.environment=source.environment.clone();if(source.fog!==null)this.fog=source.fog.clone();if(source.overrideMaterial!==null)this.overrideMaterial=source.overrideMaterial.clone();this.autoUpdate=source.autoUpdate;this.matrixAutoUpdate=source.matrixAutoUpdate;return this;}toJSON(meta){const data=super.toJSON(meta);if(this.background!==null)data.object.background=this.background.toJSON(meta);if(this.environment!==null)data.object.environment=this.environment.toJSON(meta);if(this.fog!==null)data.object.fog=this.fog.toJSON();return data;}}function InterleavedBuffer(array,stride){this.array=array;this.stride=stride;this.count=array!==undefined?array.length/stride:0;this.usage=StaticDrawUsage;this.updateRange={offset:0,count:-1};this.version=0;this.uuid=MathUtils.generateUUID();}Object.defineProperty(InterleavedBuffer.prototype,'needsUpdate',{set:function(value){if(value===true)this.version++;}});Object.assign(InterleavedBuffer.prototype,{isInterleavedBuffer:true,onUploadCallback:function(){},setUsage:function(value){this.usage=value;return this;},copy:function(source){this.array=new source.array.constructor(source.array);this.count=source.count;this.stride=source.stride;this.usage=source.usage;return this;},copyAt:function(index1,attribute,index2){index1*=this.stride;index2*=attribute.stride;for(let i=0,l=this.stride;i<l;i++){this.array[index1+i]=attribute.array[index2+i];}return this;},set:function(value,offset=0){this.array.set(value,offset);return this;},clone:function(data){if(data.arrayBuffers===undefined){data.arrayBuffers={};}if(this.array.buffer._uuid===undefined){this.array.buffer._uuid=MathUtils.generateUUID();}if(data.arrayBuffers[this.array.buffer._uuid]===undefined){data.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer;}const array=new this.array.constructor(data.arrayBuffers[this.array.buffer._uuid]);const ib=new InterleavedBuffer(array,this.stride);ib.setUsage(this.usage);return ib;},onUpload:function(callback){this.onUploadCallback=callback;return this;},toJSON:function(data){if(data.arrayBuffers===undefined){data.arrayBuffers={};}// generate UUID for array buffer if necessary\nif(this.array.buffer._uuid===undefined){this.array.buffer._uuid=MathUtils.generateUUID();}if(data.arrayBuffers[this.array.buffer._uuid]===undefined){data.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer));}//\nreturn{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride};}});const _vector$6=new Vector3();function InterleavedBufferAttribute(interleavedBuffer,itemSize,offset,normalized){this.name='';this.data=interleavedBuffer;this.itemSize=itemSize;this.offset=offset;this.normalized=normalized===true;}Object.defineProperties(InterleavedBufferAttribute.prototype,{count:{get:function(){return this.data.count;}},array:{get:function(){return this.data.array;}},needsUpdate:{set:function(value){this.data.needsUpdate=value;}}});Object.assign(InterleavedBufferAttribute.prototype,{isInterleavedBufferAttribute:true,applyMatrix4:function(m){for(let i=0,l=this.data.count;i<l;i++){_vector$6.x=this.getX(i);_vector$6.y=this.getY(i);_vector$6.z=this.getZ(i);_vector$6.applyMatrix4(m);this.setXYZ(i,_vector$6.x,_vector$6.y,_vector$6.z);}return this;},setX:function(index,x){this.data.array[index*this.data.stride+this.offset]=x;return this;},setY:function(index,y){this.data.array[index*this.data.stride+this.offset+1]=y;return this;},setZ:function(index,z){this.data.array[index*this.data.stride+this.offset+2]=z;return this;},setW:function(index,w){this.data.array[index*this.data.stride+this.offset+3]=w;return this;},getX:function(index){return this.data.array[index*this.data.stride+this.offset];},getY:function(index){return this.data.array[index*this.data.stride+this.offset+1];},getZ:function(index){return this.data.array[index*this.data.stride+this.offset+2];},getW:function(index){return this.data.array[index*this.data.stride+this.offset+3];},setXY:function(index,x,y){index=index*this.data.stride+this.offset;this.data.array[index+0]=x;this.data.array[index+1]=y;return this;},setXYZ:function(index,x,y,z){index=index*this.data.stride+this.offset;this.data.array[index+0]=x;this.data.array[index+1]=y;this.data.array[index+2]=z;return this;},setXYZW:function(index,x,y,z,w){index=index*this.data.stride+this.offset;this.data.array[index+0]=x;this.data.array[index+1]=y;this.data.array[index+2]=z;this.data.array[index+3]=w;return this;},clone:function(data){if(data===undefined){console.log('THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.');const array=[];for(let i=0;i<this.count;i++){const index=i*this.data.stride+this.offset;for(let j=0;j<this.itemSize;j++){array.push(this.data.array[index+j]);}}return new BufferAttribute(new this.array.constructor(array),this.itemSize,this.normalized);}else{if(data.interleavedBuffers===undefined){data.interleavedBuffers={};}if(data.interleavedBuffers[this.data.uuid]===undefined){data.interleavedBuffers[this.data.uuid]=this.data.clone(data);}return new InterleavedBufferAttribute(data.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized);}},toJSON:function(data){if(data===undefined){console.log('THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.');const array=[];for(let i=0;i<this.count;i++){const index=i*this.data.stride+this.offset;for(let j=0;j<this.itemSize;j++){array.push(this.data.array[index+j]);}}// deinterleave data and save it as an ordinary buffer attribute for now\nreturn{itemSize:this.itemSize,type:this.array.constructor.name,array:array,normalized:this.normalized};}else{// save as true interlaved attribtue\nif(data.interleavedBuffers===undefined){data.interleavedBuffers={};}if(data.interleavedBuffers[this.data.uuid]===undefined){data.interleavedBuffers[this.data.uuid]=this.data.toJSON(data);}return{isInterleavedBufferAttribute:true,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized};}}});/**\n * parameters = {\n *  color: <hex>,\n *  map: new THREE.Texture( <Image> ),\n *  alphaMap: new THREE.Texture( <Image> ),\n *  rotation: <float>,\n *  sizeAttenuation: <bool>\n * }\n */function SpriteMaterial(parameters){Material.call(this);this.type='SpriteMaterial';this.color=new Color(0xffffff);this.map=null;this.alphaMap=null;this.rotation=0;this.sizeAttenuation=true;this.transparent=true;this.setValues(parameters);}SpriteMaterial.prototype=Object.create(Material.prototype);SpriteMaterial.prototype.constructor=SpriteMaterial;SpriteMaterial.prototype.isSpriteMaterial=true;SpriteMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.color.copy(source.color);this.map=source.map;this.alphaMap=source.alphaMap;this.rotation=source.rotation;this.sizeAttenuation=source.sizeAttenuation;return this;};let _geometry;const _intersectPoint=new Vector3();const _worldScale=new Vector3();const _mvPosition=new Vector3();const _alignedPosition=new Vector2();const _rotatedPosition=new Vector2();const _viewWorldMatrix=new Matrix4();const _vA$1=new Vector3();const _vB$1=new Vector3();const _vC$1=new Vector3();const _uvA$1=new Vector2();const _uvB$1=new Vector2();const _uvC$1=new Vector2();function Sprite(material){Object3D.call(this);this.type='Sprite';if(_geometry===undefined){_geometry=new BufferGeometry();const float32Array=new Float32Array([-0.5,-0.5,0,0,0,0.5,-0.5,0,1,0,0.5,0.5,0,1,1,-0.5,0.5,0,0,1]);const interleavedBuffer=new InterleavedBuffer(float32Array,5);_geometry.setIndex([0,1,2,0,2,3]);_geometry.setAttribute('position',new InterleavedBufferAttribute(interleavedBuffer,3,0,false));_geometry.setAttribute('uv',new InterleavedBufferAttribute(interleavedBuffer,2,3,false));}this.geometry=_geometry;this.material=material!==undefined?material:new SpriteMaterial();this.center=new Vector2(0.5,0.5);}Sprite.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Sprite,isSprite:true,raycast:function(raycaster,intersects){if(raycaster.camera===null){console.error('THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.');}_worldScale.setFromMatrixScale(this.matrixWorld);_viewWorldMatrix.copy(raycaster.camera.matrixWorld);this.modelViewMatrix.multiplyMatrices(raycaster.camera.matrixWorldInverse,this.matrixWorld);_mvPosition.setFromMatrixPosition(this.modelViewMatrix);if(raycaster.camera.isPerspectiveCamera&&this.material.sizeAttenuation===false){_worldScale.multiplyScalar(-_mvPosition.z);}const rotation=this.material.rotation;let sin,cos;if(rotation!==0){cos=Math.cos(rotation);sin=Math.sin(rotation);}const center=this.center;transformVertex(_vA$1.set(-0.5,-0.5,0),_mvPosition,center,_worldScale,sin,cos);transformVertex(_vB$1.set(0.5,-0.5,0),_mvPosition,center,_worldScale,sin,cos);transformVertex(_vC$1.set(0.5,0.5,0),_mvPosition,center,_worldScale,sin,cos);_uvA$1.set(0,0);_uvB$1.set(1,0);_uvC$1.set(1,1);// check first triangle\nlet intersect=raycaster.ray.intersectTriangle(_vA$1,_vB$1,_vC$1,false,_intersectPoint);if(intersect===null){// check second triangle\ntransformVertex(_vB$1.set(-0.5,0.5,0),_mvPosition,center,_worldScale,sin,cos);_uvB$1.set(0,1);intersect=raycaster.ray.intersectTriangle(_vA$1,_vC$1,_vB$1,false,_intersectPoint);if(intersect===null){return;}}const distance=raycaster.ray.origin.distanceTo(_intersectPoint);if(distance<raycaster.near||distance>raycaster.far)return;intersects.push({distance:distance,point:_intersectPoint.clone(),uv:Triangle.getUV(_intersectPoint,_vA$1,_vB$1,_vC$1,_uvA$1,_uvB$1,_uvC$1,new Vector2()),face:null,object:this});},copy:function(source){Object3D.prototype.copy.call(this,source);if(source.center!==undefined)this.center.copy(source.center);this.material=source.material;return this;}});function transformVertex(vertexPosition,mvPosition,center,scale,sin,cos){// compute position in camera space\n_alignedPosition.subVectors(vertexPosition,center).addScalar(0.5).multiply(scale);// to check if rotation is not zero\nif(sin!==undefined){_rotatedPosition.x=cos*_alignedPosition.x-sin*_alignedPosition.y;_rotatedPosition.y=sin*_alignedPosition.x+cos*_alignedPosition.y;}else{_rotatedPosition.copy(_alignedPosition);}vertexPosition.copy(mvPosition);vertexPosition.x+=_rotatedPosition.x;vertexPosition.y+=_rotatedPosition.y;// transform to world space\nvertexPosition.applyMatrix4(_viewWorldMatrix);}const _v1$4=new Vector3();const _v2$2=new Vector3();function LOD(){Object3D.call(this);this._currentLevel=0;this.type='LOD';Object.defineProperties(this,{levels:{enumerable:true,value:[]}});this.autoUpdate=true;}LOD.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:LOD,isLOD:true,copy:function(source){Object3D.prototype.copy.call(this,source,false);const levels=source.levels;for(let i=0,l=levels.length;i<l;i++){const level=levels[i];this.addLevel(level.object.clone(),level.distance);}this.autoUpdate=source.autoUpdate;return this;},addLevel:function(object,distance=0){distance=Math.abs(distance);const levels=this.levels;let l;for(l=0;l<levels.length;l++){if(distance<levels[l].distance){break;}}levels.splice(l,0,{distance:distance,object:object});this.add(object);return this;},getCurrentLevel:function(){return this._currentLevel;},getObjectForDistance:function(distance){const levels=this.levels;if(levels.length>0){let i,l;for(i=1,l=levels.length;i<l;i++){if(distance<levels[i].distance){break;}}return levels[i-1].object;}return null;},raycast:function(raycaster,intersects){const levels=this.levels;if(levels.length>0){_v1$4.setFromMatrixPosition(this.matrixWorld);const distance=raycaster.ray.origin.distanceTo(_v1$4);this.getObjectForDistance(distance).raycast(raycaster,intersects);}},update:function(camera){const levels=this.levels;if(levels.length>1){_v1$4.setFromMatrixPosition(camera.matrixWorld);_v2$2.setFromMatrixPosition(this.matrixWorld);const distance=_v1$4.distanceTo(_v2$2)/camera.zoom;levels[0].object.visible=true;let i,l;for(i=1,l=levels.length;i<l;i++){if(distance>=levels[i].distance){levels[i-1].object.visible=false;levels[i].object.visible=true;}else{break;}}this._currentLevel=i-1;for(;i<l;i++){levels[i].object.visible=false;}}},toJSON:function(meta){const data=Object3D.prototype.toJSON.call(this,meta);if(this.autoUpdate===false)data.object.autoUpdate=false;data.object.levels=[];const levels=this.levels;for(let i=0,l=levels.length;i<l;i++){const level=levels[i];data.object.levels.push({object:level.object.uuid,distance:level.distance});}return data;}});const _basePosition=new Vector3();const _skinIndex=new Vector4();const _skinWeight=new Vector4();const _vector$7=new Vector3();const _matrix$1=new Matrix4();function SkinnedMesh(geometry,material){if(geometry&&geometry.isGeometry){console.error('THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');}Mesh.call(this,geometry,material);this.type='SkinnedMesh';this.bindMode='attached';this.bindMatrix=new Matrix4();this.bindMatrixInverse=new Matrix4();}SkinnedMesh.prototype=Object.assign(Object.create(Mesh.prototype),{constructor:SkinnedMesh,isSkinnedMesh:true,copy:function(source){Mesh.prototype.copy.call(this,source);this.bindMode=source.bindMode;this.bindMatrix.copy(source.bindMatrix);this.bindMatrixInverse.copy(source.bindMatrixInverse);this.skeleton=source.skeleton;return this;},bind:function(skeleton,bindMatrix){this.skeleton=skeleton;if(bindMatrix===undefined){this.updateMatrixWorld(true);this.skeleton.calculateInverses();bindMatrix=this.matrixWorld;}this.bindMatrix.copy(bindMatrix);this.bindMatrixInverse.copy(bindMatrix).invert();},pose:function(){this.skeleton.pose();},normalizeSkinWeights:function(){const vector=new Vector4();const skinWeight=this.geometry.attributes.skinWeight;for(let i=0,l=skinWeight.count;i<l;i++){vector.x=skinWeight.getX(i);vector.y=skinWeight.getY(i);vector.z=skinWeight.getZ(i);vector.w=skinWeight.getW(i);const scale=1.0/vector.manhattanLength();if(scale!==Infinity){vector.multiplyScalar(scale);}else{vector.set(1,0,0,0);// do something reasonable\n}skinWeight.setXYZW(i,vector.x,vector.y,vector.z,vector.w);}},updateMatrixWorld:function(force){Mesh.prototype.updateMatrixWorld.call(this,force);if(this.bindMode==='attached'){this.bindMatrixInverse.copy(this.matrixWorld).invert();}else if(this.bindMode==='detached'){this.bindMatrixInverse.copy(this.bindMatrix).invert();}else{console.warn('THREE.SkinnedMesh: Unrecognized bindMode: '+this.bindMode);}},boneTransform:function(index,target){const skeleton=this.skeleton;const geometry=this.geometry;_skinIndex.fromBufferAttribute(geometry.attributes.skinIndex,index);_skinWeight.fromBufferAttribute(geometry.attributes.skinWeight,index);_basePosition.fromBufferAttribute(geometry.attributes.position,index).applyMatrix4(this.bindMatrix);target.set(0,0,0);for(let i=0;i<4;i++){const weight=_skinWeight.getComponent(i);if(weight!==0){const boneIndex=_skinIndex.getComponent(i);_matrix$1.multiplyMatrices(skeleton.bones[boneIndex].matrixWorld,skeleton.boneInverses[boneIndex]);target.addScaledVector(_vector$7.copy(_basePosition).applyMatrix4(_matrix$1),weight);}}return target.applyMatrix4(this.bindMatrixInverse);}});function Bone(){Object3D.call(this);this.type='Bone';}Bone.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Bone,isBone:true});const _offsetMatrix=new Matrix4();const _identityMatrix=new Matrix4();function Skeleton(bones=[],boneInverses=[]){this.uuid=MathUtils.generateUUID();this.bones=bones.slice(0);this.boneInverses=boneInverses;this.boneMatrices=null;this.boneTexture=null;this.boneTextureSize=0;this.frame=-1;this.init();}Object.assign(Skeleton.prototype,{init:function(){const bones=this.bones;const boneInverses=this.boneInverses;this.boneMatrices=new Float32Array(bones.length*16);// calculate inverse bone matrices if necessary\nif(boneInverses.length===0){this.calculateInverses();}else{// handle special case\nif(bones.length!==boneInverses.length){console.warn('THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.');this.boneInverses=[];for(let i=0,il=this.bones.length;i<il;i++){this.boneInverses.push(new Matrix4());}}}},calculateInverses:function(){this.boneInverses.length=0;for(let i=0,il=this.bones.length;i<il;i++){const inverse=new Matrix4();if(this.bones[i]){inverse.copy(this.bones[i].matrixWorld).invert();}this.boneInverses.push(inverse);}},pose:function(){// recover the bind-time world matrices\nfor(let i=0,il=this.bones.length;i<il;i++){const bone=this.bones[i];if(bone){bone.matrixWorld.copy(this.boneInverses[i]).invert();}}// compute the local matrices, positions, rotations and scales\nfor(let i=0,il=this.bones.length;i<il;i++){const bone=this.bones[i];if(bone){if(bone.parent&&bone.parent.isBone){bone.matrix.copy(bone.parent.matrixWorld).invert();bone.matrix.multiply(bone.matrixWorld);}else{bone.matrix.copy(bone.matrixWorld);}bone.matrix.decompose(bone.position,bone.quaternion,bone.scale);}}},update:function(){const bones=this.bones;const boneInverses=this.boneInverses;const boneMatrices=this.boneMatrices;const boneTexture=this.boneTexture;// flatten bone matrices to array\nfor(let i=0,il=bones.length;i<il;i++){// compute the offset between the current and the original transform\nconst matrix=bones[i]?bones[i].matrixWorld:_identityMatrix;_offsetMatrix.multiplyMatrices(matrix,boneInverses[i]);_offsetMatrix.toArray(boneMatrices,i*16);}if(boneTexture!==null){boneTexture.needsUpdate=true;}},clone:function(){return new Skeleton(this.bones,this.boneInverses);},getBoneByName:function(name){for(let i=0,il=this.bones.length;i<il;i++){const bone=this.bones[i];if(bone.name===name){return bone;}}return undefined;},dispose:function(){if(this.boneTexture!==null){this.boneTexture.dispose();this.boneTexture=null;}},fromJSON:function(json,bones){this.uuid=json.uuid;for(let i=0,l=json.bones.length;i<l;i++){const uuid=json.bones[i];let bone=bones[uuid];if(bone===undefined){console.warn('THREE.Skeleton: No bone found with UUID:',uuid);bone=new Bone();}this.bones.push(bone);this.boneInverses.push(new Matrix4().fromArray(json.boneInverses[i]));}this.init();return this;},toJSON:function(){const data={metadata:{version:4.5,type:'Skeleton',generator:'Skeleton.toJSON'},bones:[],boneInverses:[]};data.uuid=this.uuid;const bones=this.bones;const boneInverses=this.boneInverses;for(let i=0,l=bones.length;i<l;i++){const bone=bones[i];data.bones.push(bone.uuid);const boneInverse=boneInverses[i];data.boneInverses.push(boneInverse.toArray());}return data;}});const _instanceLocalMatrix=new Matrix4();const _instanceWorldMatrix=new Matrix4();const _instanceIntersects=[];const _mesh=new Mesh();function InstancedMesh(geometry,material,count){Mesh.call(this,geometry,material);this.instanceMatrix=new BufferAttribute(new Float32Array(count*16),16);this.instanceColor=null;this.count=count;this.frustumCulled=false;}InstancedMesh.prototype=Object.assign(Object.create(Mesh.prototype),{constructor:InstancedMesh,isInstancedMesh:true,copy:function(source){Mesh.prototype.copy.call(this,source);this.instanceMatrix.copy(source.instanceMatrix);if(source.instanceColor!==null)this.instanceColor=source.instanceColor.clone();this.count=source.count;return this;},getColorAt:function(index,color){color.fromArray(this.instanceColor.array,index*3);},getMatrixAt:function(index,matrix){matrix.fromArray(this.instanceMatrix.array,index*16);},raycast:function(raycaster,intersects){const matrixWorld=this.matrixWorld;const raycastTimes=this.count;_mesh.geometry=this.geometry;_mesh.material=this.material;if(_mesh.material===undefined)return;for(let instanceId=0;instanceId<raycastTimes;instanceId++){// calculate the world matrix for each instance\nthis.getMatrixAt(instanceId,_instanceLocalMatrix);_instanceWorldMatrix.multiplyMatrices(matrixWorld,_instanceLocalMatrix);// the mesh represents this single instance\n_mesh.matrixWorld=_instanceWorldMatrix;_mesh.raycast(raycaster,_instanceIntersects);// process the result of raycast\nfor(let i=0,l=_instanceIntersects.length;i<l;i++){const intersect=_instanceIntersects[i];intersect.instanceId=instanceId;intersect.object=this;intersects.push(intersect);}_instanceIntersects.length=0;}},setColorAt:function(index,color){if(this.instanceColor===null){this.instanceColor=new BufferAttribute(new Float32Array(this.count*3),3);}color.toArray(this.instanceColor.array,index*3);},setMatrixAt:function(index,matrix){matrix.toArray(this.instanceMatrix.array,index*16);},updateMorphTargets:function(){},dispose:function(){this.dispatchEvent({type:'dispose'});}});/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *  linecap: \"round\",\n *  linejoin: \"round\"\n * }\n */function LineBasicMaterial(parameters){Material.call(this);this.type='LineBasicMaterial';this.color=new Color(0xffffff);this.linewidth=1;this.linecap='round';this.linejoin='round';this.morphTargets=false;this.setValues(parameters);}LineBasicMaterial.prototype=Object.create(Material.prototype);LineBasicMaterial.prototype.constructor=LineBasicMaterial;LineBasicMaterial.prototype.isLineBasicMaterial=true;LineBasicMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.color.copy(source.color);this.linewidth=source.linewidth;this.linecap=source.linecap;this.linejoin=source.linejoin;this.morphTargets=source.morphTargets;return this;};const _start=new Vector3();const _end=new Vector3();const _inverseMatrix$1=new Matrix4();const _ray$1=new Ray();const _sphere$2=new Sphere();function Line(geometry=new BufferGeometry(),material=new LineBasicMaterial()){Object3D.call(this);this.type='Line';this.geometry=geometry;this.material=material;this.updateMorphTargets();}Line.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Line,isLine:true,copy:function(source){Object3D.prototype.copy.call(this,source);this.material=source.material;this.geometry=source.geometry;return this;},computeLineDistances:function(){const geometry=this.geometry;if(geometry.isBufferGeometry){// we assume non-indexed geometry\nif(geometry.index===null){const positionAttribute=geometry.attributes.position;const lineDistances=[0];for(let i=1,l=positionAttribute.count;i<l;i++){_start.fromBufferAttribute(positionAttribute,i-1);_end.fromBufferAttribute(positionAttribute,i);lineDistances[i]=lineDistances[i-1];lineDistances[i]+=_start.distanceTo(_end);}geometry.setAttribute('lineDistance',new Float32BufferAttribute(lineDistances,1));}else{console.warn('THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.');}}else if(geometry.isGeometry){console.error('THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');}return this;},raycast:function(raycaster,intersects){const geometry=this.geometry;const matrixWorld=this.matrixWorld;const threshold=raycaster.params.Line.threshold;// Checking boundingSphere distance to ray\nif(geometry.boundingSphere===null)geometry.computeBoundingSphere();_sphere$2.copy(geometry.boundingSphere);_sphere$2.applyMatrix4(matrixWorld);_sphere$2.radius+=threshold;if(raycaster.ray.intersectsSphere(_sphere$2)===false)return;//\n_inverseMatrix$1.copy(matrixWorld).invert();_ray$1.copy(raycaster.ray).applyMatrix4(_inverseMatrix$1);const localThreshold=threshold/((this.scale.x+this.scale.y+this.scale.z)/3);const localThresholdSq=localThreshold*localThreshold;const vStart=new Vector3();const vEnd=new Vector3();const interSegment=new Vector3();const interRay=new Vector3();const step=this.isLineSegments?2:1;if(geometry.isBufferGeometry){const index=geometry.index;const attributes=geometry.attributes;const positionAttribute=attributes.position;if(index!==null){const indices=index.array;for(let i=0,l=indices.length-1;i<l;i+=step){const a=indices[i];const b=indices[i+1];vStart.fromBufferAttribute(positionAttribute,a);vEnd.fromBufferAttribute(positionAttribute,b);const distSq=_ray$1.distanceSqToSegment(vStart,vEnd,interRay,interSegment);if(distSq>localThresholdSq)continue;interRay.applyMatrix4(this.matrixWorld);//Move back to world space for distance calculation\nconst distance=raycaster.ray.origin.distanceTo(interRay);if(distance<raycaster.near||distance>raycaster.far)continue;intersects.push({distance:distance,// What do we want? intersection point on the ray or on the segment??\n// point: raycaster.ray.at( distance ),\npoint:interSegment.clone().applyMatrix4(this.matrixWorld),index:i,face:null,faceIndex:null,object:this});}}else{for(let i=0,l=positionAttribute.count-1;i<l;i+=step){vStart.fromBufferAttribute(positionAttribute,i);vEnd.fromBufferAttribute(positionAttribute,i+1);const distSq=_ray$1.distanceSqToSegment(vStart,vEnd,interRay,interSegment);if(distSq>localThresholdSq)continue;interRay.applyMatrix4(this.matrixWorld);//Move back to world space for distance calculation\nconst distance=raycaster.ray.origin.distanceTo(interRay);if(distance<raycaster.near||distance>raycaster.far)continue;intersects.push({distance:distance,// What do we want? intersection point on the ray or on the segment??\n// point: raycaster.ray.at( distance ),\npoint:interSegment.clone().applyMatrix4(this.matrixWorld),index:i,face:null,faceIndex:null,object:this});}}}else if(geometry.isGeometry){console.error('THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');}},updateMorphTargets:function(){const geometry=this.geometry;if(geometry.isBufferGeometry){const morphAttributes=geometry.morphAttributes;const keys=Object.keys(morphAttributes);if(keys.length>0){const morphAttribute=morphAttributes[keys[0]];if(morphAttribute!==undefined){this.morphTargetInfluences=[];this.morphTargetDictionary={};for(let m=0,ml=morphAttribute.length;m<ml;m++){const name=morphAttribute[m].name||String(m);this.morphTargetInfluences.push(0);this.morphTargetDictionary[name]=m;}}}}else{const morphTargets=geometry.morphTargets;if(morphTargets!==undefined&&morphTargets.length>0){console.error('THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.');}}}});const _start$1=new Vector3();const _end$1=new Vector3();function LineSegments(geometry,material){Line.call(this,geometry,material);this.type='LineSegments';}LineSegments.prototype=Object.assign(Object.create(Line.prototype),{constructor:LineSegments,isLineSegments:true,computeLineDistances:function(){const geometry=this.geometry;if(geometry.isBufferGeometry){// we assume non-indexed geometry\nif(geometry.index===null){const positionAttribute=geometry.attributes.position;const lineDistances=[];for(let i=0,l=positionAttribute.count;i<l;i+=2){_start$1.fromBufferAttribute(positionAttribute,i);_end$1.fromBufferAttribute(positionAttribute,i+1);lineDistances[i]=i===0?0:lineDistances[i-1];lineDistances[i+1]=lineDistances[i]+_start$1.distanceTo(_end$1);}geometry.setAttribute('lineDistance',new Float32BufferAttribute(lineDistances,1));}else{console.warn('THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.');}}else if(geometry.isGeometry){console.error('THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');}return this;}});function LineLoop(geometry,material){Line.call(this,geometry,material);this.type='LineLoop';}LineLoop.prototype=Object.assign(Object.create(Line.prototype),{constructor:LineLoop,isLineLoop:true});/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  size: <float>,\n *  sizeAttenuation: <bool>\n *\n *  morphTargets: <bool>\n * }\n */function PointsMaterial(parameters){Material.call(this);this.type='PointsMaterial';this.color=new Color(0xffffff);this.map=null;this.alphaMap=null;this.size=1;this.sizeAttenuation=true;this.morphTargets=false;this.setValues(parameters);}PointsMaterial.prototype=Object.create(Material.prototype);PointsMaterial.prototype.constructor=PointsMaterial;PointsMaterial.prototype.isPointsMaterial=true;PointsMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.color.copy(source.color);this.map=source.map;this.alphaMap=source.alphaMap;this.size=source.size;this.sizeAttenuation=source.sizeAttenuation;this.morphTargets=source.morphTargets;return this;};const _inverseMatrix$2=new Matrix4();const _ray$2=new Ray();const _sphere$3=new Sphere();const _position$1=new Vector3();function Points(geometry=new BufferGeometry(),material=new PointsMaterial()){Object3D.call(this);this.type='Points';this.geometry=geometry;this.material=material;this.updateMorphTargets();}Points.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Points,isPoints:true,copy:function(source){Object3D.prototype.copy.call(this,source);this.material=source.material;this.geometry=source.geometry;return this;},raycast:function(raycaster,intersects){const geometry=this.geometry;const matrixWorld=this.matrixWorld;const threshold=raycaster.params.Points.threshold;// Checking boundingSphere distance to ray\nif(geometry.boundingSphere===null)geometry.computeBoundingSphere();_sphere$3.copy(geometry.boundingSphere);_sphere$3.applyMatrix4(matrixWorld);_sphere$3.radius+=threshold;if(raycaster.ray.intersectsSphere(_sphere$3)===false)return;//\n_inverseMatrix$2.copy(matrixWorld).invert();_ray$2.copy(raycaster.ray).applyMatrix4(_inverseMatrix$2);const localThreshold=threshold/((this.scale.x+this.scale.y+this.scale.z)/3);const localThresholdSq=localThreshold*localThreshold;if(geometry.isBufferGeometry){const index=geometry.index;const attributes=geometry.attributes;const positionAttribute=attributes.position;if(index!==null){const indices=index.array;for(let i=0,il=indices.length;i<il;i++){const a=indices[i];_position$1.fromBufferAttribute(positionAttribute,a);testPoint(_position$1,a,localThresholdSq,matrixWorld,raycaster,intersects,this);}}else{for(let i=0,l=positionAttribute.count;i<l;i++){_position$1.fromBufferAttribute(positionAttribute,i);testPoint(_position$1,i,localThresholdSq,matrixWorld,raycaster,intersects,this);}}}else{console.error('THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');}},updateMorphTargets:function(){const geometry=this.geometry;if(geometry.isBufferGeometry){const morphAttributes=geometry.morphAttributes;const keys=Object.keys(morphAttributes);if(keys.length>0){const morphAttribute=morphAttributes[keys[0]];if(morphAttribute!==undefined){this.morphTargetInfluences=[];this.morphTargetDictionary={};for(let m=0,ml=morphAttribute.length;m<ml;m++){const name=morphAttribute[m].name||String(m);this.morphTargetInfluences.push(0);this.morphTargetDictionary[name]=m;}}}}else{const morphTargets=geometry.morphTargets;if(morphTargets!==undefined&&morphTargets.length>0){console.error('THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.');}}}});function testPoint(point,index,localThresholdSq,matrixWorld,raycaster,intersects,object){const rayPointDistanceSq=_ray$2.distanceSqToPoint(point);if(rayPointDistanceSq<localThresholdSq){const intersectPoint=new Vector3();_ray$2.closestPointToPoint(point,intersectPoint);intersectPoint.applyMatrix4(matrixWorld);const distance=raycaster.ray.origin.distanceTo(intersectPoint);if(distance<raycaster.near||distance>raycaster.far)return;intersects.push({distance:distance,distanceToRay:Math.sqrt(rayPointDistanceSq),point:intersectPoint,index:index,face:null,object:object});}}function VideoTexture(video,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy){Texture.call(this,video,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy);this.format=format!==undefined?format:RGBFormat;this.minFilter=minFilter!==undefined?minFilter:LinearFilter;this.magFilter=magFilter!==undefined?magFilter:LinearFilter;this.generateMipmaps=false;const scope=this;function updateVideo(){scope.needsUpdate=true;video.requestVideoFrameCallback(updateVideo);}if('requestVideoFrameCallback'in video){video.requestVideoFrameCallback(updateVideo);}}VideoTexture.prototype=Object.assign(Object.create(Texture.prototype),{constructor:VideoTexture,clone:function(){return new this.constructor(this.image).copy(this);},isVideoTexture:true,update:function(){const video=this.image;const hasVideoFrameCallback=('requestVideoFrameCallback'in video);if(hasVideoFrameCallback===false&&video.readyState>=video.HAVE_CURRENT_DATA){this.needsUpdate=true;}}});function CompressedTexture(mipmaps,width,height,format,type,mapping,wrapS,wrapT,magFilter,minFilter,anisotropy,encoding){Texture.call(this,null,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy,encoding);this.image={width:width,height:height};this.mipmaps=mipmaps;// no flipping for cube textures\n// (also flipping doesn't work for compressed textures )\nthis.flipY=false;// can't generate mipmaps for compressed textures\n// mips must be embedded in DDS files\nthis.generateMipmaps=false;}CompressedTexture.prototype=Object.create(Texture.prototype);CompressedTexture.prototype.constructor=CompressedTexture;CompressedTexture.prototype.isCompressedTexture=true;function CanvasTexture(canvas,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy){Texture.call(this,canvas,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy);this.needsUpdate=true;}CanvasTexture.prototype=Object.create(Texture.prototype);CanvasTexture.prototype.constructor=CanvasTexture;CanvasTexture.prototype.isCanvasTexture=true;function DepthTexture(width,height,type,mapping,wrapS,wrapT,magFilter,minFilter,anisotropy,format){format=format!==undefined?format:DepthFormat;if(format!==DepthFormat&&format!==DepthStencilFormat){throw new Error('DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat');}if(type===undefined&&format===DepthFormat)type=UnsignedShortType;if(type===undefined&&format===DepthStencilFormat)type=UnsignedInt248Type;Texture.call(this,null,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy);this.image={width:width,height:height};this.magFilter=magFilter!==undefined?magFilter:NearestFilter;this.minFilter=minFilter!==undefined?minFilter:NearestFilter;this.flipY=false;this.generateMipmaps=false;}DepthTexture.prototype=Object.create(Texture.prototype);DepthTexture.prototype.constructor=DepthTexture;DepthTexture.prototype.isDepthTexture=true;class CircleGeometry extends BufferGeometry{constructor(radius=1,segments=8,thetaStart=0,thetaLength=Math.PI*2){super();this.type='CircleGeometry';this.parameters={radius:radius,segments:segments,thetaStart:thetaStart,thetaLength:thetaLength};segments=Math.max(3,segments);// buffers\nconst indices=[];const vertices=[];const normals=[];const uvs=[];// helper variables\nconst vertex=new Vector3();const uv=new Vector2();// center point\nvertices.push(0,0,0);normals.push(0,0,1);uvs.push(0.5,0.5);for(let s=0,i=3;s<=segments;s++,i+=3){const segment=thetaStart+s/segments*thetaLength;// vertex\nvertex.x=radius*Math.cos(segment);vertex.y=radius*Math.sin(segment);vertices.push(vertex.x,vertex.y,vertex.z);// normal\nnormals.push(0,0,1);// uvs\nuv.x=(vertices[i]/radius+1)/2;uv.y=(vertices[i+1]/radius+1)/2;uvs.push(uv.x,uv.y);}// indices\nfor(let i=1;i<=segments;i++){indices.push(i,i+1,0);}// build geometry\nthis.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('normal',new Float32BufferAttribute(normals,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));}}class CylinderGeometry extends BufferGeometry{constructor(radiusTop=1,radiusBottom=1,height=1,radialSegments=8,heightSegments=1,openEnded=false,thetaStart=0,thetaLength=Math.PI*2){super();this.type='CylinderGeometry';this.parameters={radiusTop:radiusTop,radiusBottom:radiusBottom,height:height,radialSegments:radialSegments,heightSegments:heightSegments,openEnded:openEnded,thetaStart:thetaStart,thetaLength:thetaLength};const scope=this;radialSegments=Math.floor(radialSegments);heightSegments=Math.floor(heightSegments);// buffers\nconst indices=[];const vertices=[];const normals=[];const uvs=[];// helper variables\nlet index=0;const indexArray=[];const halfHeight=height/2;let groupStart=0;// generate geometry\ngenerateTorso();if(openEnded===false){if(radiusTop>0)generateCap(true);if(radiusBottom>0)generateCap(false);}// build geometry\nthis.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('normal',new Float32BufferAttribute(normals,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));function generateTorso(){const normal=new Vector3();const vertex=new Vector3();let groupCount=0;// this will be used to calculate the normal\nconst slope=(radiusBottom-radiusTop)/height;// generate vertices, normals and uvs\nfor(let y=0;y<=heightSegments;y++){const indexRow=[];const v=y/heightSegments;// calculate the radius of the current row\nconst radius=v*(radiusBottom-radiusTop)+radiusTop;for(let x=0;x<=radialSegments;x++){const u=x/radialSegments;const theta=u*thetaLength+thetaStart;const sinTheta=Math.sin(theta);const cosTheta=Math.cos(theta);// vertex\nvertex.x=radius*sinTheta;vertex.y=-v*height+halfHeight;vertex.z=radius*cosTheta;vertices.push(vertex.x,vertex.y,vertex.z);// normal\nnormal.set(sinTheta,slope,cosTheta).normalize();normals.push(normal.x,normal.y,normal.z);// uv\nuvs.push(u,1-v);// save index of vertex in respective row\nindexRow.push(index++);}// now save vertices of the row in our index array\nindexArray.push(indexRow);}// generate indices\nfor(let x=0;x<radialSegments;x++){for(let y=0;y<heightSegments;y++){// we use the index array to access the correct indices\nconst a=indexArray[y][x];const b=indexArray[y+1][x];const c=indexArray[y+1][x+1];const d=indexArray[y][x+1];// faces\nindices.push(a,b,d);indices.push(b,c,d);// update group counter\ngroupCount+=6;}}// add a group to the geometry. this will ensure multi material support\nscope.addGroup(groupStart,groupCount,0);// calculate new start value for groups\ngroupStart+=groupCount;}function generateCap(top){// save the index of the first center vertex\nconst centerIndexStart=index;const uv=new Vector2();const vertex=new Vector3();let groupCount=0;const radius=top===true?radiusTop:radiusBottom;const sign=top===true?1:-1;// first we generate the center vertex data of the cap.\n// because the geometry needs one set of uvs per face,\n// we must generate a center vertex per face/segment\nfor(let x=1;x<=radialSegments;x++){// vertex\nvertices.push(0,halfHeight*sign,0);// normal\nnormals.push(0,sign,0);// uv\nuvs.push(0.5,0.5);// increase index\nindex++;}// save the index of the last center vertex\nconst centerIndexEnd=index;// now we generate the surrounding vertices, normals and uvs\nfor(let x=0;x<=radialSegments;x++){const u=x/radialSegments;const theta=u*thetaLength+thetaStart;const cosTheta=Math.cos(theta);const sinTheta=Math.sin(theta);// vertex\nvertex.x=radius*sinTheta;vertex.y=halfHeight*sign;vertex.z=radius*cosTheta;vertices.push(vertex.x,vertex.y,vertex.z);// normal\nnormals.push(0,sign,0);// uv\nuv.x=cosTheta*0.5+0.5;uv.y=sinTheta*0.5*sign+0.5;uvs.push(uv.x,uv.y);// increase index\nindex++;}// generate indices\nfor(let x=0;x<radialSegments;x++){const c=centerIndexStart+x;const i=centerIndexEnd+x;if(top===true){// face top\nindices.push(i,i+1,c);}else{// face bottom\nindices.push(i+1,i,c);}groupCount+=3;}// add a group to the geometry. this will ensure multi material support\nscope.addGroup(groupStart,groupCount,top===true?1:2);// calculate new start value for groups\ngroupStart+=groupCount;}}}class ConeGeometry extends CylinderGeometry{constructor(radius=1,height=1,radialSegments=8,heightSegments=1,openEnded=false,thetaStart=0,thetaLength=Math.PI*2){super(0,radius,height,radialSegments,heightSegments,openEnded,thetaStart,thetaLength);this.type='ConeGeometry';this.parameters={radius:radius,height:height,radialSegments:radialSegments,heightSegments:heightSegments,openEnded:openEnded,thetaStart:thetaStart,thetaLength:thetaLength};}}class PolyhedronGeometry extends BufferGeometry{constructor(vertices,indices,radius=1,detail=0){super();this.type='PolyhedronGeometry';this.parameters={vertices:vertices,indices:indices,radius:radius,detail:detail};// default buffer data\nconst vertexBuffer=[];const uvBuffer=[];// the subdivision creates the vertex buffer data\nsubdivide(detail);// all vertices should lie on a conceptual sphere with a given radius\napplyRadius(radius);// finally, create the uv data\ngenerateUVs();// build non-indexed geometry\nthis.setAttribute('position',new Float32BufferAttribute(vertexBuffer,3));this.setAttribute('normal',new Float32BufferAttribute(vertexBuffer.slice(),3));this.setAttribute('uv',new Float32BufferAttribute(uvBuffer,2));if(detail===0){this.computeVertexNormals();// flat normals\n}else{this.normalizeNormals();// smooth normals\n}// helper functions\nfunction subdivide(detail){const a=new Vector3();const b=new Vector3();const c=new Vector3();// iterate over all faces and apply a subdivison with the given detail value\nfor(let i=0;i<indices.length;i+=3){// get the vertices of the face\ngetVertexByIndex(indices[i+0],a);getVertexByIndex(indices[i+1],b);getVertexByIndex(indices[i+2],c);// perform subdivision\nsubdivideFace(a,b,c,detail);}}function subdivideFace(a,b,c,detail){const cols=detail+1;// we use this multidimensional array as a data structure for creating the subdivision\nconst v=[];// construct all of the vertices for this subdivision\nfor(let i=0;i<=cols;i++){v[i]=[];const aj=a.clone().lerp(c,i/cols);const bj=b.clone().lerp(c,i/cols);const rows=cols-i;for(let j=0;j<=rows;j++){if(j===0&&i===cols){v[i][j]=aj;}else{v[i][j]=aj.clone().lerp(bj,j/rows);}}}// construct all of the faces\nfor(let i=0;i<cols;i++){for(let j=0;j<2*(cols-i)-1;j++){const k=Math.floor(j/2);if(j%2===0){pushVertex(v[i][k+1]);pushVertex(v[i+1][k]);pushVertex(v[i][k]);}else{pushVertex(v[i][k+1]);pushVertex(v[i+1][k+1]);pushVertex(v[i+1][k]);}}}}function applyRadius(radius){const vertex=new Vector3();// iterate over the entire buffer and apply the radius to each vertex\nfor(let i=0;i<vertexBuffer.length;i+=3){vertex.x=vertexBuffer[i+0];vertex.y=vertexBuffer[i+1];vertex.z=vertexBuffer[i+2];vertex.normalize().multiplyScalar(radius);vertexBuffer[i+0]=vertex.x;vertexBuffer[i+1]=vertex.y;vertexBuffer[i+2]=vertex.z;}}function generateUVs(){const vertex=new Vector3();for(let i=0;i<vertexBuffer.length;i+=3){vertex.x=vertexBuffer[i+0];vertex.y=vertexBuffer[i+1];vertex.z=vertexBuffer[i+2];const u=azimuth(vertex)/2/Math.PI+0.5;const v=inclination(vertex)/Math.PI+0.5;uvBuffer.push(u,1-v);}correctUVs();correctSeam();}function correctSeam(){// handle case when face straddles the seam, see #3269\nfor(let i=0;i<uvBuffer.length;i+=6){// uv data of a single face\nconst x0=uvBuffer[i+0];const x1=uvBuffer[i+2];const x2=uvBuffer[i+4];const max=Math.max(x0,x1,x2);const min=Math.min(x0,x1,x2);// 0.9 is somewhat arbitrary\nif(max>0.9&&min<0.1){if(x0<0.2)uvBuffer[i+0]+=1;if(x1<0.2)uvBuffer[i+2]+=1;if(x2<0.2)uvBuffer[i+4]+=1;}}}function pushVertex(vertex){vertexBuffer.push(vertex.x,vertex.y,vertex.z);}function getVertexByIndex(index,vertex){const stride=index*3;vertex.x=vertices[stride+0];vertex.y=vertices[stride+1];vertex.z=vertices[stride+2];}function correctUVs(){const a=new Vector3();const b=new Vector3();const c=new Vector3();const centroid=new Vector3();const uvA=new Vector2();const uvB=new Vector2();const uvC=new Vector2();for(let i=0,j=0;i<vertexBuffer.length;i+=9,j+=6){a.set(vertexBuffer[i+0],vertexBuffer[i+1],vertexBuffer[i+2]);b.set(vertexBuffer[i+3],vertexBuffer[i+4],vertexBuffer[i+5]);c.set(vertexBuffer[i+6],vertexBuffer[i+7],vertexBuffer[i+8]);uvA.set(uvBuffer[j+0],uvBuffer[j+1]);uvB.set(uvBuffer[j+2],uvBuffer[j+3]);uvC.set(uvBuffer[j+4],uvBuffer[j+5]);centroid.copy(a).add(b).add(c).divideScalar(3);const azi=azimuth(centroid);correctUV(uvA,j+0,a,azi);correctUV(uvB,j+2,b,azi);correctUV(uvC,j+4,c,azi);}}function correctUV(uv,stride,vector,azimuth){if(azimuth<0&&uv.x===1){uvBuffer[stride]=uv.x-1;}if(vector.x===0&&vector.z===0){uvBuffer[stride]=azimuth/2/Math.PI+0.5;}}// Angle around the Y axis, counter-clockwise when looking from above.\nfunction azimuth(vector){return Math.atan2(vector.z,-vector.x);}// Angle above the XZ plane.\nfunction inclination(vector){return Math.atan2(-vector.y,Math.sqrt(vector.x*vector.x+vector.z*vector.z));}}}class DodecahedronGeometry extends PolyhedronGeometry{constructor(radius=1,detail=0){const t=(1+Math.sqrt(5))/2;const r=1/t;const vertices=[// (±1, ±1, ±1)\n-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,// (0, ±1/φ, ±φ)\n0,-r,-t,0,-r,t,0,r,-t,0,r,t,// (±1/φ, ±φ, 0)\n-r,-t,0,-r,t,0,r,-t,0,r,t,0,// (±φ, 0, ±1/φ)\n-t,0,-r,t,0,-r,-t,0,r,t,0,r];const indices=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(vertices,indices,radius,detail);this.type='DodecahedronGeometry';this.parameters={radius:radius,detail:detail};}}const _v0$2=new Vector3();const _v1$5=new Vector3();const _normal$1=new Vector3();const _triangle=new Triangle();class EdgesGeometry extends BufferGeometry{constructor(geometry,thresholdAngle){super();this.type='EdgesGeometry';this.parameters={thresholdAngle:thresholdAngle};thresholdAngle=thresholdAngle!==undefined?thresholdAngle:1;if(geometry.isGeometry===true){console.error('THREE.EdgesGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');return;}const precisionPoints=4;const precision=Math.pow(10,precisionPoints);const thresholdDot=Math.cos(MathUtils.DEG2RAD*thresholdAngle);const indexAttr=geometry.getIndex();const positionAttr=geometry.getAttribute('position');const indexCount=indexAttr?indexAttr.count:positionAttr.count;const indexArr=[0,0,0];const vertKeys=['a','b','c'];const hashes=new Array(3);const edgeData={};const vertices=[];for(let i=0;i<indexCount;i+=3){if(indexAttr){indexArr[0]=indexAttr.getX(i);indexArr[1]=indexAttr.getX(i+1);indexArr[2]=indexAttr.getX(i+2);}else{indexArr[0]=i;indexArr[1]=i+1;indexArr[2]=i+2;}const{a,b,c}=_triangle;a.fromBufferAttribute(positionAttr,indexArr[0]);b.fromBufferAttribute(positionAttr,indexArr[1]);c.fromBufferAttribute(positionAttr,indexArr[2]);_triangle.getNormal(_normal$1);// create hashes for the edge from the vertices\nhashes[0]=`${Math.round(a.x*precision)},${Math.round(a.y*precision)},${Math.round(a.z*precision)}`;hashes[1]=`${Math.round(b.x*precision)},${Math.round(b.y*precision)},${Math.round(b.z*precision)}`;hashes[2]=`${Math.round(c.x*precision)},${Math.round(c.y*precision)},${Math.round(c.z*precision)}`;// skip degenerate triangles\nif(hashes[0]===hashes[1]||hashes[1]===hashes[2]||hashes[2]===hashes[0]){continue;}// iterate over every edge\nfor(let j=0;j<3;j++){// get the first and next vertex making up the edge\nconst jNext=(j+1)%3;const vecHash0=hashes[j];const vecHash1=hashes[jNext];const v0=_triangle[vertKeys[j]];const v1=_triangle[vertKeys[jNext]];const hash=`${vecHash0}_${vecHash1}`;const reverseHash=`${vecHash1}_${vecHash0}`;if(reverseHash in edgeData&&edgeData[reverseHash]){// if we found a sibling edge add it into the vertex array if\n// it meets the angle threshold and delete the edge from the map.\nif(_normal$1.dot(edgeData[reverseHash].normal)<=thresholdDot){vertices.push(v0.x,v0.y,v0.z);vertices.push(v1.x,v1.y,v1.z);}edgeData[reverseHash]=null;}else if(!(hash in edgeData)){// if we've already got an edge here then skip adding a new one\nedgeData[hash]={index0:indexArr[j],index1:indexArr[jNext],normal:_normal$1.clone()};}}}// iterate over all remaining, unmatched edges and add them to the vertex array\nfor(const key in edgeData){if(edgeData[key]){const{index0,index1}=edgeData[key];_v0$2.fromBufferAttribute(positionAttr,index0);_v1$5.fromBufferAttribute(positionAttr,index1);vertices.push(_v0$2.x,_v0$2.y,_v0$2.z);vertices.push(_v1$5.x,_v1$5.y,_v1$5.z);}}this.setAttribute('position',new Float32BufferAttribute(vertices,3));}}/**\n * Port from https://github.com/mapbox/earcut (v2.2.2)\n */const Earcut={triangulate:function(data,holeIndices,dim){dim=dim||2;const hasHoles=holeIndices&&holeIndices.length;const outerLen=hasHoles?holeIndices[0]*dim:data.length;let outerNode=linkedList(data,0,outerLen,dim,true);const triangles=[];if(!outerNode||outerNode.next===outerNode.prev)return triangles;let minX,minY,maxX,maxY,x,y,invSize;if(hasHoles)outerNode=eliminateHoles(data,holeIndices,outerNode,dim);// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\nif(data.length>80*dim){minX=maxX=data[0];minY=maxY=data[1];for(let i=dim;i<outerLen;i+=dim){x=data[i];y=data[i+1];if(x<minX)minX=x;if(y<minY)minY=y;if(x>maxX)maxX=x;if(y>maxY)maxY=y;}// minX, minY and invSize are later used to transform coords into integers for z-order calculation\ninvSize=Math.max(maxX-minX,maxY-minY);invSize=invSize!==0?1/invSize:0;}earcutLinked(outerNode,triangles,dim,minX,minY,invSize);return triangles;}};// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data,start,end,dim,clockwise){let i,last;if(clockwise===signedArea(data,start,end,dim)>0){for(i=start;i<end;i+=dim)last=insertNode(i,data[i],data[i+1],last);}else{for(i=end-dim;i>=start;i-=dim)last=insertNode(i,data[i],data[i+1],last);}if(last&&equals(last,last.next)){removeNode(last);last=last.next;}return last;}// eliminate colinear or duplicate points\nfunction filterPoints(start,end){if(!start)return start;if(!end)end=start;let p=start,again;do{again=false;if(!p.steiner&&(equals(p,p.next)||area(p.prev,p,p.next)===0)){removeNode(p);p=end=p.prev;if(p===p.next)break;again=true;}else{p=p.next;}}while(again||p!==end);return end;}// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear,triangles,dim,minX,minY,invSize,pass){if(!ear)return;// interlink polygon nodes in z-order\nif(!pass&&invSize)indexCurve(ear,minX,minY,invSize);let stop=ear,prev,next;// iterate through ears, slicing them one by one\nwhile(ear.prev!==ear.next){prev=ear.prev;next=ear.next;if(invSize?isEarHashed(ear,minX,minY,invSize):isEar(ear)){// cut off the triangle\ntriangles.push(prev.i/dim);triangles.push(ear.i/dim);triangles.push(next.i/dim);removeNode(ear);// skipping the next vertex leads to less sliver triangles\near=next.next;stop=next.next;continue;}ear=next;// if we looped through the whole remaining polygon and can't find any more ears\nif(ear===stop){// try filtering points and slicing again\nif(!pass){earcutLinked(filterPoints(ear),triangles,dim,minX,minY,invSize,1);// if this didn't work, try curing all small self-intersections locally\n}else if(pass===1){ear=cureLocalIntersections(filterPoints(ear),triangles,dim);earcutLinked(ear,triangles,dim,minX,minY,invSize,2);// as a last resort, try splitting the remaining polygon into two\n}else if(pass===2){splitEarcut(ear,triangles,dim,minX,minY,invSize);}break;}}}// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear){const a=ear.prev,b=ear,c=ear.next;if(area(a,b,c)>=0)return false;// reflex, can't be an ear\n// now make sure we don't have other points inside the potential ear\nlet p=ear.next.next;while(p!==ear.prev){if(pointInTriangle(a.x,a.y,b.x,b.y,c.x,c.y,p.x,p.y)&&area(p.prev,p,p.next)>=0)return false;p=p.next;}return true;}function isEarHashed(ear,minX,minY,invSize){const a=ear.prev,b=ear,c=ear.next;if(area(a,b,c)>=0)return false;// reflex, can't be an ear\n// triangle bbox; min & max are calculated like this for speed\nconst minTX=a.x<b.x?a.x<c.x?a.x:c.x:b.x<c.x?b.x:c.x,minTY=a.y<b.y?a.y<c.y?a.y:c.y:b.y<c.y?b.y:c.y,maxTX=a.x>b.x?a.x>c.x?a.x:c.x:b.x>c.x?b.x:c.x,maxTY=a.y>b.y?a.y>c.y?a.y:c.y:b.y>c.y?b.y:c.y;// z-order range for the current triangle bbox;\nconst minZ=zOrder(minTX,minTY,minX,minY,invSize),maxZ=zOrder(maxTX,maxTY,minX,minY,invSize);let p=ear.prevZ,n=ear.nextZ;// look for points inside the triangle in both directions\nwhile(p&&p.z>=minZ&&n&&n.z<=maxZ){if(p!==ear.prev&&p!==ear.next&&pointInTriangle(a.x,a.y,b.x,b.y,c.x,c.y,p.x,p.y)&&area(p.prev,p,p.next)>=0)return false;p=p.prevZ;if(n!==ear.prev&&n!==ear.next&&pointInTriangle(a.x,a.y,b.x,b.y,c.x,c.y,n.x,n.y)&&area(n.prev,n,n.next)>=0)return false;n=n.nextZ;}// look for remaining points in decreasing z-order\nwhile(p&&p.z>=minZ){if(p!==ear.prev&&p!==ear.next&&pointInTriangle(a.x,a.y,b.x,b.y,c.x,c.y,p.x,p.y)&&area(p.prev,p,p.next)>=0)return false;p=p.prevZ;}// look for remaining points in increasing z-order\nwhile(n&&n.z<=maxZ){if(n!==ear.prev&&n!==ear.next&&pointInTriangle(a.x,a.y,b.x,b.y,c.x,c.y,n.x,n.y)&&area(n.prev,n,n.next)>=0)return false;n=n.nextZ;}return true;}// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start,triangles,dim){let p=start;do{const a=p.prev,b=p.next.next;if(!equals(a,b)&&intersects(a,p,p.next,b)&&locallyInside(a,b)&&locallyInside(b,a)){triangles.push(a.i/dim);triangles.push(p.i/dim);triangles.push(b.i/dim);// remove two nodes involved\nremoveNode(p);removeNode(p.next);p=start=b;}p=p.next;}while(p!==start);return filterPoints(p);}// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start,triangles,dim,minX,minY,invSize){// look for a valid diagonal that divides the polygon into two\nlet a=start;do{let b=a.next.next;while(b!==a.prev){if(a.i!==b.i&&isValidDiagonal(a,b)){// split the polygon in two by the diagonal\nlet c=splitPolygon(a,b);// filter colinear points around the cuts\na=filterPoints(a,a.next);c=filterPoints(c,c.next);// run earcut on each half\nearcutLinked(a,triangles,dim,minX,minY,invSize);earcutLinked(c,triangles,dim,minX,minY,invSize);return;}b=b.next;}a=a.next;}while(a!==start);}// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data,holeIndices,outerNode,dim){const queue=[];let i,len,start,end,list;for(i=0,len=holeIndices.length;i<len;i++){start=holeIndices[i]*dim;end=i<len-1?holeIndices[i+1]*dim:data.length;list=linkedList(data,start,end,dim,false);if(list===list.next)list.steiner=true;queue.push(getLeftmost(list));}queue.sort(compareX);// process holes from left to right\nfor(i=0;i<queue.length;i++){eliminateHole(queue[i],outerNode);outerNode=filterPoints(outerNode,outerNode.next);}return outerNode;}function compareX(a,b){return a.x-b.x;}// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole,outerNode){outerNode=findHoleBridge(hole,outerNode);if(outerNode){const b=splitPolygon(outerNode,hole);// filter collinear points around the cuts\nfilterPoints(outerNode,outerNode.next);filterPoints(b,b.next);}}// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole,outerNode){let p=outerNode;const hx=hole.x;const hy=hole.y;let qx=-Infinity,m;// find a segment intersected by a ray from the hole's leftmost point to the left;\n// segment's endpoint with lesser x will be potential connection point\ndo{if(hy<=p.y&&hy>=p.next.y&&p.next.y!==p.y){const x=p.x+(hy-p.y)*(p.next.x-p.x)/(p.next.y-p.y);if(x<=hx&&x>qx){qx=x;if(x===hx){if(hy===p.y)return p;if(hy===p.next.y)return p.next;}m=p.x<p.next.x?p:p.next;}}p=p.next;}while(p!==outerNode);if(!m)return null;if(hx===qx)return m;// hole touches outer segment; pick leftmost endpoint\n// look for points inside the triangle of hole point, segment intersection and endpoint;\n// if there are no points found, we have a valid connection;\n// otherwise choose the point of the minimum angle with the ray as connection point\nconst stop=m,mx=m.x,my=m.y;let tanMin=Infinity,tan;p=m;do{if(hx>=p.x&&p.x>=mx&&hx!==p.x&&pointInTriangle(hy<my?hx:qx,hy,mx,my,hy<my?qx:hx,hy,p.x,p.y)){tan=Math.abs(hy-p.y)/(hx-p.x);// tangential\nif(locallyInside(p,hole)&&(tan<tanMin||tan===tanMin&&(p.x>m.x||p.x===m.x&&sectorContainsSector(m,p)))){m=p;tanMin=tan;}}p=p.next;}while(p!==stop);return m;}// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m,p){return area(m.prev,m,p.prev)<0&&area(p.next,m,m.next)<0;}// interlink polygon nodes in z-order\nfunction indexCurve(start,minX,minY,invSize){let p=start;do{if(p.z===null)p.z=zOrder(p.x,p.y,minX,minY,invSize);p.prevZ=p.prev;p.nextZ=p.next;p=p.next;}while(p!==start);p.prevZ.nextZ=null;p.prevZ=null;sortLinked(p);}// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list){let i,p,q,e,tail,numMerges,pSize,qSize,inSize=1;do{p=list;list=null;tail=null;numMerges=0;while(p){numMerges++;q=p;pSize=0;for(i=0;i<inSize;i++){pSize++;q=q.nextZ;if(!q)break;}qSize=inSize;while(pSize>0||qSize>0&&q){if(pSize!==0&&(qSize===0||!q||p.z<=q.z)){e=p;p=p.nextZ;pSize--;}else{e=q;q=q.nextZ;qSize--;}if(tail)tail.nextZ=e;else list=e;e.prevZ=tail;tail=e;}p=q;}tail.nextZ=null;inSize*=2;}while(numMerges>1);return list;}// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x,y,minX,minY,invSize){// coords are transformed into non-negative 15-bit integer range\nx=32767*(x-minX)*invSize;y=32767*(y-minY)*invSize;x=(x|x<<8)&0x00FF00FF;x=(x|x<<4)&0x0F0F0F0F;x=(x|x<<2)&0x33333333;x=(x|x<<1)&0x55555555;y=(y|y<<8)&0x00FF00FF;y=(y|y<<4)&0x0F0F0F0F;y=(y|y<<2)&0x33333333;y=(y|y<<1)&0x55555555;return x|y<<1;}// find the leftmost node of a polygon ring\nfunction getLeftmost(start){let p=start,leftmost=start;do{if(p.x<leftmost.x||p.x===leftmost.x&&p.y<leftmost.y)leftmost=p;p=p.next;}while(p!==start);return leftmost;}// check if a point lies within a convex triangle\nfunction pointInTriangle(ax,ay,bx,by,cx,cy,px,py){return(cx-px)*(ay-py)-(ax-px)*(cy-py)>=0&&(ax-px)*(by-py)-(bx-px)*(ay-py)>=0&&(bx-px)*(cy-py)-(cx-px)*(by-py)>=0;}// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a,b){return a.next.i!==b.i&&a.prev.i!==b.i&&!intersectsPolygon(a,b)&&(// dones't intersect other edges\nlocallyInside(a,b)&&locallyInside(b,a)&&middleInside(a,b)&&(// locally visible\narea(a.prev,a,b.prev)||area(a,b.prev,b))||// does not create opposite-facing sectors\nequals(a,b)&&area(a.prev,a,a.next)>0&&area(b.prev,b,b.next)>0);// special zero-length case\n}// signed area of a triangle\nfunction area(p,q,r){return(q.y-p.y)*(r.x-q.x)-(q.x-p.x)*(r.y-q.y);}// check if two points are equal\nfunction equals(p1,p2){return p1.x===p2.x&&p1.y===p2.y;}// check if two segments intersect\nfunction intersects(p1,q1,p2,q2){const o1=sign(area(p1,q1,p2));const o2=sign(area(p1,q1,q2));const o3=sign(area(p2,q2,p1));const o4=sign(area(p2,q2,q1));if(o1!==o2&&o3!==o4)return true;// general case\nif(o1===0&&onSegment(p1,p2,q1))return true;// p1, q1 and p2 are collinear and p2 lies on p1q1\nif(o2===0&&onSegment(p1,q2,q1))return true;// p1, q1 and q2 are collinear and q2 lies on p1q1\nif(o3===0&&onSegment(p2,p1,q2))return true;// p2, q2 and p1 are collinear and p1 lies on p2q2\nif(o4===0&&onSegment(p2,q1,q2))return true;// p2, q2 and q1 are collinear and q1 lies on p2q2\nreturn false;}// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p,q,r){return q.x<=Math.max(p.x,r.x)&&q.x>=Math.min(p.x,r.x)&&q.y<=Math.max(p.y,r.y)&&q.y>=Math.min(p.y,r.y);}function sign(num){return num>0?1:num<0?-1:0;}// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a,b){let p=a;do{if(p.i!==a.i&&p.next.i!==a.i&&p.i!==b.i&&p.next.i!==b.i&&intersects(p,p.next,a,b))return true;p=p.next;}while(p!==a);return false;}// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a,b){return area(a.prev,a,a.next)<0?area(a,b,a.next)>=0&&area(a,a.prev,b)>=0:area(a,b,a.prev)<0||area(a,a.next,b)<0;}// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a,b){let p=a,inside=false;const px=(a.x+b.x)/2,py=(a.y+b.y)/2;do{if(p.y>py!==p.next.y>py&&p.next.y!==p.y&&px<(p.next.x-p.x)*(py-p.y)/(p.next.y-p.y)+p.x)inside=!inside;p=p.next;}while(p!==a);return inside;}// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a,b){const a2=new Node(a.i,a.x,a.y),b2=new Node(b.i,b.x,b.y),an=a.next,bp=b.prev;a.next=b;b.prev=a;a2.next=an;an.prev=a2;b2.next=a2;a2.prev=b2;bp.next=b2;b2.prev=bp;return b2;}// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i,x,y,last){const p=new Node(i,x,y);if(!last){p.prev=p;p.next=p;}else{p.next=last.next;p.prev=last;last.next.prev=p;last.next=p;}return p;}function removeNode(p){p.next.prev=p.prev;p.prev.next=p.next;if(p.prevZ)p.prevZ.nextZ=p.nextZ;if(p.nextZ)p.nextZ.prevZ=p.prevZ;}function Node(i,x,y){// vertex index in coordinates array\nthis.i=i;// vertex coordinates\nthis.x=x;this.y=y;// previous and next vertex nodes in a polygon ring\nthis.prev=null;this.next=null;// z-order curve value\nthis.z=null;// previous and next nodes in z-order\nthis.prevZ=null;this.nextZ=null;// indicates whether this is a steiner point\nthis.steiner=false;}function signedArea(data,start,end,dim){let sum=0;for(let i=start,j=end-dim;i<end;i+=dim){sum+=(data[j]-data[i])*(data[i+1]+data[j+1]);j=i;}return sum;}const ShapeUtils={// calculate area of the contour polygon\narea:function(contour){const n=contour.length;let a=0.0;for(let p=n-1,q=0;q<n;p=q++){a+=contour[p].x*contour[q].y-contour[q].x*contour[p].y;}return a*0.5;},isClockWise:function(pts){return ShapeUtils.area(pts)<0;},triangulateShape:function(contour,holes){const vertices=[];// flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\nconst holeIndices=[];// array of hole indices\nconst faces=[];// final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\nremoveDupEndPts(contour);addContour(vertices,contour);//\nlet holeIndex=contour.length;holes.forEach(removeDupEndPts);for(let i=0;i<holes.length;i++){holeIndices.push(holeIndex);holeIndex+=holes[i].length;addContour(vertices,holes[i]);}//\nconst triangles=Earcut.triangulate(vertices,holeIndices);//\nfor(let i=0;i<triangles.length;i+=3){faces.push(triangles.slice(i,i+3));}return faces;}};function removeDupEndPts(points){const l=points.length;if(l>2&&points[l-1].equals(points[0])){points.pop();}}function addContour(vertices,contour){for(let i=0;i<contour.length;i++){vertices.push(contour[i].x);vertices.push(contour[i].y);}}/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */class ExtrudeGeometry extends BufferGeometry{constructor(shapes,options){super();this.type='ExtrudeGeometry';this.parameters={shapes:shapes,options:options};shapes=Array.isArray(shapes)?shapes:[shapes];const scope=this;const verticesArray=[];const uvArray=[];for(let i=0,l=shapes.length;i<l;i++){const shape=shapes[i];addShape(shape);}// build geometry\nthis.setAttribute('position',new Float32BufferAttribute(verticesArray,3));this.setAttribute('uv',new Float32BufferAttribute(uvArray,2));this.computeVertexNormals();// functions\nfunction addShape(shape){const placeholder=[];// options\nconst curveSegments=options.curveSegments!==undefined?options.curveSegments:12;const steps=options.steps!==undefined?options.steps:1;let depth=options.depth!==undefined?options.depth:100;let bevelEnabled=options.bevelEnabled!==undefined?options.bevelEnabled:true;let bevelThickness=options.bevelThickness!==undefined?options.bevelThickness:6;let bevelSize=options.bevelSize!==undefined?options.bevelSize:bevelThickness-2;let bevelOffset=options.bevelOffset!==undefined?options.bevelOffset:0;let bevelSegments=options.bevelSegments!==undefined?options.bevelSegments:3;const extrudePath=options.extrudePath;const uvgen=options.UVGenerator!==undefined?options.UVGenerator:WorldUVGenerator;// deprecated options\nif(options.amount!==undefined){console.warn('THREE.ExtrudeBufferGeometry: amount has been renamed to depth.');depth=options.amount;}//\nlet extrudePts,extrudeByPath=false;let splineTube,binormal,normal,position2;if(extrudePath){extrudePts=extrudePath.getSpacedPoints(steps);extrudeByPath=true;bevelEnabled=false;// bevels not supported for path extrusion\n// SETUP TNB variables\n// TODO1 - have a .isClosed in spline?\nsplineTube=extrudePath.computeFrenetFrames(steps,false);// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\nbinormal=new Vector3();normal=new Vector3();position2=new Vector3();}// Safeguards if bevels are not enabled\nif(!bevelEnabled){bevelSegments=0;bevelThickness=0;bevelSize=0;bevelOffset=0;}// Variables initialization\nconst shapePoints=shape.extractPoints(curveSegments);let vertices=shapePoints.shape;const holes=shapePoints.holes;const reverse=!ShapeUtils.isClockWise(vertices);if(reverse){vertices=vertices.reverse();// Maybe we should also check if holes are in the opposite direction, just to be safe ...\nfor(let h=0,hl=holes.length;h<hl;h++){const ahole=holes[h];if(ShapeUtils.isClockWise(ahole)){holes[h]=ahole.reverse();}}}const faces=ShapeUtils.triangulateShape(vertices,holes);/* Vertices */const contour=vertices;// vertices has all points but contour has only points of circumference\nfor(let h=0,hl=holes.length;h<hl;h++){const ahole=holes[h];vertices=vertices.concat(ahole);}function scalePt2(pt,vec,size){if(!vec)console.error('THREE.ExtrudeGeometry: vec does not exist');return vec.clone().multiplyScalar(size).add(pt);}const vlen=vertices.length,flen=faces.length;// Find directions for point movement\nfunction getBevelVec(inPt,inPrev,inNext){// computes for inPt the corresponding point inPt' on a new contour\n//   shifted by 1 unit (length of normalized vector) to the left\n// if we walk along contour clockwise, this new contour is outside the old one\n//\n// inPt' is the intersection of the two lines parallel to the two\n//  adjacent edges of inPt at a distance of 1 unit on the left side.\nlet v_trans_x,v_trans_y,shrink_by;// resulting translation vector for inPt\n// good reading for geometry algorithms (here: line-line intersection)\n// http://geomalgorithms.com/a05-_intersect-1.html\nconst v_prev_x=inPt.x-inPrev.x,v_prev_y=inPt.y-inPrev.y;const v_next_x=inNext.x-inPt.x,v_next_y=inNext.y-inPt.y;const v_prev_lensq=v_prev_x*v_prev_x+v_prev_y*v_prev_y;// check for collinear edges\nconst collinear0=v_prev_x*v_next_y-v_prev_y*v_next_x;if(Math.abs(collinear0)>Number.EPSILON){// not collinear\n// length of vectors for normalizing\nconst v_prev_len=Math.sqrt(v_prev_lensq);const v_next_len=Math.sqrt(v_next_x*v_next_x+v_next_y*v_next_y);// shift adjacent points by unit vectors to the left\nconst ptPrevShift_x=inPrev.x-v_prev_y/v_prev_len;const ptPrevShift_y=inPrev.y+v_prev_x/v_prev_len;const ptNextShift_x=inNext.x-v_next_y/v_next_len;const ptNextShift_y=inNext.y+v_next_x/v_next_len;// scaling factor for v_prev to intersection point\nconst sf=((ptNextShift_x-ptPrevShift_x)*v_next_y-(ptNextShift_y-ptPrevShift_y)*v_next_x)/(v_prev_x*v_next_y-v_prev_y*v_next_x);// vector from inPt to intersection point\nv_trans_x=ptPrevShift_x+v_prev_x*sf-inPt.x;v_trans_y=ptPrevShift_y+v_prev_y*sf-inPt.y;// Don't normalize!, otherwise sharp corners become ugly\n//  but prevent crazy spikes\nconst v_trans_lensq=v_trans_x*v_trans_x+v_trans_y*v_trans_y;if(v_trans_lensq<=2){return new Vector2(v_trans_x,v_trans_y);}else{shrink_by=Math.sqrt(v_trans_lensq/2);}}else{// handle special case of collinear edges\nlet direction_eq=false;// assumes: opposite\nif(v_prev_x>Number.EPSILON){if(v_next_x>Number.EPSILON){direction_eq=true;}}else{if(v_prev_x<-Number.EPSILON){if(v_next_x<-Number.EPSILON){direction_eq=true;}}else{if(Math.sign(v_prev_y)===Math.sign(v_next_y)){direction_eq=true;}}}if(direction_eq){// console.log(\"Warning: lines are a straight sequence\");\nv_trans_x=-v_prev_y;v_trans_y=v_prev_x;shrink_by=Math.sqrt(v_prev_lensq);}else{// console.log(\"Warning: lines are a straight spike\");\nv_trans_x=v_prev_x;v_trans_y=v_prev_y;shrink_by=Math.sqrt(v_prev_lensq/2);}}return new Vector2(v_trans_x/shrink_by,v_trans_y/shrink_by);}const contourMovements=[];for(let i=0,il=contour.length,j=il-1,k=i+1;i<il;i++,j++,k++){if(j===il)j=0;if(k===il)k=0;//  (j)---(i)---(k)\n// console.log('i,j,k', i, j , k)\ncontourMovements[i]=getBevelVec(contour[i],contour[j],contour[k]);}const holesMovements=[];let oneHoleMovements,verticesMovements=contourMovements.concat();for(let h=0,hl=holes.length;h<hl;h++){const ahole=holes[h];oneHoleMovements=[];for(let i=0,il=ahole.length,j=il-1,k=i+1;i<il;i++,j++,k++){if(j===il)j=0;if(k===il)k=0;//  (j)---(i)---(k)\noneHoleMovements[i]=getBevelVec(ahole[i],ahole[j],ahole[k]);}holesMovements.push(oneHoleMovements);verticesMovements=verticesMovements.concat(oneHoleMovements);}// Loop bevelSegments, 1 for the front, 1 for the back\nfor(let b=0;b<bevelSegments;b++){//for ( b = bevelSegments; b > 0; b -- ) {\nconst t=b/bevelSegments;const z=bevelThickness*Math.cos(t*Math.PI/2);const bs=bevelSize*Math.sin(t*Math.PI/2)+bevelOffset;// contract shape\nfor(let i=0,il=contour.length;i<il;i++){const vert=scalePt2(contour[i],contourMovements[i],bs);v(vert.x,vert.y,-z);}// expand holes\nfor(let h=0,hl=holes.length;h<hl;h++){const ahole=holes[h];oneHoleMovements=holesMovements[h];for(let i=0,il=ahole.length;i<il;i++){const vert=scalePt2(ahole[i],oneHoleMovements[i],bs);v(vert.x,vert.y,-z);}}}const bs=bevelSize+bevelOffset;// Back facing vertices\nfor(let i=0;i<vlen;i++){const vert=bevelEnabled?scalePt2(vertices[i],verticesMovements[i],bs):vertices[i];if(!extrudeByPath){v(vert.x,vert.y,0);}else{// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\nnormal.copy(splineTube.normals[0]).multiplyScalar(vert.x);binormal.copy(splineTube.binormals[0]).multiplyScalar(vert.y);position2.copy(extrudePts[0]).add(normal).add(binormal);v(position2.x,position2.y,position2.z);}}// Add stepped vertices...\n// Including front facing vertices\nfor(let s=1;s<=steps;s++){for(let i=0;i<vlen;i++){const vert=bevelEnabled?scalePt2(vertices[i],verticesMovements[i],bs):vertices[i];if(!extrudeByPath){v(vert.x,vert.y,depth/steps*s);}else{// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\nnormal.copy(splineTube.normals[s]).multiplyScalar(vert.x);binormal.copy(splineTube.binormals[s]).multiplyScalar(vert.y);position2.copy(extrudePts[s]).add(normal).add(binormal);v(position2.x,position2.y,position2.z);}}}// Add bevel segments planes\n//for ( b = 1; b <= bevelSegments; b ++ ) {\nfor(let b=bevelSegments-1;b>=0;b--){const t=b/bevelSegments;const z=bevelThickness*Math.cos(t*Math.PI/2);const bs=bevelSize*Math.sin(t*Math.PI/2)+bevelOffset;// contract shape\nfor(let i=0,il=contour.length;i<il;i++){const vert=scalePt2(contour[i],contourMovements[i],bs);v(vert.x,vert.y,depth+z);}// expand holes\nfor(let h=0,hl=holes.length;h<hl;h++){const ahole=holes[h];oneHoleMovements=holesMovements[h];for(let i=0,il=ahole.length;i<il;i++){const vert=scalePt2(ahole[i],oneHoleMovements[i],bs);if(!extrudeByPath){v(vert.x,vert.y,depth+z);}else{v(vert.x,vert.y+extrudePts[steps-1].y,extrudePts[steps-1].x+z);}}}}/* Faces */ // Top and bottom faces\nbuildLidFaces();// Sides faces\nbuildSideFaces();/////  Internal functions\nfunction buildLidFaces(){const start=verticesArray.length/3;if(bevelEnabled){let layer=0;// steps + 1\nlet offset=vlen*layer;// Bottom faces\nfor(let i=0;i<flen;i++){const face=faces[i];f3(face[2]+offset,face[1]+offset,face[0]+offset);}layer=steps+bevelSegments*2;offset=vlen*layer;// Top faces\nfor(let i=0;i<flen;i++){const face=faces[i];f3(face[0]+offset,face[1]+offset,face[2]+offset);}}else{// Bottom faces\nfor(let i=0;i<flen;i++){const face=faces[i];f3(face[2],face[1],face[0]);}// Top faces\nfor(let i=0;i<flen;i++){const face=faces[i];f3(face[0]+vlen*steps,face[1]+vlen*steps,face[2]+vlen*steps);}}scope.addGroup(start,verticesArray.length/3-start,0);}// Create faces for the z-sides of the shape\nfunction buildSideFaces(){const start=verticesArray.length/3;let layeroffset=0;sidewalls(contour,layeroffset);layeroffset+=contour.length;for(let h=0,hl=holes.length;h<hl;h++){const ahole=holes[h];sidewalls(ahole,layeroffset);//, true\nlayeroffset+=ahole.length;}scope.addGroup(start,verticesArray.length/3-start,1);}function sidewalls(contour,layeroffset){let i=contour.length;while(--i>=0){const j=i;let k=i-1;if(k<0)k=contour.length-1;//console.log('b', i,j, i-1, k,vertices.length);\nfor(let s=0,sl=steps+bevelSegments*2;s<sl;s++){const slen1=vlen*s;const slen2=vlen*(s+1);const a=layeroffset+j+slen1,b=layeroffset+k+slen1,c=layeroffset+k+slen2,d=layeroffset+j+slen2;f4(a,b,c,d);}}}function v(x,y,z){placeholder.push(x);placeholder.push(y);placeholder.push(z);}function f3(a,b,c){addVertex(a);addVertex(b);addVertex(c);const nextIndex=verticesArray.length/3;const uvs=uvgen.generateTopUV(scope,verticesArray,nextIndex-3,nextIndex-2,nextIndex-1);addUV(uvs[0]);addUV(uvs[1]);addUV(uvs[2]);}function f4(a,b,c,d){addVertex(a);addVertex(b);addVertex(d);addVertex(b);addVertex(c);addVertex(d);const nextIndex=verticesArray.length/3;const uvs=uvgen.generateSideWallUV(scope,verticesArray,nextIndex-6,nextIndex-3,nextIndex-2,nextIndex-1);addUV(uvs[0]);addUV(uvs[1]);addUV(uvs[3]);addUV(uvs[1]);addUV(uvs[2]);addUV(uvs[3]);}function addVertex(index){verticesArray.push(placeholder[index*3+0]);verticesArray.push(placeholder[index*3+1]);verticesArray.push(placeholder[index*3+2]);}function addUV(vector2){uvArray.push(vector2.x);uvArray.push(vector2.y);}}}toJSON(){const data=BufferGeometry.prototype.toJSON.call(this);const shapes=this.parameters.shapes;const options=this.parameters.options;return toJSON(shapes,options,data);}}const WorldUVGenerator={generateTopUV:function(geometry,vertices,indexA,indexB,indexC){const a_x=vertices[indexA*3];const a_y=vertices[indexA*3+1];const b_x=vertices[indexB*3];const b_y=vertices[indexB*3+1];const c_x=vertices[indexC*3];const c_y=vertices[indexC*3+1];return[new Vector2(a_x,a_y),new Vector2(b_x,b_y),new Vector2(c_x,c_y)];},generateSideWallUV:function(geometry,vertices,indexA,indexB,indexC,indexD){const a_x=vertices[indexA*3];const a_y=vertices[indexA*3+1];const a_z=vertices[indexA*3+2];const b_x=vertices[indexB*3];const b_y=vertices[indexB*3+1];const b_z=vertices[indexB*3+2];const c_x=vertices[indexC*3];const c_y=vertices[indexC*3+1];const c_z=vertices[indexC*3+2];const d_x=vertices[indexD*3];const d_y=vertices[indexD*3+1];const d_z=vertices[indexD*3+2];if(Math.abs(a_y-b_y)<0.01){return[new Vector2(a_x,1-a_z),new Vector2(b_x,1-b_z),new Vector2(c_x,1-c_z),new Vector2(d_x,1-d_z)];}else{return[new Vector2(a_y,1-a_z),new Vector2(b_y,1-b_z),new Vector2(c_y,1-c_z),new Vector2(d_y,1-d_z)];}}};function toJSON(shapes,options,data){data.shapes=[];if(Array.isArray(shapes)){for(let i=0,l=shapes.length;i<l;i++){const shape=shapes[i];data.shapes.push(shape.uuid);}}else{data.shapes.push(shapes.uuid);}if(options.extrudePath!==undefined)data.options.extrudePath=options.extrudePath.toJSON();return data;}class IcosahedronGeometry extends PolyhedronGeometry{constructor(radius=1,detail=0){const t=(1+Math.sqrt(5))/2;const vertices=[-1,t,0,1,t,0,-1,-t,0,1,-t,0,0,-1,t,0,1,t,0,-1,-t,0,1,-t,t,0,-1,t,0,1,-t,0,-1,-t,0,1];const indices=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(vertices,indices,radius,detail);this.type='IcosahedronGeometry';this.parameters={radius:radius,detail:detail};}}class LatheGeometry extends BufferGeometry{constructor(points,segments=12,phiStart=0,phiLength=Math.PI*2){super();this.type='LatheGeometry';this.parameters={points:points,segments:segments,phiStart:phiStart,phiLength:phiLength};segments=Math.floor(segments);// clamp phiLength so it's in range of [ 0, 2PI ]\nphiLength=MathUtils.clamp(phiLength,0,Math.PI*2);// buffers\nconst indices=[];const vertices=[];const uvs=[];// helper variables\nconst inverseSegments=1.0/segments;const vertex=new Vector3();const uv=new Vector2();// generate vertices and uvs\nfor(let i=0;i<=segments;i++){const phi=phiStart+i*inverseSegments*phiLength;const sin=Math.sin(phi);const cos=Math.cos(phi);for(let j=0;j<=points.length-1;j++){// vertex\nvertex.x=points[j].x*sin;vertex.y=points[j].y;vertex.z=points[j].x*cos;vertices.push(vertex.x,vertex.y,vertex.z);// uv\nuv.x=i/segments;uv.y=j/(points.length-1);uvs.push(uv.x,uv.y);}}// indices\nfor(let i=0;i<segments;i++){for(let j=0;j<points.length-1;j++){const base=j+i*points.length;const a=base;const b=base+points.length;const c=base+points.length+1;const d=base+1;// faces\nindices.push(a,b,d);indices.push(b,c,d);}}// build geometry\nthis.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));// generate normals\nthis.computeVertexNormals();// if the geometry is closed, we need to average the normals along the seam.\n// because the corresponding vertices are identical (but still have different UVs).\nif(phiLength===Math.PI*2){const normals=this.attributes.normal.array;const n1=new Vector3();const n2=new Vector3();const n=new Vector3();// this is the buffer offset for the last line of vertices\nconst base=segments*points.length*3;for(let i=0,j=0;i<points.length;i++,j+=3){// select the normal of the vertex in the first line\nn1.x=normals[j+0];n1.y=normals[j+1];n1.z=normals[j+2];// select the normal of the vertex in the last line\nn2.x=normals[base+j+0];n2.y=normals[base+j+1];n2.z=normals[base+j+2];// average normals\nn.addVectors(n1,n2).normalize();// assign the new values to both normals\nnormals[j+0]=normals[base+j+0]=n.x;normals[j+1]=normals[base+j+1]=n.y;normals[j+2]=normals[base+j+2]=n.z;}}}}class OctahedronGeometry extends PolyhedronGeometry{constructor(radius=1,detail=0){const vertices=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1];const indices=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(vertices,indices,radius,detail);this.type='OctahedronGeometry';this.parameters={radius:radius,detail:detail};}}/**\n * Parametric Surfaces Geometry\n * based on the brilliant article by @prideout https://prideout.net/blog/old/blog/index.html@p=44.html\n */function ParametricGeometry(func,slices,stacks){BufferGeometry.call(this);this.type='ParametricGeometry';this.parameters={func:func,slices:slices,stacks:stacks};// buffers\nconst indices=[];const vertices=[];const normals=[];const uvs=[];const EPS=0.00001;const normal=new Vector3();const p0=new Vector3(),p1=new Vector3();const pu=new Vector3(),pv=new Vector3();if(func.length<3){console.error('THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.');}// generate vertices, normals and uvs\nconst sliceCount=slices+1;for(let i=0;i<=stacks;i++){const v=i/stacks;for(let j=0;j<=slices;j++){const u=j/slices;// vertex\nfunc(u,v,p0);vertices.push(p0.x,p0.y,p0.z);// normal\n// approximate tangent vectors via finite differences\nif(u-EPS>=0){func(u-EPS,v,p1);pu.subVectors(p0,p1);}else{func(u+EPS,v,p1);pu.subVectors(p1,p0);}if(v-EPS>=0){func(u,v-EPS,p1);pv.subVectors(p0,p1);}else{func(u,v+EPS,p1);pv.subVectors(p1,p0);}// cross product of tangent vectors returns surface normal\nnormal.crossVectors(pu,pv).normalize();normals.push(normal.x,normal.y,normal.z);// uv\nuvs.push(u,v);}}// generate indices\nfor(let i=0;i<stacks;i++){for(let j=0;j<slices;j++){const a=i*sliceCount+j;const b=i*sliceCount+j+1;const c=(i+1)*sliceCount+j+1;const d=(i+1)*sliceCount+j;// faces one and two\nindices.push(a,b,d);indices.push(b,c,d);}}// build geometry\nthis.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('normal',new Float32BufferAttribute(normals,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));}ParametricGeometry.prototype=Object.create(BufferGeometry.prototype);ParametricGeometry.prototype.constructor=ParametricGeometry;class RingGeometry extends BufferGeometry{constructor(innerRadius=0.5,outerRadius=1,thetaSegments=8,phiSegments=1,thetaStart=0,thetaLength=Math.PI*2){super();this.type='RingGeometry';this.parameters={innerRadius:innerRadius,outerRadius:outerRadius,thetaSegments:thetaSegments,phiSegments:phiSegments,thetaStart:thetaStart,thetaLength:thetaLength};thetaSegments=Math.max(3,thetaSegments);phiSegments=Math.max(1,phiSegments);// buffers\nconst indices=[];const vertices=[];const normals=[];const uvs=[];// some helper variables\nlet radius=innerRadius;const radiusStep=(outerRadius-innerRadius)/phiSegments;const vertex=new Vector3();const uv=new Vector2();// generate vertices, normals and uvs\nfor(let j=0;j<=phiSegments;j++){for(let i=0;i<=thetaSegments;i++){// values are generate from the inside of the ring to the outside\nconst segment=thetaStart+i/thetaSegments*thetaLength;// vertex\nvertex.x=radius*Math.cos(segment);vertex.y=radius*Math.sin(segment);vertices.push(vertex.x,vertex.y,vertex.z);// normal\nnormals.push(0,0,1);// uv\nuv.x=(vertex.x/outerRadius+1)/2;uv.y=(vertex.y/outerRadius+1)/2;uvs.push(uv.x,uv.y);}// increase the radius for next row of vertices\nradius+=radiusStep;}// indices\nfor(let j=0;j<phiSegments;j++){const thetaSegmentLevel=j*(thetaSegments+1);for(let i=0;i<thetaSegments;i++){const segment=i+thetaSegmentLevel;const a=segment;const b=segment+thetaSegments+1;const c=segment+thetaSegments+2;const d=segment+1;// faces\nindices.push(a,b,d);indices.push(b,c,d);}}// build geometry\nthis.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('normal',new Float32BufferAttribute(normals,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));}}class ShapeGeometry extends BufferGeometry{constructor(shapes,curveSegments=12){super();this.type='ShapeGeometry';this.parameters={shapes:shapes,curveSegments:curveSegments};// buffers\nconst indices=[];const vertices=[];const normals=[];const uvs=[];// helper variables\nlet groupStart=0;let groupCount=0;// allow single and array values for \"shapes\" parameter\nif(Array.isArray(shapes)===false){addShape(shapes);}else{for(let i=0;i<shapes.length;i++){addShape(shapes[i]);this.addGroup(groupStart,groupCount,i);// enables MultiMaterial support\ngroupStart+=groupCount;groupCount=0;}}// build geometry\nthis.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('normal',new Float32BufferAttribute(normals,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));// helper functions\nfunction addShape(shape){const indexOffset=vertices.length/3;const points=shape.extractPoints(curveSegments);let shapeVertices=points.shape;const shapeHoles=points.holes;// check direction of vertices\nif(ShapeUtils.isClockWise(shapeVertices)===false){shapeVertices=shapeVertices.reverse();}for(let i=0,l=shapeHoles.length;i<l;i++){const shapeHole=shapeHoles[i];if(ShapeUtils.isClockWise(shapeHole)===true){shapeHoles[i]=shapeHole.reverse();}}const faces=ShapeUtils.triangulateShape(shapeVertices,shapeHoles);// join vertices of inner and outer paths to a single array\nfor(let i=0,l=shapeHoles.length;i<l;i++){const shapeHole=shapeHoles[i];shapeVertices=shapeVertices.concat(shapeHole);}// vertices, normals, uvs\nfor(let i=0,l=shapeVertices.length;i<l;i++){const vertex=shapeVertices[i];vertices.push(vertex.x,vertex.y,0);normals.push(0,0,1);uvs.push(vertex.x,vertex.y);// world uvs\n}// incides\nfor(let i=0,l=faces.length;i<l;i++){const face=faces[i];const a=face[0]+indexOffset;const b=face[1]+indexOffset;const c=face[2]+indexOffset;indices.push(a,b,c);groupCount+=3;}}}toJSON(){const data=BufferGeometry.prototype.toJSON.call(this);const shapes=this.parameters.shapes;return toJSON$1(shapes,data);}}function toJSON$1(shapes,data){data.shapes=[];if(Array.isArray(shapes)){for(let i=0,l=shapes.length;i<l;i++){const shape=shapes[i];data.shapes.push(shape.uuid);}}else{data.shapes.push(shapes.uuid);}return data;}class SphereGeometry extends BufferGeometry{constructor(radius=1,widthSegments=8,heightSegments=6,phiStart=0,phiLength=Math.PI*2,thetaStart=0,thetaLength=Math.PI){super();this.type='SphereGeometry';this.parameters={radius:radius,widthSegments:widthSegments,heightSegments:heightSegments,phiStart:phiStart,phiLength:phiLength,thetaStart:thetaStart,thetaLength:thetaLength};widthSegments=Math.max(3,Math.floor(widthSegments));heightSegments=Math.max(2,Math.floor(heightSegments));const thetaEnd=Math.min(thetaStart+thetaLength,Math.PI);let index=0;const grid=[];const vertex=new Vector3();const normal=new Vector3();// buffers\nconst indices=[];const vertices=[];const normals=[];const uvs=[];// generate vertices, normals and uvs\nfor(let iy=0;iy<=heightSegments;iy++){const verticesRow=[];const v=iy/heightSegments;// special case for the poles\nlet uOffset=0;if(iy==0&&thetaStart==0){uOffset=0.5/widthSegments;}else if(iy==heightSegments&&thetaEnd==Math.PI){uOffset=-0.5/widthSegments;}for(let ix=0;ix<=widthSegments;ix++){const u=ix/widthSegments;// vertex\nvertex.x=-radius*Math.cos(phiStart+u*phiLength)*Math.sin(thetaStart+v*thetaLength);vertex.y=radius*Math.cos(thetaStart+v*thetaLength);vertex.z=radius*Math.sin(phiStart+u*phiLength)*Math.sin(thetaStart+v*thetaLength);vertices.push(vertex.x,vertex.y,vertex.z);// normal\nnormal.copy(vertex).normalize();normals.push(normal.x,normal.y,normal.z);// uv\nuvs.push(u+uOffset,1-v);verticesRow.push(index++);}grid.push(verticesRow);}// indices\nfor(let iy=0;iy<heightSegments;iy++){for(let ix=0;ix<widthSegments;ix++){const a=grid[iy][ix+1];const b=grid[iy][ix];const c=grid[iy+1][ix];const d=grid[iy+1][ix+1];if(iy!==0||thetaStart>0)indices.push(a,b,d);if(iy!==heightSegments-1||thetaEnd<Math.PI)indices.push(b,c,d);}}// build geometry\nthis.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('normal',new Float32BufferAttribute(normals,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));}}class TetrahedronGeometry extends PolyhedronGeometry{constructor(radius=1,detail=0){const vertices=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1];const indices=[2,1,0,0,3,2,1,3,0,2,3,1];super(vertices,indices,radius,detail);this.type='TetrahedronGeometry';this.parameters={radius:radius,detail:detail};}}/**\n * Text = 3D Text\n *\n * parameters = {\n *  font: <THREE.Font>, // font\n *\n *  size: <float>, // size of the text\n *  height: <float>, // thickness to extrude text\n *  curveSegments: <int>, // number of points on the curves\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into text bevel goes\n *  bevelSize: <float>, // how far from text outline (including bevelOffset) is bevel\n *  bevelOffset: <float> // how far from text outline does bevel start\n * }\n */class TextGeometry extends ExtrudeGeometry{constructor(text,parameters={}){const font=parameters.font;if(!(font&&font.isFont)){console.error('THREE.TextGeometry: font parameter is not an instance of THREE.Font.');return new BufferGeometry();}const shapes=font.generateShapes(text,parameters.size);// translate parameters to ExtrudeGeometry API\nparameters.depth=parameters.height!==undefined?parameters.height:50;// defaults\nif(parameters.bevelThickness===undefined)parameters.bevelThickness=10;if(parameters.bevelSize===undefined)parameters.bevelSize=8;if(parameters.bevelEnabled===undefined)parameters.bevelEnabled=false;super(shapes,parameters);this.type='TextGeometry';}}class TorusGeometry extends BufferGeometry{constructor(radius=1,tube=0.4,radialSegments=8,tubularSegments=6,arc=Math.PI*2){super();this.type='TorusGeometry';this.parameters={radius:radius,tube:tube,radialSegments:radialSegments,tubularSegments:tubularSegments,arc:arc};radialSegments=Math.floor(radialSegments);tubularSegments=Math.floor(tubularSegments);// buffers\nconst indices=[];const vertices=[];const normals=[];const uvs=[];// helper variables\nconst center=new Vector3();const vertex=new Vector3();const normal=new Vector3();// generate vertices, normals and uvs\nfor(let j=0;j<=radialSegments;j++){for(let i=0;i<=tubularSegments;i++){const u=i/tubularSegments*arc;const v=j/radialSegments*Math.PI*2;// vertex\nvertex.x=(radius+tube*Math.cos(v))*Math.cos(u);vertex.y=(radius+tube*Math.cos(v))*Math.sin(u);vertex.z=tube*Math.sin(v);vertices.push(vertex.x,vertex.y,vertex.z);// normal\ncenter.x=radius*Math.cos(u);center.y=radius*Math.sin(u);normal.subVectors(vertex,center).normalize();normals.push(normal.x,normal.y,normal.z);// uv\nuvs.push(i/tubularSegments);uvs.push(j/radialSegments);}}// generate indices\nfor(let j=1;j<=radialSegments;j++){for(let i=1;i<=tubularSegments;i++){// indices\nconst a=(tubularSegments+1)*j+i-1;const b=(tubularSegments+1)*(j-1)+i-1;const c=(tubularSegments+1)*(j-1)+i;const d=(tubularSegments+1)*j+i;// faces\nindices.push(a,b,d);indices.push(b,c,d);}}// build geometry\nthis.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('normal',new Float32BufferAttribute(normals,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));}}class TorusKnotGeometry extends BufferGeometry{constructor(radius=1,tube=0.4,tubularSegments=64,radialSegments=8,p=2,q=3){super();this.type='TorusKnotGeometry';this.parameters={radius:radius,tube:tube,tubularSegments:tubularSegments,radialSegments:radialSegments,p:p,q:q};tubularSegments=Math.floor(tubularSegments);radialSegments=Math.floor(radialSegments);// buffers\nconst indices=[];const vertices=[];const normals=[];const uvs=[];// helper variables\nconst vertex=new Vector3();const normal=new Vector3();const P1=new Vector3();const P2=new Vector3();const B=new Vector3();const T=new Vector3();const N=new Vector3();// generate vertices, normals and uvs\nfor(let i=0;i<=tubularSegments;++i){// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\nconst u=i/tubularSegments*p*Math.PI*2;// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\ncalculatePositionOnCurve(u,p,q,radius,P1);calculatePositionOnCurve(u+0.01,p,q,radius,P2);// calculate orthonormal basis\nT.subVectors(P2,P1);N.addVectors(P2,P1);B.crossVectors(T,N);N.crossVectors(B,T);// normalize B, N. T can be ignored, we don't use it\nB.normalize();N.normalize();for(let j=0;j<=radialSegments;++j){// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\nconst v=j/radialSegments*Math.PI*2;const cx=-tube*Math.cos(v);const cy=tube*Math.sin(v);// now calculate the final vertex position.\n// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\nvertex.x=P1.x+(cx*N.x+cy*B.x);vertex.y=P1.y+(cx*N.y+cy*B.y);vertex.z=P1.z+(cx*N.z+cy*B.z);vertices.push(vertex.x,vertex.y,vertex.z);// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\nnormal.subVectors(vertex,P1).normalize();normals.push(normal.x,normal.y,normal.z);// uv\nuvs.push(i/tubularSegments);uvs.push(j/radialSegments);}}// generate indices\nfor(let j=1;j<=tubularSegments;j++){for(let i=1;i<=radialSegments;i++){// indices\nconst a=(radialSegments+1)*(j-1)+(i-1);const b=(radialSegments+1)*j+(i-1);const c=(radialSegments+1)*j+i;const d=(radialSegments+1)*(j-1)+i;// faces\nindices.push(a,b,d);indices.push(b,c,d);}}// build geometry\nthis.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('normal',new Float32BufferAttribute(normals,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));// this function calculates the current position on the torus curve\nfunction calculatePositionOnCurve(u,p,q,radius,position){const cu=Math.cos(u);const su=Math.sin(u);const quOverP=q/p*u;const cs=Math.cos(quOverP);position.x=radius*(2+cs)*0.5*cu;position.y=radius*(2+cs)*su*0.5;position.z=radius*Math.sin(quOverP)*0.5;}}}class TubeGeometry extends BufferGeometry{constructor(path,tubularSegments=64,radius=1,radialSegments=8,closed=false){super();this.type='TubeGeometry';this.parameters={path:path,tubularSegments:tubularSegments,radius:radius,radialSegments:radialSegments,closed:closed};const frames=path.computeFrenetFrames(tubularSegments,closed);// expose internals\nthis.tangents=frames.tangents;this.normals=frames.normals;this.binormals=frames.binormals;// helper variables\nconst vertex=new Vector3();const normal=new Vector3();const uv=new Vector2();let P=new Vector3();// buffer\nconst vertices=[];const normals=[];const uvs=[];const indices=[];// create buffer data\ngenerateBufferData();// build geometry\nthis.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('normal',new Float32BufferAttribute(normals,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));// functions\nfunction generateBufferData(){for(let i=0;i<tubularSegments;i++){generateSegment(i);}// if the geometry is not closed, generate the last row of vertices and normals\n// at the regular position on the given path\n//\n// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\ngenerateSegment(closed===false?tubularSegments:0);// uvs are generated in a separate function.\n// this makes it easy compute correct values for closed geometries\ngenerateUVs();// finally create faces\ngenerateIndices();}function generateSegment(i){// we use getPointAt to sample evenly distributed points from the given path\nP=path.getPointAt(i/tubularSegments,P);// retrieve corresponding normal and binormal\nconst N=frames.normals[i];const B=frames.binormals[i];// generate normals and vertices for the current segment\nfor(let j=0;j<=radialSegments;j++){const v=j/radialSegments*Math.PI*2;const sin=Math.sin(v);const cos=-Math.cos(v);// normal\nnormal.x=cos*N.x+sin*B.x;normal.y=cos*N.y+sin*B.y;normal.z=cos*N.z+sin*B.z;normal.normalize();normals.push(normal.x,normal.y,normal.z);// vertex\nvertex.x=P.x+radius*normal.x;vertex.y=P.y+radius*normal.y;vertex.z=P.z+radius*normal.z;vertices.push(vertex.x,vertex.y,vertex.z);}}function generateIndices(){for(let j=1;j<=tubularSegments;j++){for(let i=1;i<=radialSegments;i++){const a=(radialSegments+1)*(j-1)+(i-1);const b=(radialSegments+1)*j+(i-1);const c=(radialSegments+1)*j+i;const d=(radialSegments+1)*(j-1)+i;// faces\nindices.push(a,b,d);indices.push(b,c,d);}}}function generateUVs(){for(let i=0;i<=tubularSegments;i++){for(let j=0;j<=radialSegments;j++){uv.x=i/tubularSegments;uv.y=j/radialSegments;uvs.push(uv.x,uv.y);}}}}toJSON(){const data=BufferGeometry.prototype.toJSON.call(this);data.path=this.parameters.path.toJSON();return data;}}class WireframeGeometry extends BufferGeometry{constructor(geometry){super();this.type='WireframeGeometry';if(geometry.isGeometry===true){console.error('THREE.WireframeGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');return;}// buffer\nconst vertices=[];// helper variables\nconst edge=[0,0],edges={};const vertex=new Vector3();if(geometry.index!==null){// indexed BufferGeometry\nconst position=geometry.attributes.position;const indices=geometry.index;let groups=geometry.groups;if(groups.length===0){groups=[{start:0,count:indices.count,materialIndex:0}];}// create a data structure that contains all eges without duplicates\nfor(let o=0,ol=groups.length;o<ol;++o){const group=groups[o];const start=group.start;const count=group.count;for(let i=start,l=start+count;i<l;i+=3){for(let j=0;j<3;j++){const edge1=indices.getX(i+j);const edge2=indices.getX(i+(j+1)%3);edge[0]=Math.min(edge1,edge2);// sorting prevents duplicates\nedge[1]=Math.max(edge1,edge2);const key=edge[0]+','+edge[1];if(edges[key]===undefined){edges[key]={index1:edge[0],index2:edge[1]};}}}}// generate vertices\nfor(const key in edges){const e=edges[key];vertex.fromBufferAttribute(position,e.index1);vertices.push(vertex.x,vertex.y,vertex.z);vertex.fromBufferAttribute(position,e.index2);vertices.push(vertex.x,vertex.y,vertex.z);}}else{// non-indexed BufferGeometry\nconst position=geometry.attributes.position;for(let i=0,l=position.count/3;i<l;i++){for(let j=0;j<3;j++){// three edges per triangle, an edge is represented as (index1, index2)\n// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\nconst index1=3*i+j;vertex.fromBufferAttribute(position,index1);vertices.push(vertex.x,vertex.y,vertex.z);const index2=3*i+(j+1)%3;vertex.fromBufferAttribute(position,index2);vertices.push(vertex.x,vertex.y,vertex.z);}}}// build geometry\nthis.setAttribute('position',new Float32BufferAttribute(vertices,3));}}var Geometries=/*#__PURE__*/Object.freeze({__proto__:null,BoxGeometry:BoxGeometry,BoxBufferGeometry:BoxGeometry,CircleGeometry:CircleGeometry,CircleBufferGeometry:CircleGeometry,ConeGeometry:ConeGeometry,ConeBufferGeometry:ConeGeometry,CylinderGeometry:CylinderGeometry,CylinderBufferGeometry:CylinderGeometry,DodecahedronGeometry:DodecahedronGeometry,DodecahedronBufferGeometry:DodecahedronGeometry,EdgesGeometry:EdgesGeometry,ExtrudeGeometry:ExtrudeGeometry,ExtrudeBufferGeometry:ExtrudeGeometry,IcosahedronGeometry:IcosahedronGeometry,IcosahedronBufferGeometry:IcosahedronGeometry,LatheGeometry:LatheGeometry,LatheBufferGeometry:LatheGeometry,OctahedronGeometry:OctahedronGeometry,OctahedronBufferGeometry:OctahedronGeometry,ParametricGeometry:ParametricGeometry,ParametricBufferGeometry:ParametricGeometry,PlaneGeometry:PlaneGeometry,PlaneBufferGeometry:PlaneGeometry,PolyhedronGeometry:PolyhedronGeometry,PolyhedronBufferGeometry:PolyhedronGeometry,RingGeometry:RingGeometry,RingBufferGeometry:RingGeometry,ShapeGeometry:ShapeGeometry,ShapeBufferGeometry:ShapeGeometry,SphereGeometry:SphereGeometry,SphereBufferGeometry:SphereGeometry,TetrahedronGeometry:TetrahedronGeometry,TetrahedronBufferGeometry:TetrahedronGeometry,TextGeometry:TextGeometry,TextBufferGeometry:TextGeometry,TorusGeometry:TorusGeometry,TorusBufferGeometry:TorusGeometry,TorusKnotGeometry:TorusKnotGeometry,TorusKnotBufferGeometry:TorusKnotGeometry,TubeGeometry:TubeGeometry,TubeBufferGeometry:TubeGeometry,WireframeGeometry:WireframeGeometry});/**\n * parameters = {\n *  color: <THREE.Color>\n * }\n */function ShadowMaterial(parameters){Material.call(this);this.type='ShadowMaterial';this.color=new Color(0x000000);this.transparent=true;this.setValues(parameters);}ShadowMaterial.prototype=Object.create(Material.prototype);ShadowMaterial.prototype.constructor=ShadowMaterial;ShadowMaterial.prototype.isShadowMaterial=true;ShadowMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.color.copy(source.color);return this;};function RawShaderMaterial(parameters){ShaderMaterial.call(this,parameters);this.type='RawShaderMaterial';}RawShaderMaterial.prototype=Object.create(ShaderMaterial.prototype);RawShaderMaterial.prototype.constructor=RawShaderMaterial;RawShaderMaterial.prototype.isRawShaderMaterial=true;/**\n * parameters = {\n *  color: <hex>,\n *  roughness: <float>,\n *  metalness: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  roughnessMap: new THREE.Texture( <Image> ),\n *\n *  metalnessMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  envMapIntensity: <float>\n *\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */function MeshStandardMaterial(parameters){Material.call(this);this.defines={'STANDARD':''};this.type='MeshStandardMaterial';this.color=new Color(0xffffff);// diffuse\nthis.roughness=1.0;this.metalness=0.0;this.map=null;this.lightMap=null;this.lightMapIntensity=1.0;this.aoMap=null;this.aoMapIntensity=1.0;this.emissive=new Color(0x000000);this.emissiveIntensity=1.0;this.emissiveMap=null;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=TangentSpaceNormalMap;this.normalScale=new Vector2(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.roughnessMap=null;this.metalnessMap=null;this.alphaMap=null;this.envMap=null;this.envMapIntensity=1.0;this.refractionRatio=0.98;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap='round';this.wireframeLinejoin='round';this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.vertexTangents=false;this.setValues(parameters);}MeshStandardMaterial.prototype=Object.create(Material.prototype);MeshStandardMaterial.prototype.constructor=MeshStandardMaterial;MeshStandardMaterial.prototype.isMeshStandardMaterial=true;MeshStandardMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.defines={'STANDARD':''};this.color.copy(source.color);this.roughness=source.roughness;this.metalness=source.metalness;this.map=source.map;this.lightMap=source.lightMap;this.lightMapIntensity=source.lightMapIntensity;this.aoMap=source.aoMap;this.aoMapIntensity=source.aoMapIntensity;this.emissive.copy(source.emissive);this.emissiveMap=source.emissiveMap;this.emissiveIntensity=source.emissiveIntensity;this.bumpMap=source.bumpMap;this.bumpScale=source.bumpScale;this.normalMap=source.normalMap;this.normalMapType=source.normalMapType;this.normalScale.copy(source.normalScale);this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.roughnessMap=source.roughnessMap;this.metalnessMap=source.metalnessMap;this.alphaMap=source.alphaMap;this.envMap=source.envMap;this.envMapIntensity=source.envMapIntensity;this.refractionRatio=source.refractionRatio;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.wireframeLinecap=source.wireframeLinecap;this.wireframeLinejoin=source.wireframeLinejoin;this.skinning=source.skinning;this.morphTargets=source.morphTargets;this.morphNormals=source.morphNormals;this.vertexTangents=source.vertexTangents;return this;};/**\n * parameters = {\n *  clearcoat: <float>,\n *  clearcoatMap: new THREE.Texture( <Image> ),\n *  clearcoatRoughness: <float>,\n *  clearcoatRoughnessMap: new THREE.Texture( <Image> ),\n *  clearcoatNormalScale: <Vector2>,\n *  clearcoatNormalMap: new THREE.Texture( <Image> ),\n *\n *  reflectivity: <float>,\n *  ior: <float>,\n *\n *  sheen: <Color>,\n *\n *  transmission: <float>,\n *  transmissionMap: new THREE.Texture( <Image> )\n * }\n */function MeshPhysicalMaterial(parameters){MeshStandardMaterial.call(this);this.defines={'STANDARD':'','PHYSICAL':''};this.type='MeshPhysicalMaterial';this.clearcoat=0.0;this.clearcoatMap=null;this.clearcoatRoughness=0.0;this.clearcoatRoughnessMap=null;this.clearcoatNormalScale=new Vector2(1,1);this.clearcoatNormalMap=null;this.reflectivity=0.5;// maps to F0 = 0.04\nObject.defineProperty(this,'ior',{get:function(){return(1+0.4*this.reflectivity)/(1-0.4*this.reflectivity);},set:function(ior){this.reflectivity=MathUtils.clamp(2.5*(ior-1)/(ior+1),0,1);}});this.sheen=null;// null will disable sheen bsdf\nthis.transmission=0.0;this.transmissionMap=null;this.setValues(parameters);}MeshPhysicalMaterial.prototype=Object.create(MeshStandardMaterial.prototype);MeshPhysicalMaterial.prototype.constructor=MeshPhysicalMaterial;MeshPhysicalMaterial.prototype.isMeshPhysicalMaterial=true;MeshPhysicalMaterial.prototype.copy=function(source){MeshStandardMaterial.prototype.copy.call(this,source);this.defines={'STANDARD':'','PHYSICAL':''};this.clearcoat=source.clearcoat;this.clearcoatMap=source.clearcoatMap;this.clearcoatRoughness=source.clearcoatRoughness;this.clearcoatRoughnessMap=source.clearcoatRoughnessMap;this.clearcoatNormalMap=source.clearcoatNormalMap;this.clearcoatNormalScale.copy(source.clearcoatNormalScale);this.reflectivity=source.reflectivity;if(source.sheen){this.sheen=(this.sheen||new Color()).copy(source.sheen);}else{this.sheen=null;}this.transmission=source.transmission;this.transmissionMap=source.transmissionMap;return this;};/**\n * parameters = {\n *  color: <hex>,\n *  specular: <hex>,\n *  shininess: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.MultiplyOperation,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */function MeshPhongMaterial(parameters){Material.call(this);this.type='MeshPhongMaterial';this.color=new Color(0xffffff);// diffuse\nthis.specular=new Color(0x111111);this.shininess=30;this.map=null;this.lightMap=null;this.lightMapIntensity=1.0;this.aoMap=null;this.aoMapIntensity=1.0;this.emissive=new Color(0x000000);this.emissiveIntensity=1.0;this.emissiveMap=null;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=TangentSpaceNormalMap;this.normalScale=new Vector2(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.specularMap=null;this.alphaMap=null;this.envMap=null;this.combine=MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap='round';this.wireframeLinejoin='round';this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.setValues(parameters);}MeshPhongMaterial.prototype=Object.create(Material.prototype);MeshPhongMaterial.prototype.constructor=MeshPhongMaterial;MeshPhongMaterial.prototype.isMeshPhongMaterial=true;MeshPhongMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.color.copy(source.color);this.specular.copy(source.specular);this.shininess=source.shininess;this.map=source.map;this.lightMap=source.lightMap;this.lightMapIntensity=source.lightMapIntensity;this.aoMap=source.aoMap;this.aoMapIntensity=source.aoMapIntensity;this.emissive.copy(source.emissive);this.emissiveMap=source.emissiveMap;this.emissiveIntensity=source.emissiveIntensity;this.bumpMap=source.bumpMap;this.bumpScale=source.bumpScale;this.normalMap=source.normalMap;this.normalMapType=source.normalMapType;this.normalScale.copy(source.normalScale);this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.specularMap=source.specularMap;this.alphaMap=source.alphaMap;this.envMap=source.envMap;this.combine=source.combine;this.reflectivity=source.reflectivity;this.refractionRatio=source.refractionRatio;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.wireframeLinecap=source.wireframeLinecap;this.wireframeLinejoin=source.wireframeLinejoin;this.skinning=source.skinning;this.morphTargets=source.morphTargets;this.morphNormals=source.morphNormals;return this;};/**\n * parameters = {\n *  color: <hex>,\n *\n *  map: new THREE.Texture( <Image> ),\n *  gradientMap: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */function MeshToonMaterial(parameters){Material.call(this);this.defines={'TOON':''};this.type='MeshToonMaterial';this.color=new Color(0xffffff);this.map=null;this.gradientMap=null;this.lightMap=null;this.lightMapIntensity=1.0;this.aoMap=null;this.aoMapIntensity=1.0;this.emissive=new Color(0x000000);this.emissiveIntensity=1.0;this.emissiveMap=null;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=TangentSpaceNormalMap;this.normalScale=new Vector2(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.alphaMap=null;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap='round';this.wireframeLinejoin='round';this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.setValues(parameters);}MeshToonMaterial.prototype=Object.create(Material.prototype);MeshToonMaterial.prototype.constructor=MeshToonMaterial;MeshToonMaterial.prototype.isMeshToonMaterial=true;MeshToonMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.color.copy(source.color);this.map=source.map;this.gradientMap=source.gradientMap;this.lightMap=source.lightMap;this.lightMapIntensity=source.lightMapIntensity;this.aoMap=source.aoMap;this.aoMapIntensity=source.aoMapIntensity;this.emissive.copy(source.emissive);this.emissiveMap=source.emissiveMap;this.emissiveIntensity=source.emissiveIntensity;this.bumpMap=source.bumpMap;this.bumpScale=source.bumpScale;this.normalMap=source.normalMap;this.normalMapType=source.normalMapType;this.normalScale.copy(source.normalScale);this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.alphaMap=source.alphaMap;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.wireframeLinecap=source.wireframeLinecap;this.wireframeLinejoin=source.wireframeLinejoin;this.skinning=source.skinning;this.morphTargets=source.morphTargets;this.morphNormals=source.morphNormals;return this;};/**\n * parameters = {\n *  opacity: <float>,\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */function MeshNormalMaterial(parameters){Material.call(this);this.type='MeshNormalMaterial';this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=TangentSpaceNormalMap;this.normalScale=new Vector2(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.wireframe=false;this.wireframeLinewidth=1;this.fog=false;this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.setValues(parameters);}MeshNormalMaterial.prototype=Object.create(Material.prototype);MeshNormalMaterial.prototype.constructor=MeshNormalMaterial;MeshNormalMaterial.prototype.isMeshNormalMaterial=true;MeshNormalMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.bumpMap=source.bumpMap;this.bumpScale=source.bumpScale;this.normalMap=source.normalMap;this.normalMapType=source.normalMapType;this.normalScale.copy(source.normalScale);this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.skinning=source.skinning;this.morphTargets=source.morphTargets;this.morphNormals=source.morphNormals;return this;};/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */function MeshLambertMaterial(parameters){Material.call(this);this.type='MeshLambertMaterial';this.color=new Color(0xffffff);// diffuse\nthis.map=null;this.lightMap=null;this.lightMapIntensity=1.0;this.aoMap=null;this.aoMapIntensity=1.0;this.emissive=new Color(0x000000);this.emissiveIntensity=1.0;this.emissiveMap=null;this.specularMap=null;this.alphaMap=null;this.envMap=null;this.combine=MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap='round';this.wireframeLinejoin='round';this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.setValues(parameters);}MeshLambertMaterial.prototype=Object.create(Material.prototype);MeshLambertMaterial.prototype.constructor=MeshLambertMaterial;MeshLambertMaterial.prototype.isMeshLambertMaterial=true;MeshLambertMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.color.copy(source.color);this.map=source.map;this.lightMap=source.lightMap;this.lightMapIntensity=source.lightMapIntensity;this.aoMap=source.aoMap;this.aoMapIntensity=source.aoMapIntensity;this.emissive.copy(source.emissive);this.emissiveMap=source.emissiveMap;this.emissiveIntensity=source.emissiveIntensity;this.specularMap=source.specularMap;this.alphaMap=source.alphaMap;this.envMap=source.envMap;this.combine=source.combine;this.reflectivity=source.reflectivity;this.refractionRatio=source.refractionRatio;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.wireframeLinecap=source.wireframeLinecap;this.wireframeLinejoin=source.wireframeLinejoin;this.skinning=source.skinning;this.morphTargets=source.morphTargets;this.morphNormals=source.morphNormals;return this;};/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  matcap: new THREE.Texture( <Image> ),\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */function MeshMatcapMaterial(parameters){Material.call(this);this.defines={'MATCAP':''};this.type='MeshMatcapMaterial';this.color=new Color(0xffffff);// diffuse\nthis.matcap=null;this.map=null;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=TangentSpaceNormalMap;this.normalScale=new Vector2(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.alphaMap=null;this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.setValues(parameters);}MeshMatcapMaterial.prototype=Object.create(Material.prototype);MeshMatcapMaterial.prototype.constructor=MeshMatcapMaterial;MeshMatcapMaterial.prototype.isMeshMatcapMaterial=true;MeshMatcapMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.defines={'MATCAP':''};this.color.copy(source.color);this.matcap=source.matcap;this.map=source.map;this.bumpMap=source.bumpMap;this.bumpScale=source.bumpScale;this.normalMap=source.normalMap;this.normalMapType=source.normalMapType;this.normalScale.copy(source.normalScale);this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.alphaMap=source.alphaMap;this.skinning=source.skinning;this.morphTargets=source.morphTargets;this.morphNormals=source.morphNormals;return this;};/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *\n *  scale: <float>,\n *  dashSize: <float>,\n *  gapSize: <float>\n * }\n */function LineDashedMaterial(parameters){LineBasicMaterial.call(this);this.type='LineDashedMaterial';this.scale=1;this.dashSize=3;this.gapSize=1;this.setValues(parameters);}LineDashedMaterial.prototype=Object.create(LineBasicMaterial.prototype);LineDashedMaterial.prototype.constructor=LineDashedMaterial;LineDashedMaterial.prototype.isLineDashedMaterial=true;LineDashedMaterial.prototype.copy=function(source){LineBasicMaterial.prototype.copy.call(this,source);this.scale=source.scale;this.dashSize=source.dashSize;this.gapSize=source.gapSize;return this;};var Materials=/*#__PURE__*/Object.freeze({__proto__:null,ShadowMaterial:ShadowMaterial,SpriteMaterial:SpriteMaterial,RawShaderMaterial:RawShaderMaterial,ShaderMaterial:ShaderMaterial,PointsMaterial:PointsMaterial,MeshPhysicalMaterial:MeshPhysicalMaterial,MeshStandardMaterial:MeshStandardMaterial,MeshPhongMaterial:MeshPhongMaterial,MeshToonMaterial:MeshToonMaterial,MeshNormalMaterial:MeshNormalMaterial,MeshLambertMaterial:MeshLambertMaterial,MeshDepthMaterial:MeshDepthMaterial,MeshDistanceMaterial:MeshDistanceMaterial,MeshBasicMaterial:MeshBasicMaterial,MeshMatcapMaterial:MeshMatcapMaterial,LineDashedMaterial:LineDashedMaterial,LineBasicMaterial:LineBasicMaterial,Material:Material});const AnimationUtils={// same as Array.prototype.slice, but also works on typed arrays\narraySlice:function(array,from,to){if(AnimationUtils.isTypedArray(array)){// in ios9 array.subarray(from, undefined) will return empty array\n// but array.subarray(from) or array.subarray(from, len) is correct\nreturn new array.constructor(array.subarray(from,to!==undefined?to:array.length));}return array.slice(from,to);},// converts an array to a specific type\nconvertArray:function(array,type,forceClone){if(!array||// let 'undefined' and 'null' pass\n!forceClone&&array.constructor===type)return array;if(typeof type.BYTES_PER_ELEMENT==='number'){return new type(array);// create typed array\n}return Array.prototype.slice.call(array);// create Array\n},isTypedArray:function(object){return ArrayBuffer.isView(object)&&!(object instanceof DataView);},// returns an array by which times and values can be sorted\ngetKeyframeOrder:function(times){function compareTime(i,j){return times[i]-times[j];}const n=times.length;const result=new Array(n);for(let i=0;i!==n;++i)result[i]=i;result.sort(compareTime);return result;},// uses the array previously returned by 'getKeyframeOrder' to sort data\nsortedArray:function(values,stride,order){const nValues=values.length;const result=new values.constructor(nValues);for(let i=0,dstOffset=0;dstOffset!==nValues;++i){const srcOffset=order[i]*stride;for(let j=0;j!==stride;++j){result[dstOffset++]=values[srcOffset+j];}}return result;},// function for parsing AOS keyframe formats\nflattenJSON:function(jsonKeys,times,values,valuePropertyName){let i=1,key=jsonKeys[0];while(key!==undefined&&key[valuePropertyName]===undefined){key=jsonKeys[i++];}if(key===undefined)return;// no data\nlet value=key[valuePropertyName];if(value===undefined)return;// no data\nif(Array.isArray(value)){do{value=key[valuePropertyName];if(value!==undefined){times.push(key.time);values.push.apply(values,value);// push all elements\n}key=jsonKeys[i++];}while(key!==undefined);}else if(value.toArray!==undefined){// ...assume THREE.Math-ish\ndo{value=key[valuePropertyName];if(value!==undefined){times.push(key.time);value.toArray(values,values.length);}key=jsonKeys[i++];}while(key!==undefined);}else{// otherwise push as-is\ndo{value=key[valuePropertyName];if(value!==undefined){times.push(key.time);values.push(value);}key=jsonKeys[i++];}while(key!==undefined);}},subclip:function(sourceClip,name,startFrame,endFrame,fps=30){const clip=sourceClip.clone();clip.name=name;const tracks=[];for(let i=0;i<clip.tracks.length;++i){const track=clip.tracks[i];const valueSize=track.getValueSize();const times=[];const values=[];for(let j=0;j<track.times.length;++j){const frame=track.times[j]*fps;if(frame<startFrame||frame>=endFrame)continue;times.push(track.times[j]);for(let k=0;k<valueSize;++k){values.push(track.values[j*valueSize+k]);}}if(times.length===0)continue;track.times=AnimationUtils.convertArray(times,track.times.constructor);track.values=AnimationUtils.convertArray(values,track.values.constructor);tracks.push(track);}clip.tracks=tracks;// find minimum .times value across all tracks in the trimmed clip\nlet minStartTime=Infinity;for(let i=0;i<clip.tracks.length;++i){if(minStartTime>clip.tracks[i].times[0]){minStartTime=clip.tracks[i].times[0];}}// shift all tracks such that clip begins at t=0\nfor(let i=0;i<clip.tracks.length;++i){clip.tracks[i].shift(-1*minStartTime);}clip.resetDuration();return clip;},makeClipAdditive:function(targetClip,referenceFrame=0,referenceClip=targetClip,fps=30){if(fps<=0)fps=30;const numTracks=referenceClip.tracks.length;const referenceTime=referenceFrame/fps;// Make each track's values relative to the values at the reference frame\nfor(let i=0;i<numTracks;++i){const referenceTrack=referenceClip.tracks[i];const referenceTrackType=referenceTrack.ValueTypeName;// Skip this track if it's non-numeric\nif(referenceTrackType==='bool'||referenceTrackType==='string')continue;// Find the track in the target clip whose name and type matches the reference track\nconst targetTrack=targetClip.tracks.find(function(track){return track.name===referenceTrack.name&&track.ValueTypeName===referenceTrackType;});if(targetTrack===undefined)continue;let referenceOffset=0;const referenceValueSize=referenceTrack.getValueSize();if(referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline){referenceOffset=referenceValueSize/3;}let targetOffset=0;const targetValueSize=targetTrack.getValueSize();if(targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline){targetOffset=targetValueSize/3;}const lastIndex=referenceTrack.times.length-1;let referenceValue;// Find the value to subtract out of the track\nif(referenceTime<=referenceTrack.times[0]){// Reference frame is earlier than the first keyframe, so just use the first keyframe\nconst startIndex=referenceOffset;const endIndex=referenceValueSize-referenceOffset;referenceValue=AnimationUtils.arraySlice(referenceTrack.values,startIndex,endIndex);}else if(referenceTime>=referenceTrack.times[lastIndex]){// Reference frame is after the last keyframe, so just use the last keyframe\nconst startIndex=lastIndex*referenceValueSize+referenceOffset;const endIndex=startIndex+referenceValueSize-referenceOffset;referenceValue=AnimationUtils.arraySlice(referenceTrack.values,startIndex,endIndex);}else{// Interpolate to the reference value\nconst interpolant=referenceTrack.createInterpolant();const startIndex=referenceOffset;const endIndex=referenceValueSize-referenceOffset;interpolant.evaluate(referenceTime);referenceValue=AnimationUtils.arraySlice(interpolant.resultBuffer,startIndex,endIndex);}// Conjugate the quaternion\nif(referenceTrackType==='quaternion'){const referenceQuat=new Quaternion().fromArray(referenceValue).normalize().conjugate();referenceQuat.toArray(referenceValue);}// Subtract the reference value from all of the track values\nconst numTimes=targetTrack.times.length;for(let j=0;j<numTimes;++j){const valueStart=j*targetValueSize+targetOffset;if(referenceTrackType==='quaternion'){// Multiply the conjugate for quaternion track types\nQuaternion.multiplyQuaternionsFlat(targetTrack.values,valueStart,referenceValue,0,targetTrack.values,valueStart);}else{const valueEnd=targetValueSize-targetOffset*2;// Subtract each value for all other numeric track types\nfor(let k=0;k<valueEnd;++k){targetTrack.values[valueStart+k]-=referenceValue[k];}}}}targetClip.blendMode=AdditiveAnimationBlendMode;return targetClip;}};/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */function Interpolant(parameterPositions,sampleValues,sampleSize,resultBuffer){this.parameterPositions=parameterPositions;this._cachedIndex=0;this.resultBuffer=resultBuffer!==undefined?resultBuffer:new sampleValues.constructor(sampleSize);this.sampleValues=sampleValues;this.valueSize=sampleSize;}Object.assign(Interpolant.prototype,{evaluate:function(t){const pp=this.parameterPositions;let i1=this._cachedIndex,t1=pp[i1],t0=pp[i1-1];validate_interval:{seek:{let right;linear_scan:{//- See http://jsperf.com/comparison-to-undefined/3\n//- slower code:\n//-\n//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\nforward_scan:if(!(t<t1)){for(let giveUpAt=i1+2;;){if(t1===undefined){if(t<t0)break forward_scan;// after end\ni1=pp.length;this._cachedIndex=i1;return this.afterEnd_(i1-1,t,t0);}if(i1===giveUpAt)break;// this loop\nt0=t1;t1=pp[++i1];if(t<t1){// we have arrived at the sought interval\nbreak seek;}}// prepare binary search on the right side of the index\nright=pp.length;break linear_scan;}//- slower code:\n//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\nif(!(t>=t0)){// looping?\nconst t1global=pp[1];if(t<t1global){i1=2;// + 1, using the scan for the details\nt0=t1global;}// linear reverse scan\nfor(let giveUpAt=i1-2;;){if(t0===undefined){// before start\nthis._cachedIndex=0;return this.beforeStart_(0,t,t1);}if(i1===giveUpAt)break;// this loop\nt1=t0;t0=pp[--i1-1];if(t>=t0){// we have arrived at the sought interval\nbreak seek;}}// prepare binary search on the left side of the index\nright=i1;i1=0;break linear_scan;}// the interval is valid\nbreak validate_interval;}// linear scan\n// binary search\nwhile(i1<right){const mid=i1+right>>>1;if(t<pp[mid]){right=mid;}else{i1=mid+1;}}t1=pp[i1];t0=pp[i1-1];// check boundary cases, again\nif(t0===undefined){this._cachedIndex=0;return this.beforeStart_(0,t,t1);}if(t1===undefined){i1=pp.length;this._cachedIndex=i1;return this.afterEnd_(i1-1,t0,t);}}// seek\nthis._cachedIndex=i1;this.intervalChanged_(i1,t0,t1);}// validate_interval\nreturn this.interpolate_(i1,t0,t,t1);},settings:null,// optional, subclass-specific settings structure\n// Note: The indirection allows central control of many interpolants.\n// --- Protected interface\nDefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_;},copySampleValue_:function(index){// copies a sample value to the result buffer\nconst result=this.resultBuffer,values=this.sampleValues,stride=this.valueSize,offset=index*stride;for(let i=0;i!==stride;++i){result[i]=values[offset+i];}return result;},// Template methods for derived classes:\ninterpolate_:function()/* i1, t0, t, t1 */{throw new Error('call to abstract method');// implementations shall return this.resultBuffer\n},intervalChanged_:function()/* i1, t0, t1 */{// empty\n}});// DECLARE ALIAS AFTER assign prototype\nObject.assign(Interpolant.prototype,{//( 0, t, t0 ), returns this.resultBuffer\nbeforeStart_:Interpolant.prototype.copySampleValue_,//( N-1, tN-1, t ), returns this.resultBuffer\nafterEnd_:Interpolant.prototype.copySampleValue_});/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */function CubicInterpolant(parameterPositions,sampleValues,sampleSize,resultBuffer){Interpolant.call(this,parameterPositions,sampleValues,sampleSize,resultBuffer);this._weightPrev=-0;this._offsetPrev=-0;this._weightNext=-0;this._offsetNext=-0;}CubicInterpolant.prototype=Object.assign(Object.create(Interpolant.prototype),{constructor:CubicInterpolant,DefaultSettings_:{endingStart:ZeroCurvatureEnding,endingEnd:ZeroCurvatureEnding},intervalChanged_:function(i1,t0,t1){const pp=this.parameterPositions;let iPrev=i1-2,iNext=i1+1,tPrev=pp[iPrev],tNext=pp[iNext];if(tPrev===undefined){switch(this.getSettings_().endingStart){case ZeroSlopeEnding:// f'(t0) = 0\niPrev=i1;tPrev=2*t0-t1;break;case WrapAroundEnding:// use the other end of the curve\niPrev=pp.length-2;tPrev=t0+pp[iPrev]-pp[iPrev+1];break;default:// ZeroCurvatureEnding\n// f''(t0) = 0 a.k.a. Natural Spline\niPrev=i1;tPrev=t1;}}if(tNext===undefined){switch(this.getSettings_().endingEnd){case ZeroSlopeEnding:// f'(tN) = 0\niNext=i1;tNext=2*t1-t0;break;case WrapAroundEnding:// use the other end of the curve\niNext=1;tNext=t1+pp[1]-pp[0];break;default:// ZeroCurvatureEnding\n// f''(tN) = 0, a.k.a. Natural Spline\niNext=i1-1;tNext=t0;}}const halfDt=(t1-t0)*0.5,stride=this.valueSize;this._weightPrev=halfDt/(t0-tPrev);this._weightNext=halfDt/(tNext-t1);this._offsetPrev=iPrev*stride;this._offsetNext=iNext*stride;},interpolate_:function(i1,t0,t,t1){const result=this.resultBuffer,values=this.sampleValues,stride=this.valueSize,o1=i1*stride,o0=o1-stride,oP=this._offsetPrev,oN=this._offsetNext,wP=this._weightPrev,wN=this._weightNext,p=(t-t0)/(t1-t0),pp=p*p,ppp=pp*p;// evaluate polynomials\nconst sP=-wP*ppp+2*wP*pp-wP*p;const s0=(1+wP)*ppp+(-1.5-2*wP)*pp+(-0.5+wP)*p+1;const s1=(-1-wN)*ppp+(1.5+wN)*pp+0.5*p;const sN=wN*ppp-wN*pp;// combine data linearly\nfor(let i=0;i!==stride;++i){result[i]=sP*values[oP+i]+s0*values[o0+i]+s1*values[o1+i]+sN*values[oN+i];}return result;}});function LinearInterpolant(parameterPositions,sampleValues,sampleSize,resultBuffer){Interpolant.call(this,parameterPositions,sampleValues,sampleSize,resultBuffer);}LinearInterpolant.prototype=Object.assign(Object.create(Interpolant.prototype),{constructor:LinearInterpolant,interpolate_:function(i1,t0,t,t1){const result=this.resultBuffer,values=this.sampleValues,stride=this.valueSize,offset1=i1*stride,offset0=offset1-stride,weight1=(t-t0)/(t1-t0),weight0=1-weight1;for(let i=0;i!==stride;++i){result[i]=values[offset0+i]*weight0+values[offset1+i]*weight1;}return result;}});/**\n *\n * Interpolant that evaluates to the sample value at the position preceeding\n * the parameter.\n */function DiscreteInterpolant(parameterPositions,sampleValues,sampleSize,resultBuffer){Interpolant.call(this,parameterPositions,sampleValues,sampleSize,resultBuffer);}DiscreteInterpolant.prototype=Object.assign(Object.create(Interpolant.prototype),{constructor:DiscreteInterpolant,interpolate_:function(i1/*, t0, t, t1 */){return this.copySampleValue_(i1-1);}});function KeyframeTrack(name,times,values,interpolation){if(name===undefined)throw new Error('THREE.KeyframeTrack: track name is undefined');if(times===undefined||times.length===0)throw new Error('THREE.KeyframeTrack: no keyframes in track named '+name);this.name=name;this.times=AnimationUtils.convertArray(times,this.TimeBufferType);this.values=AnimationUtils.convertArray(values,this.ValueBufferType);this.setInterpolation(interpolation||this.DefaultInterpolation);}// Static methods\nObject.assign(KeyframeTrack,{// Serialization (in static context, because of constructor invocation\n// and automatic invocation of .toJSON):\ntoJSON:function(track){const trackType=track.constructor;let json;// derived classes can define a static toJSON method\nif(trackType.toJSON!==undefined){json=trackType.toJSON(track);}else{// by default, we assume the data can be serialized as-is\njson={'name':track.name,'times':AnimationUtils.convertArray(track.times,Array),'values':AnimationUtils.convertArray(track.values,Array)};const interpolation=track.getInterpolation();if(interpolation!==track.DefaultInterpolation){json.interpolation=interpolation;}}json.type=track.ValueTypeName;// mandatory\nreturn json;}});Object.assign(KeyframeTrack.prototype,{constructor:KeyframeTrack,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:InterpolateLinear,InterpolantFactoryMethodDiscrete:function(result){return new DiscreteInterpolant(this.times,this.values,this.getValueSize(),result);},InterpolantFactoryMethodLinear:function(result){return new LinearInterpolant(this.times,this.values,this.getValueSize(),result);},InterpolantFactoryMethodSmooth:function(result){return new CubicInterpolant(this.times,this.values,this.getValueSize(),result);},setInterpolation:function(interpolation){let factoryMethod;switch(interpolation){case InterpolateDiscrete:factoryMethod=this.InterpolantFactoryMethodDiscrete;break;case InterpolateLinear:factoryMethod=this.InterpolantFactoryMethodLinear;break;case InterpolateSmooth:factoryMethod=this.InterpolantFactoryMethodSmooth;break;}if(factoryMethod===undefined){const message='unsupported interpolation for '+this.ValueTypeName+' keyframe track named '+this.name;if(this.createInterpolant===undefined){// fall back to default, unless the default itself is messed up\nif(interpolation!==this.DefaultInterpolation){this.setInterpolation(this.DefaultInterpolation);}else{throw new Error(message);// fatal, in this case\n}}console.warn('THREE.KeyframeTrack:',message);return this;}this.createInterpolant=factoryMethod;return this;},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return InterpolateDiscrete;case this.InterpolantFactoryMethodLinear:return InterpolateLinear;case this.InterpolantFactoryMethodSmooth:return InterpolateSmooth;}},getValueSize:function(){return this.values.length/this.times.length;},// move all keyframes either forwards or backwards in time\nshift:function(timeOffset){if(timeOffset!==0.0){const times=this.times;for(let i=0,n=times.length;i!==n;++i){times[i]+=timeOffset;}}return this;},// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\nscale:function(timeScale){if(timeScale!==1.0){const times=this.times;for(let i=0,n=times.length;i!==n;++i){times[i]*=timeScale;}}return this;},// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\ntrim:function(startTime,endTime){const times=this.times,nKeys=times.length;let from=0,to=nKeys-1;while(from!==nKeys&&times[from]<startTime){++from;}while(to!==-1&&times[to]>endTime){--to;}++to;// inclusive -> exclusive bound\nif(from!==0||to!==nKeys){// empty tracks are forbidden, so keep at least one keyframe\nif(from>=to){to=Math.max(to,1);from=to-1;}const stride=this.getValueSize();this.times=AnimationUtils.arraySlice(times,from,to);this.values=AnimationUtils.arraySlice(this.values,from*stride,to*stride);}return this;},// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\nvalidate:function(){let valid=true;const valueSize=this.getValueSize();if(valueSize-Math.floor(valueSize)!==0){console.error('THREE.KeyframeTrack: Invalid value size in track.',this);valid=false;}const times=this.times,values=this.values,nKeys=times.length;if(nKeys===0){console.error('THREE.KeyframeTrack: Track is empty.',this);valid=false;}let prevTime=null;for(let i=0;i!==nKeys;i++){const currTime=times[i];if(typeof currTime==='number'&&isNaN(currTime)){console.error('THREE.KeyframeTrack: Time is not a valid number.',this,i,currTime);valid=false;break;}if(prevTime!==null&&prevTime>currTime){console.error('THREE.KeyframeTrack: Out of order keys.',this,i,currTime,prevTime);valid=false;break;}prevTime=currTime;}if(values!==undefined){if(AnimationUtils.isTypedArray(values)){for(let i=0,n=values.length;i!==n;++i){const value=values[i];if(isNaN(value)){console.error('THREE.KeyframeTrack: Value is not a valid number.',this,i,value);valid=false;break;}}}}return valid;},// removes equivalent sequential keys as common in morph target sequences\n// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\noptimize:function(){// times or values may be shared with other tracks, so overwriting is unsafe\nconst times=AnimationUtils.arraySlice(this.times),values=AnimationUtils.arraySlice(this.values),stride=this.getValueSize(),smoothInterpolation=this.getInterpolation()===InterpolateSmooth,lastIndex=times.length-1;let writeIndex=1;for(let i=1;i<lastIndex;++i){let keep=false;const time=times[i];const timeNext=times[i+1];// remove adjacent keyframes scheduled at the same time\nif(time!==timeNext&&(i!==1||time!==times[0])){if(!smoothInterpolation){// remove unnecessary keyframes same as their neighbors\nconst offset=i*stride,offsetP=offset-stride,offsetN=offset+stride;for(let j=0;j!==stride;++j){const value=values[offset+j];if(value!==values[offsetP+j]||value!==values[offsetN+j]){keep=true;break;}}}else{keep=true;}}// in-place compaction\nif(keep){if(i!==writeIndex){times[writeIndex]=times[i];const readOffset=i*stride,writeOffset=writeIndex*stride;for(let j=0;j!==stride;++j){values[writeOffset+j]=values[readOffset+j];}}++writeIndex;}}// flush last keyframe (compaction looks ahead)\nif(lastIndex>0){times[writeIndex]=times[lastIndex];for(let readOffset=lastIndex*stride,writeOffset=writeIndex*stride,j=0;j!==stride;++j){values[writeOffset+j]=values[readOffset+j];}++writeIndex;}if(writeIndex!==times.length){this.times=AnimationUtils.arraySlice(times,0,writeIndex);this.values=AnimationUtils.arraySlice(values,0,writeIndex*stride);}else{this.times=times;this.values=values;}return this;},clone:function(){const times=AnimationUtils.arraySlice(this.times,0);const values=AnimationUtils.arraySlice(this.values,0);const TypedKeyframeTrack=this.constructor;const track=new TypedKeyframeTrack(this.name,times,values);// Interpolant argument to constructor is not saved, so copy the factory method directly.\ntrack.createInterpolant=this.createInterpolant;return track;}});/**\n * A Track of Boolean keyframe values.\n */function BooleanKeyframeTrack(name,times,values){KeyframeTrack.call(this,name,times,values);}BooleanKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:BooleanKeyframeTrack,ValueTypeName:'bool',ValueBufferType:Array,DefaultInterpolation:InterpolateDiscrete,InterpolantFactoryMethodLinear:undefined,InterpolantFactoryMethodSmooth:undefined// Note: Actually this track could have a optimized / compressed\n// representation of a single value and a custom interpolant that\n// computes \"firstValue ^ isOdd( index )\".\n});/**\n * A Track of keyframe values that represent color.\n */function ColorKeyframeTrack(name,times,values,interpolation){KeyframeTrack.call(this,name,times,values,interpolation);}ColorKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:ColorKeyframeTrack,ValueTypeName:'color'// ValueBufferType is inherited\n// DefaultInterpolation is inherited\n// Note: Very basic implementation and nothing special yet.\n// However, this is the place for color space parameterization.\n});/**\n * A Track of numeric keyframe values.\n */function NumberKeyframeTrack(name,times,values,interpolation){KeyframeTrack.call(this,name,times,values,interpolation);}NumberKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:NumberKeyframeTrack,ValueTypeName:'number'// ValueBufferType is inherited\n// DefaultInterpolation is inherited\n});/**\n * Spherical linear unit quaternion interpolant.\n */function QuaternionLinearInterpolant(parameterPositions,sampleValues,sampleSize,resultBuffer){Interpolant.call(this,parameterPositions,sampleValues,sampleSize,resultBuffer);}QuaternionLinearInterpolant.prototype=Object.assign(Object.create(Interpolant.prototype),{constructor:QuaternionLinearInterpolant,interpolate_:function(i1,t0,t,t1){const result=this.resultBuffer,values=this.sampleValues,stride=this.valueSize,alpha=(t-t0)/(t1-t0);let offset=i1*stride;for(let end=offset+stride;offset!==end;offset+=4){Quaternion.slerpFlat(result,0,values,offset-stride,values,offset,alpha);}return result;}});/**\n * A Track of quaternion keyframe values.\n */function QuaternionKeyframeTrack(name,times,values,interpolation){KeyframeTrack.call(this,name,times,values,interpolation);}QuaternionKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:QuaternionKeyframeTrack,ValueTypeName:'quaternion',// ValueBufferType is inherited\nDefaultInterpolation:InterpolateLinear,InterpolantFactoryMethodLinear:function(result){return new QuaternionLinearInterpolant(this.times,this.values,this.getValueSize(),result);},InterpolantFactoryMethodSmooth:undefined// not yet implemented\n});/**\n * A Track that interpolates Strings\n */function StringKeyframeTrack(name,times,values,interpolation){KeyframeTrack.call(this,name,times,values,interpolation);}StringKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:StringKeyframeTrack,ValueTypeName:'string',ValueBufferType:Array,DefaultInterpolation:InterpolateDiscrete,InterpolantFactoryMethodLinear:undefined,InterpolantFactoryMethodSmooth:undefined});/**\n * A Track of vectored keyframe values.\n */function VectorKeyframeTrack(name,times,values,interpolation){KeyframeTrack.call(this,name,times,values,interpolation);}VectorKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:VectorKeyframeTrack,ValueTypeName:'vector'// ValueBufferType is inherited\n// DefaultInterpolation is inherited\n});function AnimationClip(name,duration=-1,tracks,blendMode=NormalAnimationBlendMode){this.name=name;this.tracks=tracks;this.duration=duration;this.blendMode=blendMode;this.uuid=MathUtils.generateUUID();// this means it should figure out its duration by scanning the tracks\nif(this.duration<0){this.resetDuration();}}function getTrackTypeForValueTypeName(typeName){switch(typeName.toLowerCase()){case'scalar':case'double':case'float':case'number':case'integer':return NumberKeyframeTrack;case'vector':case'vector2':case'vector3':case'vector4':return VectorKeyframeTrack;case'color':return ColorKeyframeTrack;case'quaternion':return QuaternionKeyframeTrack;case'bool':case'boolean':return BooleanKeyframeTrack;case'string':return StringKeyframeTrack;}throw new Error('THREE.KeyframeTrack: Unsupported typeName: '+typeName);}function parseKeyframeTrack(json){if(json.type===undefined){throw new Error('THREE.KeyframeTrack: track type undefined, can not parse');}const trackType=getTrackTypeForValueTypeName(json.type);if(json.times===undefined){const times=[],values=[];AnimationUtils.flattenJSON(json.keys,times,values,'value');json.times=times;json.values=values;}// derived classes can define a static parse method\nif(trackType.parse!==undefined){return trackType.parse(json);}else{// by default, we assume a constructor compatible with the base\nreturn new trackType(json.name,json.times,json.values,json.interpolation);}}Object.assign(AnimationClip,{parse:function(json){const tracks=[],jsonTracks=json.tracks,frameTime=1.0/(json.fps||1.0);for(let i=0,n=jsonTracks.length;i!==n;++i){tracks.push(parseKeyframeTrack(jsonTracks[i]).scale(frameTime));}const clip=new AnimationClip(json.name,json.duration,tracks,json.blendMode);clip.uuid=json.uuid;return clip;},toJSON:function(clip){const tracks=[],clipTracks=clip.tracks;const json={'name':clip.name,'duration':clip.duration,'tracks':tracks,'uuid':clip.uuid,'blendMode':clip.blendMode};for(let i=0,n=clipTracks.length;i!==n;++i){tracks.push(KeyframeTrack.toJSON(clipTracks[i]));}return json;},CreateFromMorphTargetSequence:function(name,morphTargetSequence,fps,noLoop){const numMorphTargets=morphTargetSequence.length;const tracks=[];for(let i=0;i<numMorphTargets;i++){let times=[];let values=[];times.push((i+numMorphTargets-1)%numMorphTargets,i,(i+1)%numMorphTargets);values.push(0,1,0);const order=AnimationUtils.getKeyframeOrder(times);times=AnimationUtils.sortedArray(times,1,order);values=AnimationUtils.sortedArray(values,1,order);// if there is a key at the first frame, duplicate it as the\n// last frame as well for perfect loop.\nif(!noLoop&&times[0]===0){times.push(numMorphTargets);values.push(values[0]);}tracks.push(new NumberKeyframeTrack('.morphTargetInfluences['+morphTargetSequence[i].name+']',times,values).scale(1.0/fps));}return new AnimationClip(name,-1,tracks);},findByName:function(objectOrClipArray,name){let clipArray=objectOrClipArray;if(!Array.isArray(objectOrClipArray)){const o=objectOrClipArray;clipArray=o.geometry&&o.geometry.animations||o.animations;}for(let i=0;i<clipArray.length;i++){if(clipArray[i].name===name){return clipArray[i];}}return null;},CreateClipsFromMorphTargetSequences:function(morphTargets,fps,noLoop){const animationToMorphTargets={};// tested with https://regex101.com/ on trick sequences\n// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\nconst pattern=/^([\\w-]*?)([\\d]+)$/;// sort morph target names into animation groups based\n// patterns like Walk_001, Walk_002, Run_001, Run_002\nfor(let i=0,il=morphTargets.length;i<il;i++){const morphTarget=morphTargets[i];const parts=morphTarget.name.match(pattern);if(parts&&parts.length>1){const name=parts[1];let animationMorphTargets=animationToMorphTargets[name];if(!animationMorphTargets){animationToMorphTargets[name]=animationMorphTargets=[];}animationMorphTargets.push(morphTarget);}}const clips=[];for(const name in animationToMorphTargets){clips.push(AnimationClip.CreateFromMorphTargetSequence(name,animationToMorphTargets[name],fps,noLoop));}return clips;},// parse the animation.hierarchy format\nparseAnimation:function(animation,bones){if(!animation){console.error('THREE.AnimationClip: No animation in JSONLoader data.');return null;}const addNonemptyTrack=function(trackType,trackName,animationKeys,propertyName,destTracks){// only return track if there are actually keys.\nif(animationKeys.length!==0){const times=[];const values=[];AnimationUtils.flattenJSON(animationKeys,times,values,propertyName);// empty keys are filtered out, so check again\nif(times.length!==0){destTracks.push(new trackType(trackName,times,values));}}};const tracks=[];const clipName=animation.name||'default';const fps=animation.fps||30;const blendMode=animation.blendMode;// automatic length determination in AnimationClip.\nlet duration=animation.length||-1;const hierarchyTracks=animation.hierarchy||[];for(let h=0;h<hierarchyTracks.length;h++){const animationKeys=hierarchyTracks[h].keys;// skip empty tracks\nif(!animationKeys||animationKeys.length===0)continue;// process morph targets\nif(animationKeys[0].morphTargets){// figure out all morph targets used in this track\nconst morphTargetNames={};let k;for(k=0;k<animationKeys.length;k++){if(animationKeys[k].morphTargets){for(let m=0;m<animationKeys[k].morphTargets.length;m++){morphTargetNames[animationKeys[k].morphTargets[m]]=-1;}}}// create a track for each morph target with all zero\n// morphTargetInfluences except for the keys in which\n// the morphTarget is named.\nfor(const morphTargetName in morphTargetNames){const times=[];const values=[];for(let m=0;m!==animationKeys[k].morphTargets.length;++m){const animationKey=animationKeys[k];times.push(animationKey.time);values.push(animationKey.morphTarget===morphTargetName?1:0);}tracks.push(new NumberKeyframeTrack('.morphTargetInfluence['+morphTargetName+']',times,values));}duration=morphTargetNames.length*(fps||1.0);}else{// ...assume skeletal animation\nconst boneName='.bones['+bones[h].name+']';addNonemptyTrack(VectorKeyframeTrack,boneName+'.position',animationKeys,'pos',tracks);addNonemptyTrack(QuaternionKeyframeTrack,boneName+'.quaternion',animationKeys,'rot',tracks);addNonemptyTrack(VectorKeyframeTrack,boneName+'.scale',animationKeys,'scl',tracks);}}if(tracks.length===0){return null;}const clip=new AnimationClip(clipName,duration,tracks,blendMode);return clip;}});Object.assign(AnimationClip.prototype,{resetDuration:function(){const tracks=this.tracks;let duration=0;for(let i=0,n=tracks.length;i!==n;++i){const track=this.tracks[i];duration=Math.max(duration,track.times[track.times.length-1]);}this.duration=duration;return this;},trim:function(){for(let i=0;i<this.tracks.length;i++){this.tracks[i].trim(0,this.duration);}return this;},validate:function(){let valid=true;for(let i=0;i<this.tracks.length;i++){valid=valid&&this.tracks[i].validate();}return valid;},optimize:function(){for(let i=0;i<this.tracks.length;i++){this.tracks[i].optimize();}return this;},clone:function(){const tracks=[];for(let i=0;i<this.tracks.length;i++){tracks.push(this.tracks[i].clone());}return new AnimationClip(this.name,this.duration,tracks,this.blendMode);},toJSON:function(){return AnimationClip.toJSON(this);}});const Cache={enabled:false,files:{},add:function(key,file){if(this.enabled===false)return;// console.log( 'THREE.Cache', 'Adding key:', key );\nthis.files[key]=file;},get:function(key){if(this.enabled===false)return;// console.log( 'THREE.Cache', 'Checking key:', key );\nreturn this.files[key];},remove:function(key){delete this.files[key];},clear:function(){this.files={};}};function LoadingManager(onLoad,onProgress,onError){const scope=this;let isLoading=false;let itemsLoaded=0;let itemsTotal=0;let urlModifier=undefined;const handlers=[];// Refer to #5689 for the reason why we don't set .onStart\n// in the constructor\nthis.onStart=undefined;this.onLoad=onLoad;this.onProgress=onProgress;this.onError=onError;this.itemStart=function(url){itemsTotal++;if(isLoading===false){if(scope.onStart!==undefined){scope.onStart(url,itemsLoaded,itemsTotal);}}isLoading=true;};this.itemEnd=function(url){itemsLoaded++;if(scope.onProgress!==undefined){scope.onProgress(url,itemsLoaded,itemsTotal);}if(itemsLoaded===itemsTotal){isLoading=false;if(scope.onLoad!==undefined){scope.onLoad();}}};this.itemError=function(url){if(scope.onError!==undefined){scope.onError(url);}};this.resolveURL=function(url){if(urlModifier){return urlModifier(url);}return url;};this.setURLModifier=function(transform){urlModifier=transform;return this;};this.addHandler=function(regex,loader){handlers.push(regex,loader);return this;};this.removeHandler=function(regex){const index=handlers.indexOf(regex);if(index!==-1){handlers.splice(index,2);}return this;};this.getHandler=function(file){for(let i=0,l=handlers.length;i<l;i+=2){const regex=handlers[i];const loader=handlers[i+1];if(regex.global)regex.lastIndex=0;// see #17920\nif(regex.test(file)){return loader;}}return null;};}const DefaultLoadingManager=new LoadingManager();function Loader(manager){this.manager=manager!==undefined?manager:DefaultLoadingManager;this.crossOrigin='anonymous';this.withCredentials=false;this.path='';this.resourcePath='';this.requestHeader={};}Object.assign(Loader.prototype,{load:function()/* url, onLoad, onProgress, onError */{},loadAsync:function(url,onProgress){const scope=this;return new Promise(function(resolve,reject){scope.load(url,resolve,onProgress,reject);});},parse:function()/* data */{},setCrossOrigin:function(crossOrigin){this.crossOrigin=crossOrigin;return this;},setWithCredentials:function(value){this.withCredentials=value;return this;},setPath:function(path){this.path=path;return this;},setResourcePath:function(resourcePath){this.resourcePath=resourcePath;return this;},setRequestHeader:function(requestHeader){this.requestHeader=requestHeader;return this;}});const loading={};function FileLoader(manager){Loader.call(this,manager);}FileLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:FileLoader,load:function(url,onLoad,onProgress,onError){if(url===undefined)url='';if(this.path!==undefined)url=this.path+url;url=this.manager.resolveURL(url);const scope=this;const cached=Cache.get(url);if(cached!==undefined){scope.manager.itemStart(url);setTimeout(function(){if(onLoad)onLoad(cached);scope.manager.itemEnd(url);},0);return cached;}// Check if request is duplicate\nif(loading[url]!==undefined){loading[url].push({onLoad:onLoad,onProgress:onProgress,onError:onError});return;}// Check for data: URI\nconst dataUriRegex=/^data:(.*?)(;base64)?,(.*)$/;const dataUriRegexResult=url.match(dataUriRegex);let request;// Safari can not handle Data URIs through XMLHttpRequest so process manually\nif(dataUriRegexResult){const mimeType=dataUriRegexResult[1];const isBase64=!!dataUriRegexResult[2];let data=dataUriRegexResult[3];data=decodeURIComponent(data);if(isBase64)data=atob(data);try{let response;const responseType=(this.responseType||'').toLowerCase();switch(responseType){case'arraybuffer':case'blob':const view=new Uint8Array(data.length);for(let i=0;i<data.length;i++){view[i]=data.charCodeAt(i);}if(responseType==='blob'){response=new Blob([view.buffer],{type:mimeType});}else{response=view.buffer;}break;case'document':const parser=new DOMParser();response=parser.parseFromString(data,mimeType);break;case'json':response=JSON.parse(data);break;default:// 'text' or other\nresponse=data;break;}// Wait for next browser tick like standard XMLHttpRequest event dispatching does\nsetTimeout(function(){if(onLoad)onLoad(response);scope.manager.itemEnd(url);},0);}catch(error){// Wait for next browser tick like standard XMLHttpRequest event dispatching does\nsetTimeout(function(){if(onError)onError(error);scope.manager.itemError(url);scope.manager.itemEnd(url);},0);}}else{// Initialise array for duplicate requests\nloading[url]=[];loading[url].push({onLoad:onLoad,onProgress:onProgress,onError:onError});request=new XMLHttpRequest();request.open('GET',url,true);request.addEventListener('load',function(event){const response=this.response;const callbacks=loading[url];delete loading[url];if(this.status===200||this.status===0){// Some browsers return HTTP Status 0 when using non-http protocol\n// e.g. 'file://' or 'data://'. Handle as success.\nif(this.status===0)console.warn('THREE.FileLoader: HTTP Status 0 received.');// Add to cache only on HTTP success, so that we do not cache\n// error response bodies as proper responses to requests.\nCache.add(url,response);for(let i=0,il=callbacks.length;i<il;i++){const callback=callbacks[i];if(callback.onLoad)callback.onLoad(response);}scope.manager.itemEnd(url);}else{for(let i=0,il=callbacks.length;i<il;i++){const callback=callbacks[i];if(callback.onError)callback.onError(event);}scope.manager.itemError(url);scope.manager.itemEnd(url);}},false);request.addEventListener('progress',function(event){const callbacks=loading[url];for(let i=0,il=callbacks.length;i<il;i++){const callback=callbacks[i];if(callback.onProgress)callback.onProgress(event);}},false);request.addEventListener('error',function(event){const callbacks=loading[url];delete loading[url];for(let i=0,il=callbacks.length;i<il;i++){const callback=callbacks[i];if(callback.onError)callback.onError(event);}scope.manager.itemError(url);scope.manager.itemEnd(url);},false);request.addEventListener('abort',function(event){const callbacks=loading[url];delete loading[url];for(let i=0,il=callbacks.length;i<il;i++){const callback=callbacks[i];if(callback.onError)callback.onError(event);}scope.manager.itemError(url);scope.manager.itemEnd(url);},false);if(this.responseType!==undefined)request.responseType=this.responseType;if(this.withCredentials!==undefined)request.withCredentials=this.withCredentials;if(request.overrideMimeType)request.overrideMimeType(this.mimeType!==undefined?this.mimeType:'text/plain');for(const header in this.requestHeader){request.setRequestHeader(header,this.requestHeader[header]);}request.send(null);}scope.manager.itemStart(url);return request;},setResponseType:function(value){this.responseType=value;return this;},setMimeType:function(value){this.mimeType=value;return this;}});function AnimationLoader(manager){Loader.call(this,manager);}AnimationLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:AnimationLoader,load:function(url,onLoad,onProgress,onError){const scope=this;const loader=new FileLoader(scope.manager);loader.setPath(scope.path);loader.setRequestHeader(scope.requestHeader);loader.setWithCredentials(scope.withCredentials);loader.load(url,function(text){try{onLoad(scope.parse(JSON.parse(text)));}catch(e){if(onError){onError(e);}else{console.error(e);}scope.manager.itemError(url);}},onProgress,onError);},parse:function(json){const animations=[];for(let i=0;i<json.length;i++){const clip=AnimationClip.parse(json[i]);animations.push(clip);}return animations;}});/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */function CompressedTextureLoader(manager){Loader.call(this,manager);}CompressedTextureLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:CompressedTextureLoader,load:function(url,onLoad,onProgress,onError){const scope=this;const images=[];const texture=new CompressedTexture();const loader=new FileLoader(this.manager);loader.setPath(this.path);loader.setResponseType('arraybuffer');loader.setRequestHeader(this.requestHeader);loader.setWithCredentials(scope.withCredentials);let loaded=0;function loadTexture(i){loader.load(url[i],function(buffer){const texDatas=scope.parse(buffer,true);images[i]={width:texDatas.width,height:texDatas.height,format:texDatas.format,mipmaps:texDatas.mipmaps};loaded+=1;if(loaded===6){if(texDatas.mipmapCount===1)texture.minFilter=LinearFilter;texture.image=images;texture.format=texDatas.format;texture.needsUpdate=true;if(onLoad)onLoad(texture);}},onProgress,onError);}if(Array.isArray(url)){for(let i=0,il=url.length;i<il;++i){loadTexture(i);}}else{// compressed cubemap texture stored in a single DDS file\nloader.load(url,function(buffer){const texDatas=scope.parse(buffer,true);if(texDatas.isCubemap){const faces=texDatas.mipmaps.length/texDatas.mipmapCount;for(let f=0;f<faces;f++){images[f]={mipmaps:[]};for(let i=0;i<texDatas.mipmapCount;i++){images[f].mipmaps.push(texDatas.mipmaps[f*texDatas.mipmapCount+i]);images[f].format=texDatas.format;images[f].width=texDatas.width;images[f].height=texDatas.height;}}texture.image=images;}else{texture.image.width=texDatas.width;texture.image.height=texDatas.height;texture.mipmaps=texDatas.mipmaps;}if(texDatas.mipmapCount===1){texture.minFilter=LinearFilter;}texture.format=texDatas.format;texture.needsUpdate=true;if(onLoad)onLoad(texture);},onProgress,onError);}return texture;}});function ImageLoader(manager){Loader.call(this,manager);}ImageLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:ImageLoader,load:function(url,onLoad,onProgress,onError){if(this.path!==undefined)url=this.path+url;url=this.manager.resolveURL(url);const scope=this;const cached=Cache.get(url);if(cached!==undefined){scope.manager.itemStart(url);setTimeout(function(){if(onLoad)onLoad(cached);scope.manager.itemEnd(url);},0);return cached;}const image=document.createElementNS('http://www.w3.org/1999/xhtml','img');function onImageLoad(){image.removeEventListener('load',onImageLoad,false);image.removeEventListener('error',onImageError,false);Cache.add(url,this);if(onLoad)onLoad(this);scope.manager.itemEnd(url);}function onImageError(event){image.removeEventListener('load',onImageLoad,false);image.removeEventListener('error',onImageError,false);if(onError)onError(event);scope.manager.itemError(url);scope.manager.itemEnd(url);}image.addEventListener('load',onImageLoad,false);image.addEventListener('error',onImageError,false);if(url.substr(0,5)!=='data:'){if(this.crossOrigin!==undefined)image.crossOrigin=this.crossOrigin;}scope.manager.itemStart(url);image.src=url;return image;}});function CubeTextureLoader(manager){Loader.call(this,manager);}CubeTextureLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:CubeTextureLoader,load:function(urls,onLoad,onProgress,onError){const texture=new CubeTexture();const loader=new ImageLoader(this.manager);loader.setCrossOrigin(this.crossOrigin);loader.setPath(this.path);let loaded=0;function loadTexture(i){loader.load(urls[i],function(image){texture.images[i]=image;loaded++;if(loaded===6){texture.needsUpdate=true;if(onLoad)onLoad(texture);}},undefined,onError);}for(let i=0;i<urls.length;++i){loadTexture(i);}return texture;}});/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */function DataTextureLoader(manager){Loader.call(this,manager);}DataTextureLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:DataTextureLoader,load:function(url,onLoad,onProgress,onError){const scope=this;const texture=new DataTexture();const loader=new FileLoader(this.manager);loader.setResponseType('arraybuffer');loader.setRequestHeader(this.requestHeader);loader.setPath(this.path);loader.setWithCredentials(scope.withCredentials);loader.load(url,function(buffer){const texData=scope.parse(buffer);if(!texData)return;if(texData.image!==undefined){texture.image=texData.image;}else if(texData.data!==undefined){texture.image.width=texData.width;texture.image.height=texData.height;texture.image.data=texData.data;}texture.wrapS=texData.wrapS!==undefined?texData.wrapS:ClampToEdgeWrapping;texture.wrapT=texData.wrapT!==undefined?texData.wrapT:ClampToEdgeWrapping;texture.magFilter=texData.magFilter!==undefined?texData.magFilter:LinearFilter;texture.minFilter=texData.minFilter!==undefined?texData.minFilter:LinearFilter;texture.anisotropy=texData.anisotropy!==undefined?texData.anisotropy:1;if(texData.encoding!==undefined){texture.encoding=texData.encoding;}if(texData.flipY!==undefined){texture.flipY=texData.flipY;}if(texData.format!==undefined){texture.format=texData.format;}if(texData.type!==undefined){texture.type=texData.type;}if(texData.mipmaps!==undefined){texture.mipmaps=texData.mipmaps;texture.minFilter=LinearMipmapLinearFilter;// presumably...\n}if(texData.mipmapCount===1){texture.minFilter=LinearFilter;}texture.needsUpdate=true;if(onLoad)onLoad(texture,texData);},onProgress,onError);return texture;}});function TextureLoader(manager){Loader.call(this,manager);}TextureLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:TextureLoader,load:function(url,onLoad,onProgress,onError){const texture=new Texture();const loader=new ImageLoader(this.manager);loader.setCrossOrigin(this.crossOrigin);loader.setPath(this.path);loader.load(url,function(image){texture.image=image;// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\nconst isJPEG=url.search(/\\.jpe?g($|\\?)/i)>0||url.search(/^data\\:image\\/jpeg/)===0;texture.format=isJPEG?RGBFormat:RGBAFormat;texture.needsUpdate=true;if(onLoad!==undefined){onLoad(texture);}},onProgress,onError);return texture;}});/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/function Curve(){this.type='Curve';this.arcLengthDivisions=200;}Object.assign(Curve.prototype,{// Virtual base class method to overwrite and implement in subclasses\n//\t- t [0 .. 1]\ngetPoint:function()/* t, optionalTarget */{console.warn('THREE.Curve: .getPoint() not implemented.');return null;},// Get point at relative position in curve according to arc length\n// - u [0 .. 1]\ngetPointAt:function(u,optionalTarget){const t=this.getUtoTmapping(u);return this.getPoint(t,optionalTarget);},// Get sequence of points using getPoint( t )\ngetPoints:function(divisions=5){const points=[];for(let d=0;d<=divisions;d++){points.push(this.getPoint(d/divisions));}return points;},// Get sequence of points using getPointAt( u )\ngetSpacedPoints:function(divisions=5){const points=[];for(let d=0;d<=divisions;d++){points.push(this.getPointAt(d/divisions));}return points;},// Get total curve arc length\ngetLength:function(){const lengths=this.getLengths();return lengths[lengths.length-1];},// Get list of cumulative segment lengths\ngetLengths:function(divisions){if(divisions===undefined)divisions=this.arcLengthDivisions;if(this.cacheArcLengths&&this.cacheArcLengths.length===divisions+1&&!this.needsUpdate){return this.cacheArcLengths;}this.needsUpdate=false;const cache=[];let current,last=this.getPoint(0);let sum=0;cache.push(0);for(let p=1;p<=divisions;p++){current=this.getPoint(p/divisions);sum+=current.distanceTo(last);cache.push(sum);last=current;}this.cacheArcLengths=cache;return cache;// { sums: cache, sum: sum }; Sum is in the last element.\n},updateArcLengths:function(){this.needsUpdate=true;this.getLengths();},// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\ngetUtoTmapping:function(u,distance){const arcLengths=this.getLengths();let i=0;const il=arcLengths.length;let targetArcLength;// The targeted u distance value to get\nif(distance){targetArcLength=distance;}else{targetArcLength=u*arcLengths[il-1];}// binary search for the index with largest value smaller than target u distance\nlet low=0,high=il-1,comparison;while(low<=high){i=Math.floor(low+(high-low)/2);// less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\ncomparison=arcLengths[i]-targetArcLength;if(comparison<0){low=i+1;}else if(comparison>0){high=i-1;}else{high=i;break;// DONE\n}}i=high;if(arcLengths[i]===targetArcLength){return i/(il-1);}// we could get finer grain at lengths, or use simple interpolation between two points\nconst lengthBefore=arcLengths[i];const lengthAfter=arcLengths[i+1];const segmentLength=lengthAfter-lengthBefore;// determine where we are between the 'before' and 'after' points\nconst segmentFraction=(targetArcLength-lengthBefore)/segmentLength;// add that fractional amount to t\nconst t=(i+segmentFraction)/(il-1);return t;},// Returns a unit vector tangent at t\n// In case any sub curve does not implement its tangent derivation,\n// 2 points a small delta apart will be used to find its gradient\n// which seems to give a reasonable approximation\ngetTangent:function(t,optionalTarget){const delta=0.0001;let t1=t-delta;let t2=t+delta;// Capping in case of danger\nif(t1<0)t1=0;if(t2>1)t2=1;const pt1=this.getPoint(t1);const pt2=this.getPoint(t2);const tangent=optionalTarget||(pt1.isVector2?new Vector2():new Vector3());tangent.copy(pt2).sub(pt1).normalize();return tangent;},getTangentAt:function(u,optionalTarget){const t=this.getUtoTmapping(u);return this.getTangent(t,optionalTarget);},computeFrenetFrames:function(segments,closed){// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\nconst normal=new Vector3();const tangents=[];const normals=[];const binormals=[];const vec=new Vector3();const mat=new Matrix4();// compute the tangent vectors for each segment on the curve\nfor(let i=0;i<=segments;i++){const u=i/segments;tangents[i]=this.getTangentAt(u,new Vector3());tangents[i].normalize();}// select an initial normal vector perpendicular to the first tangent vector,\n// and in the direction of the minimum tangent xyz component\nnormals[0]=new Vector3();binormals[0]=new Vector3();let min=Number.MAX_VALUE;const tx=Math.abs(tangents[0].x);const ty=Math.abs(tangents[0].y);const tz=Math.abs(tangents[0].z);if(tx<=min){min=tx;normal.set(1,0,0);}if(ty<=min){min=ty;normal.set(0,1,0);}if(tz<=min){normal.set(0,0,1);}vec.crossVectors(tangents[0],normal).normalize();normals[0].crossVectors(tangents[0],vec);binormals[0].crossVectors(tangents[0],normals[0]);// compute the slowly-varying normal and binormal vectors for each segment on the curve\nfor(let i=1;i<=segments;i++){normals[i]=normals[i-1].clone();binormals[i]=binormals[i-1].clone();vec.crossVectors(tangents[i-1],tangents[i]);if(vec.length()>Number.EPSILON){vec.normalize();const theta=Math.acos(MathUtils.clamp(tangents[i-1].dot(tangents[i]),-1,1));// clamp for floating pt errors\nnormals[i].applyMatrix4(mat.makeRotationAxis(vec,theta));}binormals[i].crossVectors(tangents[i],normals[i]);}// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\nif(closed===true){let theta=Math.acos(MathUtils.clamp(normals[0].dot(normals[segments]),-1,1));theta/=segments;if(tangents[0].dot(vec.crossVectors(normals[0],normals[segments]))>0){theta=-theta;}for(let i=1;i<=segments;i++){// twist a little...\nnormals[i].applyMatrix4(mat.makeRotationAxis(tangents[i],theta*i));binormals[i].crossVectors(tangents[i],normals[i]);}}return{tangents:tangents,normals:normals,binormals:binormals};},clone:function(){return new this.constructor().copy(this);},copy:function(source){this.arcLengthDivisions=source.arcLengthDivisions;return this;},toJSON:function(){const data={metadata:{version:4.5,type:'Curve',generator:'Curve.toJSON'}};data.arcLengthDivisions=this.arcLengthDivisions;data.type=this.type;return data;},fromJSON:function(json){this.arcLengthDivisions=json.arcLengthDivisions;return this;}});function EllipseCurve(aX,aY,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise,aRotation){Curve.call(this);this.type='EllipseCurve';this.aX=aX||0;this.aY=aY||0;this.xRadius=xRadius||1;this.yRadius=yRadius||1;this.aStartAngle=aStartAngle||0;this.aEndAngle=aEndAngle||2*Math.PI;this.aClockwise=aClockwise||false;this.aRotation=aRotation||0;}EllipseCurve.prototype=Object.create(Curve.prototype);EllipseCurve.prototype.constructor=EllipseCurve;EllipseCurve.prototype.isEllipseCurve=true;EllipseCurve.prototype.getPoint=function(t,optionalTarget){const point=optionalTarget||new Vector2();const twoPi=Math.PI*2;let deltaAngle=this.aEndAngle-this.aStartAngle;const samePoints=Math.abs(deltaAngle)<Number.EPSILON;// ensures that deltaAngle is 0 .. 2 PI\nwhile(deltaAngle<0)deltaAngle+=twoPi;while(deltaAngle>twoPi)deltaAngle-=twoPi;if(deltaAngle<Number.EPSILON){if(samePoints){deltaAngle=0;}else{deltaAngle=twoPi;}}if(this.aClockwise===true&&!samePoints){if(deltaAngle===twoPi){deltaAngle=-twoPi;}else{deltaAngle=deltaAngle-twoPi;}}const angle=this.aStartAngle+t*deltaAngle;let x=this.aX+this.xRadius*Math.cos(angle);let y=this.aY+this.yRadius*Math.sin(angle);if(this.aRotation!==0){const cos=Math.cos(this.aRotation);const sin=Math.sin(this.aRotation);const tx=x-this.aX;const ty=y-this.aY;// Rotate the point about the center of the ellipse.\nx=tx*cos-ty*sin+this.aX;y=tx*sin+ty*cos+this.aY;}return point.set(x,y);};EllipseCurve.prototype.copy=function(source){Curve.prototype.copy.call(this,source);this.aX=source.aX;this.aY=source.aY;this.xRadius=source.xRadius;this.yRadius=source.yRadius;this.aStartAngle=source.aStartAngle;this.aEndAngle=source.aEndAngle;this.aClockwise=source.aClockwise;this.aRotation=source.aRotation;return this;};EllipseCurve.prototype.toJSON=function(){const data=Curve.prototype.toJSON.call(this);data.aX=this.aX;data.aY=this.aY;data.xRadius=this.xRadius;data.yRadius=this.yRadius;data.aStartAngle=this.aStartAngle;data.aEndAngle=this.aEndAngle;data.aClockwise=this.aClockwise;data.aRotation=this.aRotation;return data;};EllipseCurve.prototype.fromJSON=function(json){Curve.prototype.fromJSON.call(this,json);this.aX=json.aX;this.aY=json.aY;this.xRadius=json.xRadius;this.yRadius=json.yRadius;this.aStartAngle=json.aStartAngle;this.aEndAngle=json.aEndAngle;this.aClockwise=json.aClockwise;this.aRotation=json.aRotation;return this;};function ArcCurve(aX,aY,aRadius,aStartAngle,aEndAngle,aClockwise){EllipseCurve.call(this,aX,aY,aRadius,aRadius,aStartAngle,aEndAngle,aClockwise);this.type='ArcCurve';}ArcCurve.prototype=Object.create(EllipseCurve.prototype);ArcCurve.prototype.constructor=ArcCurve;ArcCurve.prototype.isArcCurve=true;/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */ /*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/function CubicPoly(){let c0=0,c1=0,c2=0,c3=0;/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */function init(x0,x1,t0,t1){c0=x0;c1=t0;c2=-3*x0+3*x1-2*t0-t1;c3=2*x0-2*x1+t0+t1;}return{initCatmullRom:function(x0,x1,x2,x3,tension){init(x1,x2,tension*(x2-x0),tension*(x3-x1));},initNonuniformCatmullRom:function(x0,x1,x2,x3,dt0,dt1,dt2){// compute tangents when parameterized in [t1,t2]\nlet t1=(x1-x0)/dt0-(x2-x0)/(dt0+dt1)+(x2-x1)/dt1;let t2=(x2-x1)/dt1-(x3-x1)/(dt1+dt2)+(x3-x2)/dt2;// rescale tangents for parametrization in [0,1]\nt1*=dt1;t2*=dt1;init(x1,x2,t1,t2);},calc:function(t){const t2=t*t;const t3=t2*t;return c0+c1*t+c2*t2+c3*t3;}};}//\nconst tmp=new Vector3();const px=new CubicPoly(),py=new CubicPoly(),pz=new CubicPoly();function CatmullRomCurve3(points=[],closed=false,curveType='centripetal',tension=0.5){Curve.call(this);this.type='CatmullRomCurve3';this.points=points;this.closed=closed;this.curveType=curveType;this.tension=tension;}CatmullRomCurve3.prototype=Object.create(Curve.prototype);CatmullRomCurve3.prototype.constructor=CatmullRomCurve3;CatmullRomCurve3.prototype.isCatmullRomCurve3=true;CatmullRomCurve3.prototype.getPoint=function(t,optionalTarget=new Vector3()){const point=optionalTarget;const points=this.points;const l=points.length;const p=(l-(this.closed?0:1))*t;let intPoint=Math.floor(p);let weight=p-intPoint;if(this.closed){intPoint+=intPoint>0?0:(Math.floor(Math.abs(intPoint)/l)+1)*l;}else if(weight===0&&intPoint===l-1){intPoint=l-2;weight=1;}let p0,p3;// 4 points (p1 & p2 defined below)\nif(this.closed||intPoint>0){p0=points[(intPoint-1)%l];}else{// extrapolate first point\ntmp.subVectors(points[0],points[1]).add(points[0]);p0=tmp;}const p1=points[intPoint%l];const p2=points[(intPoint+1)%l];if(this.closed||intPoint+2<l){p3=points[(intPoint+2)%l];}else{// extrapolate last point\ntmp.subVectors(points[l-1],points[l-2]).add(points[l-1]);p3=tmp;}if(this.curveType==='centripetal'||this.curveType==='chordal'){// init Centripetal / Chordal Catmull-Rom\nconst pow=this.curveType==='chordal'?0.5:0.25;let dt0=Math.pow(p0.distanceToSquared(p1),pow);let dt1=Math.pow(p1.distanceToSquared(p2),pow);let dt2=Math.pow(p2.distanceToSquared(p3),pow);// safety check for repeated points\nif(dt1<1e-4)dt1=1.0;if(dt0<1e-4)dt0=dt1;if(dt2<1e-4)dt2=dt1;px.initNonuniformCatmullRom(p0.x,p1.x,p2.x,p3.x,dt0,dt1,dt2);py.initNonuniformCatmullRom(p0.y,p1.y,p2.y,p3.y,dt0,dt1,dt2);pz.initNonuniformCatmullRom(p0.z,p1.z,p2.z,p3.z,dt0,dt1,dt2);}else if(this.curveType==='catmullrom'){px.initCatmullRom(p0.x,p1.x,p2.x,p3.x,this.tension);py.initCatmullRom(p0.y,p1.y,p2.y,p3.y,this.tension);pz.initCatmullRom(p0.z,p1.z,p2.z,p3.z,this.tension);}point.set(px.calc(weight),py.calc(weight),pz.calc(weight));return point;};CatmullRomCurve3.prototype.copy=function(source){Curve.prototype.copy.call(this,source);this.points=[];for(let i=0,l=source.points.length;i<l;i++){const point=source.points[i];this.points.push(point.clone());}this.closed=source.closed;this.curveType=source.curveType;this.tension=source.tension;return this;};CatmullRomCurve3.prototype.toJSON=function(){const data=Curve.prototype.toJSON.call(this);data.points=[];for(let i=0,l=this.points.length;i<l;i++){const point=this.points[i];data.points.push(point.toArray());}data.closed=this.closed;data.curveType=this.curveType;data.tension=this.tension;return data;};CatmullRomCurve3.prototype.fromJSON=function(json){Curve.prototype.fromJSON.call(this,json);this.points=[];for(let i=0,l=json.points.length;i<l;i++){const point=json.points[i];this.points.push(new Vector3().fromArray(point));}this.closed=json.closed;this.curveType=json.curveType;this.tension=json.tension;return this;};/**\n * Bezier Curves formulas obtained from\n * http://en.wikipedia.org/wiki/Bézier_curve\n */function CatmullRom(t,p0,p1,p2,p3){const v0=(p2-p0)*0.5;const v1=(p3-p1)*0.5;const t2=t*t;const t3=t*t2;return(2*p1-2*p2+v0+v1)*t3+(-3*p1+3*p2-2*v0-v1)*t2+v0*t+p1;}//\nfunction QuadraticBezierP0(t,p){const k=1-t;return k*k*p;}function QuadraticBezierP1(t,p){return 2*(1-t)*t*p;}function QuadraticBezierP2(t,p){return t*t*p;}function QuadraticBezier(t,p0,p1,p2){return QuadraticBezierP0(t,p0)+QuadraticBezierP1(t,p1)+QuadraticBezierP2(t,p2);}//\nfunction CubicBezierP0(t,p){const k=1-t;return k*k*k*p;}function CubicBezierP1(t,p){const k=1-t;return 3*k*k*t*p;}function CubicBezierP2(t,p){return 3*(1-t)*t*t*p;}function CubicBezierP3(t,p){return t*t*t*p;}function CubicBezier(t,p0,p1,p2,p3){return CubicBezierP0(t,p0)+CubicBezierP1(t,p1)+CubicBezierP2(t,p2)+CubicBezierP3(t,p3);}function CubicBezierCurve(v0=new Vector2(),v1=new Vector2(),v2=new Vector2(),v3=new Vector2()){Curve.call(this);this.type='CubicBezierCurve';this.v0=v0;this.v1=v1;this.v2=v2;this.v3=v3;}CubicBezierCurve.prototype=Object.create(Curve.prototype);CubicBezierCurve.prototype.constructor=CubicBezierCurve;CubicBezierCurve.prototype.isCubicBezierCurve=true;CubicBezierCurve.prototype.getPoint=function(t,optionalTarget=new Vector2()){const point=optionalTarget;const v0=this.v0,v1=this.v1,v2=this.v2,v3=this.v3;point.set(CubicBezier(t,v0.x,v1.x,v2.x,v3.x),CubicBezier(t,v0.y,v1.y,v2.y,v3.y));return point;};CubicBezierCurve.prototype.copy=function(source){Curve.prototype.copy.call(this,source);this.v0.copy(source.v0);this.v1.copy(source.v1);this.v2.copy(source.v2);this.v3.copy(source.v3);return this;};CubicBezierCurve.prototype.toJSON=function(){const data=Curve.prototype.toJSON.call(this);data.v0=this.v0.toArray();data.v1=this.v1.toArray();data.v2=this.v2.toArray();data.v3=this.v3.toArray();return data;};CubicBezierCurve.prototype.fromJSON=function(json){Curve.prototype.fromJSON.call(this,json);this.v0.fromArray(json.v0);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);this.v3.fromArray(json.v3);return this;};function CubicBezierCurve3(v0=new Vector3(),v1=new Vector3(),v2=new Vector3(),v3=new Vector3()){Curve.call(this);this.type='CubicBezierCurve3';this.v0=v0;this.v1=v1;this.v2=v2;this.v3=v3;}CubicBezierCurve3.prototype=Object.create(Curve.prototype);CubicBezierCurve3.prototype.constructor=CubicBezierCurve3;CubicBezierCurve3.prototype.isCubicBezierCurve3=true;CubicBezierCurve3.prototype.getPoint=function(t,optionalTarget=new Vector3()){const point=optionalTarget;const v0=this.v0,v1=this.v1,v2=this.v2,v3=this.v3;point.set(CubicBezier(t,v0.x,v1.x,v2.x,v3.x),CubicBezier(t,v0.y,v1.y,v2.y,v3.y),CubicBezier(t,v0.z,v1.z,v2.z,v3.z));return point;};CubicBezierCurve3.prototype.copy=function(source){Curve.prototype.copy.call(this,source);this.v0.copy(source.v0);this.v1.copy(source.v1);this.v2.copy(source.v2);this.v3.copy(source.v3);return this;};CubicBezierCurve3.prototype.toJSON=function(){const data=Curve.prototype.toJSON.call(this);data.v0=this.v0.toArray();data.v1=this.v1.toArray();data.v2=this.v2.toArray();data.v3=this.v3.toArray();return data;};CubicBezierCurve3.prototype.fromJSON=function(json){Curve.prototype.fromJSON.call(this,json);this.v0.fromArray(json.v0);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);this.v3.fromArray(json.v3);return this;};function LineCurve(v1=new Vector2(),v2=new Vector2()){Curve.call(this);this.type='LineCurve';this.v1=v1;this.v2=v2;}LineCurve.prototype=Object.create(Curve.prototype);LineCurve.prototype.constructor=LineCurve;LineCurve.prototype.isLineCurve=true;LineCurve.prototype.getPoint=function(t,optionalTarget=new Vector2()){const point=optionalTarget;if(t===1){point.copy(this.v2);}else{point.copy(this.v2).sub(this.v1);point.multiplyScalar(t).add(this.v1);}return point;};// Line curve is linear, so we can overwrite default getPointAt\nLineCurve.prototype.getPointAt=function(u,optionalTarget){return this.getPoint(u,optionalTarget);};LineCurve.prototype.getTangent=function(t,optionalTarget){const tangent=optionalTarget||new Vector2();tangent.copy(this.v2).sub(this.v1).normalize();return tangent;};LineCurve.prototype.copy=function(source){Curve.prototype.copy.call(this,source);this.v1.copy(source.v1);this.v2.copy(source.v2);return this;};LineCurve.prototype.toJSON=function(){const data=Curve.prototype.toJSON.call(this);data.v1=this.v1.toArray();data.v2=this.v2.toArray();return data;};LineCurve.prototype.fromJSON=function(json){Curve.prototype.fromJSON.call(this,json);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);return this;};function LineCurve3(v1=new Vector3(),v2=new Vector3()){Curve.call(this);this.type='LineCurve3';this.v1=v1;this.v2=v2;}LineCurve3.prototype=Object.create(Curve.prototype);LineCurve3.prototype.constructor=LineCurve3;LineCurve3.prototype.isLineCurve3=true;LineCurve3.prototype.getPoint=function(t,optionalTarget=new Vector3()){const point=optionalTarget;if(t===1){point.copy(this.v2);}else{point.copy(this.v2).sub(this.v1);point.multiplyScalar(t).add(this.v1);}return point;};// Line curve is linear, so we can overwrite default getPointAt\nLineCurve3.prototype.getPointAt=function(u,optionalTarget){return this.getPoint(u,optionalTarget);};LineCurve3.prototype.copy=function(source){Curve.prototype.copy.call(this,source);this.v1.copy(source.v1);this.v2.copy(source.v2);return this;};LineCurve3.prototype.toJSON=function(){const data=Curve.prototype.toJSON.call(this);data.v1=this.v1.toArray();data.v2=this.v2.toArray();return data;};LineCurve3.prototype.fromJSON=function(json){Curve.prototype.fromJSON.call(this,json);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);return this;};function QuadraticBezierCurve(v0=new Vector2(),v1=new Vector2(),v2=new Vector2()){Curve.call(this);this.type='QuadraticBezierCurve';this.v0=v0;this.v1=v1;this.v2=v2;}QuadraticBezierCurve.prototype=Object.create(Curve.prototype);QuadraticBezierCurve.prototype.constructor=QuadraticBezierCurve;QuadraticBezierCurve.prototype.isQuadraticBezierCurve=true;QuadraticBezierCurve.prototype.getPoint=function(t,optionalTarget=new Vector2()){const point=optionalTarget;const v0=this.v0,v1=this.v1,v2=this.v2;point.set(QuadraticBezier(t,v0.x,v1.x,v2.x),QuadraticBezier(t,v0.y,v1.y,v2.y));return point;};QuadraticBezierCurve.prototype.copy=function(source){Curve.prototype.copy.call(this,source);this.v0.copy(source.v0);this.v1.copy(source.v1);this.v2.copy(source.v2);return this;};QuadraticBezierCurve.prototype.toJSON=function(){const data=Curve.prototype.toJSON.call(this);data.v0=this.v0.toArray();data.v1=this.v1.toArray();data.v2=this.v2.toArray();return data;};QuadraticBezierCurve.prototype.fromJSON=function(json){Curve.prototype.fromJSON.call(this,json);this.v0.fromArray(json.v0);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);return this;};function QuadraticBezierCurve3(v0=new Vector3(),v1=new Vector3(),v2=new Vector3()){Curve.call(this);this.type='QuadraticBezierCurve3';this.v0=v0;this.v1=v1;this.v2=v2;}QuadraticBezierCurve3.prototype=Object.create(Curve.prototype);QuadraticBezierCurve3.prototype.constructor=QuadraticBezierCurve3;QuadraticBezierCurve3.prototype.isQuadraticBezierCurve3=true;QuadraticBezierCurve3.prototype.getPoint=function(t,optionalTarget=new Vector3()){const point=optionalTarget;const v0=this.v0,v1=this.v1,v2=this.v2;point.set(QuadraticBezier(t,v0.x,v1.x,v2.x),QuadraticBezier(t,v0.y,v1.y,v2.y),QuadraticBezier(t,v0.z,v1.z,v2.z));return point;};QuadraticBezierCurve3.prototype.copy=function(source){Curve.prototype.copy.call(this,source);this.v0.copy(source.v0);this.v1.copy(source.v1);this.v2.copy(source.v2);return this;};QuadraticBezierCurve3.prototype.toJSON=function(){const data=Curve.prototype.toJSON.call(this);data.v0=this.v0.toArray();data.v1=this.v1.toArray();data.v2=this.v2.toArray();return data;};QuadraticBezierCurve3.prototype.fromJSON=function(json){Curve.prototype.fromJSON.call(this,json);this.v0.fromArray(json.v0);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);return this;};function SplineCurve(points=[]){Curve.call(this);this.type='SplineCurve';this.points=points;}SplineCurve.prototype=Object.create(Curve.prototype);SplineCurve.prototype.constructor=SplineCurve;SplineCurve.prototype.isSplineCurve=true;SplineCurve.prototype.getPoint=function(t,optionalTarget=new Vector2()){const point=optionalTarget;const points=this.points;const p=(points.length-1)*t;const intPoint=Math.floor(p);const weight=p-intPoint;const p0=points[intPoint===0?intPoint:intPoint-1];const p1=points[intPoint];const p2=points[intPoint>points.length-2?points.length-1:intPoint+1];const p3=points[intPoint>points.length-3?points.length-1:intPoint+2];point.set(CatmullRom(weight,p0.x,p1.x,p2.x,p3.x),CatmullRom(weight,p0.y,p1.y,p2.y,p3.y));return point;};SplineCurve.prototype.copy=function(source){Curve.prototype.copy.call(this,source);this.points=[];for(let i=0,l=source.points.length;i<l;i++){const point=source.points[i];this.points.push(point.clone());}return this;};SplineCurve.prototype.toJSON=function(){const data=Curve.prototype.toJSON.call(this);data.points=[];for(let i=0,l=this.points.length;i<l;i++){const point=this.points[i];data.points.push(point.toArray());}return data;};SplineCurve.prototype.fromJSON=function(json){Curve.prototype.fromJSON.call(this,json);this.points=[];for(let i=0,l=json.points.length;i<l;i++){const point=json.points[i];this.points.push(new Vector2().fromArray(point));}return this;};var Curves=/*#__PURE__*/Object.freeze({__proto__:null,ArcCurve:ArcCurve,CatmullRomCurve3:CatmullRomCurve3,CubicBezierCurve:CubicBezierCurve,CubicBezierCurve3:CubicBezierCurve3,EllipseCurve:EllipseCurve,LineCurve:LineCurve,LineCurve3:LineCurve3,QuadraticBezierCurve:QuadraticBezierCurve,QuadraticBezierCurve3:QuadraticBezierCurve3,SplineCurve:SplineCurve});/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/function CurvePath(){Curve.call(this);this.type='CurvePath';this.curves=[];this.autoClose=false;// Automatically closes the path\n}CurvePath.prototype=Object.assign(Object.create(Curve.prototype),{constructor:CurvePath,add:function(curve){this.curves.push(curve);},closePath:function(){// Add a line curve if start and end of lines are not connected\nconst startPoint=this.curves[0].getPoint(0);const endPoint=this.curves[this.curves.length-1].getPoint(1);if(!startPoint.equals(endPoint)){this.curves.push(new LineCurve(endPoint,startPoint));}},// To get accurate point with reference to\n// entire path distance at time t,\n// following has to be done:\n// 1. Length of each sub path have to be known\n// 2. Locate and identify type of curve\n// 3. Get t for the curve\n// 4. Return curve.getPointAt(t')\ngetPoint:function(t){const d=t*this.getLength();const curveLengths=this.getCurveLengths();let i=0;// To think about boundaries points.\nwhile(i<curveLengths.length){if(curveLengths[i]>=d){const diff=curveLengths[i]-d;const curve=this.curves[i];const segmentLength=curve.getLength();const u=segmentLength===0?0:1-diff/segmentLength;return curve.getPointAt(u);}i++;}return null;// loop where sum != 0, sum > d , sum+1 <d\n},// We cannot use the default THREE.Curve getPoint() with getLength() because in\n// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n// getPoint() depends on getLength\ngetLength:function(){const lens=this.getCurveLengths();return lens[lens.length-1];},// cacheLengths must be recalculated.\nupdateArcLengths:function(){this.needsUpdate=true;this.cacheLengths=null;this.getCurveLengths();},// Compute lengths and cache them\n// We cannot overwrite getLengths() because UtoT mapping uses it.\ngetCurveLengths:function(){// We use cache values if curves and cache array are same length\nif(this.cacheLengths&&this.cacheLengths.length===this.curves.length){return this.cacheLengths;}// Get length of sub-curve\n// Push sums into cached array\nconst lengths=[];let sums=0;for(let i=0,l=this.curves.length;i<l;i++){sums+=this.curves[i].getLength();lengths.push(sums);}this.cacheLengths=lengths;return lengths;},getSpacedPoints:function(divisions=40){const points=[];for(let i=0;i<=divisions;i++){points.push(this.getPoint(i/divisions));}if(this.autoClose){points.push(points[0]);}return points;},getPoints:function(divisions=12){const points=[];let last;for(let i=0,curves=this.curves;i<curves.length;i++){const curve=curves[i];const resolution=curve&&curve.isEllipseCurve?divisions*2:curve&&(curve.isLineCurve||curve.isLineCurve3)?1:curve&&curve.isSplineCurve?divisions*curve.points.length:divisions;const pts=curve.getPoints(resolution);for(let j=0;j<pts.length;j++){const point=pts[j];if(last&&last.equals(point))continue;// ensures no consecutive points are duplicates\npoints.push(point);last=point;}}if(this.autoClose&&points.length>1&&!points[points.length-1].equals(points[0])){points.push(points[0]);}return points;},copy:function(source){Curve.prototype.copy.call(this,source);this.curves=[];for(let i=0,l=source.curves.length;i<l;i++){const curve=source.curves[i];this.curves.push(curve.clone());}this.autoClose=source.autoClose;return this;},toJSON:function(){const data=Curve.prototype.toJSON.call(this);data.autoClose=this.autoClose;data.curves=[];for(let i=0,l=this.curves.length;i<l;i++){const curve=this.curves[i];data.curves.push(curve.toJSON());}return data;},fromJSON:function(json){Curve.prototype.fromJSON.call(this,json);this.autoClose=json.autoClose;this.curves=[];for(let i=0,l=json.curves.length;i<l;i++){const curve=json.curves[i];this.curves.push(new Curves[curve.type]().fromJSON(curve));}return this;}});function Path(points){CurvePath.call(this);this.type='Path';this.currentPoint=new Vector2();if(points){this.setFromPoints(points);}}Path.prototype=Object.assign(Object.create(CurvePath.prototype),{constructor:Path,setFromPoints:function(points){this.moveTo(points[0].x,points[0].y);for(let i=1,l=points.length;i<l;i++){this.lineTo(points[i].x,points[i].y);}return this;},moveTo:function(x,y){this.currentPoint.set(x,y);// TODO consider referencing vectors instead of copying?\nreturn this;},lineTo:function(x,y){const curve=new LineCurve(this.currentPoint.clone(),new Vector2(x,y));this.curves.push(curve);this.currentPoint.set(x,y);return this;},quadraticCurveTo:function(aCPx,aCPy,aX,aY){const curve=new QuadraticBezierCurve(this.currentPoint.clone(),new Vector2(aCPx,aCPy),new Vector2(aX,aY));this.curves.push(curve);this.currentPoint.set(aX,aY);return this;},bezierCurveTo:function(aCP1x,aCP1y,aCP2x,aCP2y,aX,aY){const curve=new CubicBezierCurve(this.currentPoint.clone(),new Vector2(aCP1x,aCP1y),new Vector2(aCP2x,aCP2y),new Vector2(aX,aY));this.curves.push(curve);this.currentPoint.set(aX,aY);return this;},splineThru:function(pts/*Array of Vector*/){const npts=[this.currentPoint.clone()].concat(pts);const curve=new SplineCurve(npts);this.curves.push(curve);this.currentPoint.copy(pts[pts.length-1]);return this;},arc:function(aX,aY,aRadius,aStartAngle,aEndAngle,aClockwise){const x0=this.currentPoint.x;const y0=this.currentPoint.y;this.absarc(aX+x0,aY+y0,aRadius,aStartAngle,aEndAngle,aClockwise);return this;},absarc:function(aX,aY,aRadius,aStartAngle,aEndAngle,aClockwise){this.absellipse(aX,aY,aRadius,aRadius,aStartAngle,aEndAngle,aClockwise);return this;},ellipse:function(aX,aY,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise,aRotation){const x0=this.currentPoint.x;const y0=this.currentPoint.y;this.absellipse(aX+x0,aY+y0,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise,aRotation);return this;},absellipse:function(aX,aY,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise,aRotation){const curve=new EllipseCurve(aX,aY,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise,aRotation);if(this.curves.length>0){// if a previous curve is present, attempt to join\nconst firstPoint=curve.getPoint(0);if(!firstPoint.equals(this.currentPoint)){this.lineTo(firstPoint.x,firstPoint.y);}}this.curves.push(curve);const lastPoint=curve.getPoint(1);this.currentPoint.copy(lastPoint);return this;},copy:function(source){CurvePath.prototype.copy.call(this,source);this.currentPoint.copy(source.currentPoint);return this;},toJSON:function(){const data=CurvePath.prototype.toJSON.call(this);data.currentPoint=this.currentPoint.toArray();return data;},fromJSON:function(json){CurvePath.prototype.fromJSON.call(this,json);this.currentPoint.fromArray(json.currentPoint);return this;}});function Shape(points){Path.call(this,points);this.uuid=MathUtils.generateUUID();this.type='Shape';this.holes=[];}Shape.prototype=Object.assign(Object.create(Path.prototype),{constructor:Shape,getPointsHoles:function(divisions){const holesPts=[];for(let i=0,l=this.holes.length;i<l;i++){holesPts[i]=this.holes[i].getPoints(divisions);}return holesPts;},// get points of shape and holes (keypoints based on segments parameter)\nextractPoints:function(divisions){return{shape:this.getPoints(divisions),holes:this.getPointsHoles(divisions)};},copy:function(source){Path.prototype.copy.call(this,source);this.holes=[];for(let i=0,l=source.holes.length;i<l;i++){const hole=source.holes[i];this.holes.push(hole.clone());}return this;},toJSON:function(){const data=Path.prototype.toJSON.call(this);data.uuid=this.uuid;data.holes=[];for(let i=0,l=this.holes.length;i<l;i++){const hole=this.holes[i];data.holes.push(hole.toJSON());}return data;},fromJSON:function(json){Path.prototype.fromJSON.call(this,json);this.uuid=json.uuid;this.holes=[];for(let i=0,l=json.holes.length;i<l;i++){const hole=json.holes[i];this.holes.push(new Path().fromJSON(hole));}return this;}});function Light(color,intensity=1){Object3D.call(this);this.type='Light';this.color=new Color(color);this.intensity=intensity;}Light.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Light,isLight:true,copy:function(source){Object3D.prototype.copy.call(this,source);this.color.copy(source.color);this.intensity=source.intensity;return this;},toJSON:function(meta){const data=Object3D.prototype.toJSON.call(this,meta);data.object.color=this.color.getHex();data.object.intensity=this.intensity;if(this.groundColor!==undefined)data.object.groundColor=this.groundColor.getHex();if(this.distance!==undefined)data.object.distance=this.distance;if(this.angle!==undefined)data.object.angle=this.angle;if(this.decay!==undefined)data.object.decay=this.decay;if(this.penumbra!==undefined)data.object.penumbra=this.penumbra;if(this.shadow!==undefined)data.object.shadow=this.shadow.toJSON();return data;}});function HemisphereLight(skyColor,groundColor,intensity){Light.call(this,skyColor,intensity);this.type='HemisphereLight';this.position.copy(Object3D.DefaultUp);this.updateMatrix();this.groundColor=new Color(groundColor);}HemisphereLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:HemisphereLight,isHemisphereLight:true,copy:function(source){Light.prototype.copy.call(this,source);this.groundColor.copy(source.groundColor);return this;}});function LightShadow(camera){this.camera=camera;this.bias=0;this.normalBias=0;this.radius=1;this.mapSize=new Vector2(512,512);this.map=null;this.mapPass=null;this.matrix=new Matrix4();this.autoUpdate=true;this.needsUpdate=false;this._frustum=new Frustum();this._frameExtents=new Vector2(1,1);this._viewportCount=1;this._viewports=[new Vector4(0,0,1,1)];}Object.assign(LightShadow.prototype,{_projScreenMatrix:new Matrix4(),_lightPositionWorld:new Vector3(),_lookTarget:new Vector3(),getViewportCount:function(){return this._viewportCount;},getFrustum:function(){return this._frustum;},updateMatrices:function(light){const shadowCamera=this.camera,shadowMatrix=this.matrix,projScreenMatrix=this._projScreenMatrix,lookTarget=this._lookTarget,lightPositionWorld=this._lightPositionWorld;lightPositionWorld.setFromMatrixPosition(light.matrixWorld);shadowCamera.position.copy(lightPositionWorld);lookTarget.setFromMatrixPosition(light.target.matrixWorld);shadowCamera.lookAt(lookTarget);shadowCamera.updateMatrixWorld();projScreenMatrix.multiplyMatrices(shadowCamera.projectionMatrix,shadowCamera.matrixWorldInverse);this._frustum.setFromProjectionMatrix(projScreenMatrix);shadowMatrix.set(0.5,0.0,0.0,0.5,0.0,0.5,0.0,0.5,0.0,0.0,0.5,0.5,0.0,0.0,0.0,1.0);shadowMatrix.multiply(shadowCamera.projectionMatrix);shadowMatrix.multiply(shadowCamera.matrixWorldInverse);},getViewport:function(viewportIndex){return this._viewports[viewportIndex];},getFrameExtents:function(){return this._frameExtents;},copy:function(source){this.camera=source.camera.clone();this.bias=source.bias;this.radius=source.radius;this.mapSize.copy(source.mapSize);return this;},clone:function(){return new this.constructor().copy(this);},toJSON:function(){const object={};if(this.bias!==0)object.bias=this.bias;if(this.normalBias!==0)object.normalBias=this.normalBias;if(this.radius!==1)object.radius=this.radius;if(this.mapSize.x!==512||this.mapSize.y!==512)object.mapSize=this.mapSize.toArray();object.camera=this.camera.toJSON(false).object;delete object.camera.matrix;return object;}});function SpotLightShadow(){LightShadow.call(this,new PerspectiveCamera(50,1,0.5,500));this.focus=1;}SpotLightShadow.prototype=Object.assign(Object.create(LightShadow.prototype),{constructor:SpotLightShadow,isSpotLightShadow:true,updateMatrices:function(light){const camera=this.camera;const fov=MathUtils.RAD2DEG*2*light.angle*this.focus;const aspect=this.mapSize.width/this.mapSize.height;const far=light.distance||camera.far;if(fov!==camera.fov||aspect!==camera.aspect||far!==camera.far){camera.fov=fov;camera.aspect=aspect;camera.far=far;camera.updateProjectionMatrix();}LightShadow.prototype.updateMatrices.call(this,light);}});function SpotLight(color,intensity,distance,angle,penumbra,decay){Light.call(this,color,intensity);this.type='SpotLight';this.position.copy(Object3D.DefaultUp);this.updateMatrix();this.target=new Object3D();Object.defineProperty(this,'power',{get:function(){// intensity = power per solid angle.\n// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\nreturn this.intensity*Math.PI;},set:function(power){// intensity = power per solid angle.\n// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\nthis.intensity=power/Math.PI;}});this.distance=distance!==undefined?distance:0;this.angle=angle!==undefined?angle:Math.PI/3;this.penumbra=penumbra!==undefined?penumbra:0;this.decay=decay!==undefined?decay:1;// for physically correct lights, should be 2.\nthis.shadow=new SpotLightShadow();}SpotLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:SpotLight,isSpotLight:true,copy:function(source){Light.prototype.copy.call(this,source);this.distance=source.distance;this.angle=source.angle;this.penumbra=source.penumbra;this.decay=source.decay;this.target=source.target.clone();this.shadow=source.shadow.clone();return this;}});function PointLightShadow(){LightShadow.call(this,new PerspectiveCamera(90,1,0.5,500));this._frameExtents=new Vector2(4,2);this._viewportCount=6;this._viewports=[// These viewports map a cube-map onto a 2D texture with the\n// following orientation:\n//\n//  xzXZ\n//   y Y\n//\n// X - Positive x direction\n// x - Negative x direction\n// Y - Positive y direction\n// y - Negative y direction\n// Z - Positive z direction\n// z - Negative z direction\n// positive X\nnew Vector4(2,1,1,1),// negative X\nnew Vector4(0,1,1,1),// positive Z\nnew Vector4(3,1,1,1),// negative Z\nnew Vector4(1,1,1,1),// positive Y\nnew Vector4(3,0,1,1),// negative Y\nnew Vector4(1,0,1,1)];this._cubeDirections=[new Vector3(1,0,0),new Vector3(-1,0,0),new Vector3(0,0,1),new Vector3(0,0,-1),new Vector3(0,1,0),new Vector3(0,-1,0)];this._cubeUps=[new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,0,1),new Vector3(0,0,-1)];}PointLightShadow.prototype=Object.assign(Object.create(LightShadow.prototype),{constructor:PointLightShadow,isPointLightShadow:true,updateMatrices:function(light,viewportIndex=0){const camera=this.camera,shadowMatrix=this.matrix,lightPositionWorld=this._lightPositionWorld,lookTarget=this._lookTarget,projScreenMatrix=this._projScreenMatrix;lightPositionWorld.setFromMatrixPosition(light.matrixWorld);camera.position.copy(lightPositionWorld);lookTarget.copy(camera.position);lookTarget.add(this._cubeDirections[viewportIndex]);camera.up.copy(this._cubeUps[viewportIndex]);camera.lookAt(lookTarget);camera.updateMatrixWorld();shadowMatrix.makeTranslation(-lightPositionWorld.x,-lightPositionWorld.y,-lightPositionWorld.z);projScreenMatrix.multiplyMatrices(camera.projectionMatrix,camera.matrixWorldInverse);this._frustum.setFromProjectionMatrix(projScreenMatrix);}});function PointLight(color,intensity,distance,decay){Light.call(this,color,intensity);this.type='PointLight';Object.defineProperty(this,'power',{get:function(){// intensity = power per solid angle.\n// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\nreturn this.intensity*4*Math.PI;},set:function(power){// intensity = power per solid angle.\n// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\nthis.intensity=power/(4*Math.PI);}});this.distance=distance!==undefined?distance:0;this.decay=decay!==undefined?decay:1;// for physically correct lights, should be 2.\nthis.shadow=new PointLightShadow();}PointLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:PointLight,isPointLight:true,copy:function(source){Light.prototype.copy.call(this,source);this.distance=source.distance;this.decay=source.decay;this.shadow=source.shadow.clone();return this;}});function OrthographicCamera(left=-1,right=1,top=1,bottom=-1,near=0.1,far=2000){Camera.call(this);this.type='OrthographicCamera';this.zoom=1;this.view=null;this.left=left;this.right=right;this.top=top;this.bottom=bottom;this.near=near;this.far=far;this.updateProjectionMatrix();}OrthographicCamera.prototype=Object.assign(Object.create(Camera.prototype),{constructor:OrthographicCamera,isOrthographicCamera:true,copy:function(source,recursive){Camera.prototype.copy.call(this,source,recursive);this.left=source.left;this.right=source.right;this.top=source.top;this.bottom=source.bottom;this.near=source.near;this.far=source.far;this.zoom=source.zoom;this.view=source.view===null?null:Object.assign({},source.view);return this;},setViewOffset:function(fullWidth,fullHeight,x,y,width,height){if(this.view===null){this.view={enabled:true,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1};}this.view.enabled=true;this.view.fullWidth=fullWidth;this.view.fullHeight=fullHeight;this.view.offsetX=x;this.view.offsetY=y;this.view.width=width;this.view.height=height;this.updateProjectionMatrix();},clearViewOffset:function(){if(this.view!==null){this.view.enabled=false;}this.updateProjectionMatrix();},updateProjectionMatrix:function(){const dx=(this.right-this.left)/(2*this.zoom);const dy=(this.top-this.bottom)/(2*this.zoom);const cx=(this.right+this.left)/2;const cy=(this.top+this.bottom)/2;let left=cx-dx;let right=cx+dx;let top=cy+dy;let bottom=cy-dy;if(this.view!==null&&this.view.enabled){const scaleW=(this.right-this.left)/this.view.fullWidth/this.zoom;const scaleH=(this.top-this.bottom)/this.view.fullHeight/this.zoom;left+=scaleW*this.view.offsetX;right=left+scaleW*this.view.width;top-=scaleH*this.view.offsetY;bottom=top-scaleH*this.view.height;}this.projectionMatrix.makeOrthographic(left,right,top,bottom,this.near,this.far);this.projectionMatrixInverse.copy(this.projectionMatrix).invert();},toJSON:function(meta){const data=Object3D.prototype.toJSON.call(this,meta);data.object.zoom=this.zoom;data.object.left=this.left;data.object.right=this.right;data.object.top=this.top;data.object.bottom=this.bottom;data.object.near=this.near;data.object.far=this.far;if(this.view!==null)data.object.view=Object.assign({},this.view);return data;}});function DirectionalLightShadow(){LightShadow.call(this,new OrthographicCamera(-5,5,5,-5,0.5,500));}DirectionalLightShadow.prototype=Object.assign(Object.create(LightShadow.prototype),{constructor:DirectionalLightShadow,isDirectionalLightShadow:true,updateMatrices:function(light){LightShadow.prototype.updateMatrices.call(this,light);}});function DirectionalLight(color,intensity){Light.call(this,color,intensity);this.type='DirectionalLight';this.position.copy(Object3D.DefaultUp);this.updateMatrix();this.target=new Object3D();this.shadow=new DirectionalLightShadow();}DirectionalLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:DirectionalLight,isDirectionalLight:true,copy:function(source){Light.prototype.copy.call(this,source);this.target=source.target.clone();this.shadow=source.shadow.clone();return this;}});function AmbientLight(color,intensity){Light.call(this,color,intensity);this.type='AmbientLight';}AmbientLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:AmbientLight,isAmbientLight:true});function RectAreaLight(color,intensity,width,height){Light.call(this,color,intensity);this.type='RectAreaLight';this.width=width!==undefined?width:10;this.height=height!==undefined?height:10;}RectAreaLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:RectAreaLight,isRectAreaLight:true,copy:function(source){Light.prototype.copy.call(this,source);this.width=source.width;this.height=source.height;return this;},toJSON:function(meta){const data=Light.prototype.toJSON.call(this,meta);data.object.width=this.width;data.object.height=this.height;return data;}});/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */ // 3-band SH defined by 9 coefficients\nclass SphericalHarmonics3{constructor(){Object.defineProperty(this,'isSphericalHarmonics3',{value:true});this.coefficients=[];for(let i=0;i<9;i++){this.coefficients.push(new Vector3());}}set(coefficients){for(let i=0;i<9;i++){this.coefficients[i].copy(coefficients[i]);}return this;}zero(){for(let i=0;i<9;i++){this.coefficients[i].set(0,0,0);}return this;}// get the radiance in the direction of the normal\n// target is a Vector3\ngetAt(normal,target){// normal is assumed to be unit length\nconst x=normal.x,y=normal.y,z=normal.z;const coeff=this.coefficients;// band 0\ntarget.copy(coeff[0]).multiplyScalar(0.282095);// band 1\ntarget.addScaledVector(coeff[1],0.488603*y);target.addScaledVector(coeff[2],0.488603*z);target.addScaledVector(coeff[3],0.488603*x);// band 2\ntarget.addScaledVector(coeff[4],1.092548*(x*y));target.addScaledVector(coeff[5],1.092548*(y*z));target.addScaledVector(coeff[6],0.315392*(3.0*z*z-1.0));target.addScaledVector(coeff[7],1.092548*(x*z));target.addScaledVector(coeff[8],0.546274*(x*x-y*y));return target;}// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n// target is a Vector3\n// https://graphics.stanford.edu/papers/envmap/envmap.pdf\ngetIrradianceAt(normal,target){// normal is assumed to be unit length\nconst x=normal.x,y=normal.y,z=normal.z;const coeff=this.coefficients;// band 0\ntarget.copy(coeff[0]).multiplyScalar(0.886227);// π * 0.282095\n// band 1\ntarget.addScaledVector(coeff[1],2.0*0.511664*y);// ( 2 * π / 3 ) * 0.488603\ntarget.addScaledVector(coeff[2],2.0*0.511664*z);target.addScaledVector(coeff[3],2.0*0.511664*x);// band 2\ntarget.addScaledVector(coeff[4],2.0*0.429043*x*y);// ( π / 4 ) * 1.092548\ntarget.addScaledVector(coeff[5],2.0*0.429043*y*z);target.addScaledVector(coeff[6],0.743125*z*z-0.247708);// ( π / 4 ) * 0.315392 * 3\ntarget.addScaledVector(coeff[7],2.0*0.429043*x*z);target.addScaledVector(coeff[8],0.429043*(x*x-y*y));// ( π / 4 ) * 0.546274\nreturn target;}add(sh){for(let i=0;i<9;i++){this.coefficients[i].add(sh.coefficients[i]);}return this;}addScaledSH(sh,s){for(let i=0;i<9;i++){this.coefficients[i].addScaledVector(sh.coefficients[i],s);}return this;}scale(s){for(let i=0;i<9;i++){this.coefficients[i].multiplyScalar(s);}return this;}lerp(sh,alpha){for(let i=0;i<9;i++){this.coefficients[i].lerp(sh.coefficients[i],alpha);}return this;}equals(sh){for(let i=0;i<9;i++){if(!this.coefficients[i].equals(sh.coefficients[i])){return false;}}return true;}copy(sh){return this.set(sh.coefficients);}clone(){return new this.constructor().copy(this);}fromArray(array,offset=0){const coefficients=this.coefficients;for(let i=0;i<9;i++){coefficients[i].fromArray(array,offset+i*3);}return this;}toArray(array=[],offset=0){const coefficients=this.coefficients;for(let i=0;i<9;i++){coefficients[i].toArray(array,offset+i*3);}return array;}// evaluate the basis functions\n// shBasis is an Array[ 9 ]\nstatic getBasisAt(normal,shBasis){// normal is assumed to be unit length\nconst x=normal.x,y=normal.y,z=normal.z;// band 0\nshBasis[0]=0.282095;// band 1\nshBasis[1]=0.488603*y;shBasis[2]=0.488603*z;shBasis[3]=0.488603*x;// band 2\nshBasis[4]=1.092548*x*y;shBasis[5]=1.092548*y*z;shBasis[6]=0.315392*(3*z*z-1);shBasis[7]=1.092548*x*z;shBasis[8]=0.546274*(x*x-y*y);}}function LightProbe(sh,intensity){Light.call(this,undefined,intensity);this.type='LightProbe';this.sh=sh!==undefined?sh:new SphericalHarmonics3();}LightProbe.prototype=Object.assign(Object.create(Light.prototype),{constructor:LightProbe,isLightProbe:true,copy:function(source){Light.prototype.copy.call(this,source);this.sh.copy(source.sh);return this;},fromJSON:function(json){this.intensity=json.intensity;// TODO: Move this bit to Light.fromJSON();\nthis.sh.fromArray(json.sh);return this;},toJSON:function(meta){const data=Light.prototype.toJSON.call(this,meta);data.object.sh=this.sh.toArray();return data;}});function MaterialLoader(manager){Loader.call(this,manager);this.textures={};}MaterialLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:MaterialLoader,load:function(url,onLoad,onProgress,onError){const scope=this;const loader=new FileLoader(scope.manager);loader.setPath(scope.path);loader.setRequestHeader(scope.requestHeader);loader.setWithCredentials(scope.withCredentials);loader.load(url,function(text){try{onLoad(scope.parse(JSON.parse(text)));}catch(e){if(onError){onError(e);}else{console.error(e);}scope.manager.itemError(url);}},onProgress,onError);},parse:function(json){const textures=this.textures;function getTexture(name){if(textures[name]===undefined){console.warn('THREE.MaterialLoader: Undefined texture',name);}return textures[name];}const material=new Materials[json.type]();if(json.uuid!==undefined)material.uuid=json.uuid;if(json.name!==undefined)material.name=json.name;if(json.color!==undefined&&material.color!==undefined)material.color.setHex(json.color);if(json.roughness!==undefined)material.roughness=json.roughness;if(json.metalness!==undefined)material.metalness=json.metalness;if(json.sheen!==undefined)material.sheen=new Color().setHex(json.sheen);if(json.emissive!==undefined&&material.emissive!==undefined)material.emissive.setHex(json.emissive);if(json.specular!==undefined&&material.specular!==undefined)material.specular.setHex(json.specular);if(json.shininess!==undefined)material.shininess=json.shininess;if(json.clearcoat!==undefined)material.clearcoat=json.clearcoat;if(json.clearcoatRoughness!==undefined)material.clearcoatRoughness=json.clearcoatRoughness;if(json.fog!==undefined)material.fog=json.fog;if(json.flatShading!==undefined)material.flatShading=json.flatShading;if(json.blending!==undefined)material.blending=json.blending;if(json.combine!==undefined)material.combine=json.combine;if(json.side!==undefined)material.side=json.side;if(json.opacity!==undefined)material.opacity=json.opacity;if(json.transparent!==undefined)material.transparent=json.transparent;if(json.alphaTest!==undefined)material.alphaTest=json.alphaTest;if(json.depthTest!==undefined)material.depthTest=json.depthTest;if(json.depthWrite!==undefined)material.depthWrite=json.depthWrite;if(json.colorWrite!==undefined)material.colorWrite=json.colorWrite;if(json.stencilWrite!==undefined)material.stencilWrite=json.stencilWrite;if(json.stencilWriteMask!==undefined)material.stencilWriteMask=json.stencilWriteMask;if(json.stencilFunc!==undefined)material.stencilFunc=json.stencilFunc;if(json.stencilRef!==undefined)material.stencilRef=json.stencilRef;if(json.stencilFuncMask!==undefined)material.stencilFuncMask=json.stencilFuncMask;if(json.stencilFail!==undefined)material.stencilFail=json.stencilFail;if(json.stencilZFail!==undefined)material.stencilZFail=json.stencilZFail;if(json.stencilZPass!==undefined)material.stencilZPass=json.stencilZPass;if(json.wireframe!==undefined)material.wireframe=json.wireframe;if(json.wireframeLinewidth!==undefined)material.wireframeLinewidth=json.wireframeLinewidth;if(json.wireframeLinecap!==undefined)material.wireframeLinecap=json.wireframeLinecap;if(json.wireframeLinejoin!==undefined)material.wireframeLinejoin=json.wireframeLinejoin;if(json.rotation!==undefined)material.rotation=json.rotation;if(json.linewidth!==1)material.linewidth=json.linewidth;if(json.dashSize!==undefined)material.dashSize=json.dashSize;if(json.gapSize!==undefined)material.gapSize=json.gapSize;if(json.scale!==undefined)material.scale=json.scale;if(json.polygonOffset!==undefined)material.polygonOffset=json.polygonOffset;if(json.polygonOffsetFactor!==undefined)material.polygonOffsetFactor=json.polygonOffsetFactor;if(json.polygonOffsetUnits!==undefined)material.polygonOffsetUnits=json.polygonOffsetUnits;if(json.skinning!==undefined)material.skinning=json.skinning;if(json.morphTargets!==undefined)material.morphTargets=json.morphTargets;if(json.morphNormals!==undefined)material.morphNormals=json.morphNormals;if(json.dithering!==undefined)material.dithering=json.dithering;if(json.vertexTangents!==undefined)material.vertexTangents=json.vertexTangents;if(json.visible!==undefined)material.visible=json.visible;if(json.toneMapped!==undefined)material.toneMapped=json.toneMapped;if(json.userData!==undefined)material.userData=json.userData;if(json.vertexColors!==undefined){if(typeof json.vertexColors==='number'){material.vertexColors=json.vertexColors>0?true:false;}else{material.vertexColors=json.vertexColors;}}// Shader Material\nif(json.uniforms!==undefined){for(const name in json.uniforms){const uniform=json.uniforms[name];material.uniforms[name]={};switch(uniform.type){case't':material.uniforms[name].value=getTexture(uniform.value);break;case'c':material.uniforms[name].value=new Color().setHex(uniform.value);break;case'v2':material.uniforms[name].value=new Vector2().fromArray(uniform.value);break;case'v3':material.uniforms[name].value=new Vector3().fromArray(uniform.value);break;case'v4':material.uniforms[name].value=new Vector4().fromArray(uniform.value);break;case'm3':material.uniforms[name].value=new Matrix3().fromArray(uniform.value);break;case'm4':material.uniforms[name].value=new Matrix4().fromArray(uniform.value);break;default:material.uniforms[name].value=uniform.value;}}}if(json.defines!==undefined)material.defines=json.defines;if(json.vertexShader!==undefined)material.vertexShader=json.vertexShader;if(json.fragmentShader!==undefined)material.fragmentShader=json.fragmentShader;if(json.extensions!==undefined){for(const key in json.extensions){material.extensions[key]=json.extensions[key];}}// Deprecated\nif(json.shading!==undefined)material.flatShading=json.shading===1;// THREE.FlatShading\n// for PointsMaterial\nif(json.size!==undefined)material.size=json.size;if(json.sizeAttenuation!==undefined)material.sizeAttenuation=json.sizeAttenuation;// maps\nif(json.map!==undefined)material.map=getTexture(json.map);if(json.matcap!==undefined)material.matcap=getTexture(json.matcap);if(json.alphaMap!==undefined)material.alphaMap=getTexture(json.alphaMap);if(json.bumpMap!==undefined)material.bumpMap=getTexture(json.bumpMap);if(json.bumpScale!==undefined)material.bumpScale=json.bumpScale;if(json.normalMap!==undefined)material.normalMap=getTexture(json.normalMap);if(json.normalMapType!==undefined)material.normalMapType=json.normalMapType;if(json.normalScale!==undefined){let normalScale=json.normalScale;if(Array.isArray(normalScale)===false){// Blender exporter used to export a scalar. See #7459\nnormalScale=[normalScale,normalScale];}material.normalScale=new Vector2().fromArray(normalScale);}if(json.displacementMap!==undefined)material.displacementMap=getTexture(json.displacementMap);if(json.displacementScale!==undefined)material.displacementScale=json.displacementScale;if(json.displacementBias!==undefined)material.displacementBias=json.displacementBias;if(json.roughnessMap!==undefined)material.roughnessMap=getTexture(json.roughnessMap);if(json.metalnessMap!==undefined)material.metalnessMap=getTexture(json.metalnessMap);if(json.emissiveMap!==undefined)material.emissiveMap=getTexture(json.emissiveMap);if(json.emissiveIntensity!==undefined)material.emissiveIntensity=json.emissiveIntensity;if(json.specularMap!==undefined)material.specularMap=getTexture(json.specularMap);if(json.envMap!==undefined)material.envMap=getTexture(json.envMap);if(json.envMapIntensity!==undefined)material.envMapIntensity=json.envMapIntensity;if(json.reflectivity!==undefined)material.reflectivity=json.reflectivity;if(json.refractionRatio!==undefined)material.refractionRatio=json.refractionRatio;if(json.lightMap!==undefined)material.lightMap=getTexture(json.lightMap);if(json.lightMapIntensity!==undefined)material.lightMapIntensity=json.lightMapIntensity;if(json.aoMap!==undefined)material.aoMap=getTexture(json.aoMap);if(json.aoMapIntensity!==undefined)material.aoMapIntensity=json.aoMapIntensity;if(json.gradientMap!==undefined)material.gradientMap=getTexture(json.gradientMap);if(json.clearcoatMap!==undefined)material.clearcoatMap=getTexture(json.clearcoatMap);if(json.clearcoatRoughnessMap!==undefined)material.clearcoatRoughnessMap=getTexture(json.clearcoatRoughnessMap);if(json.clearcoatNormalMap!==undefined)material.clearcoatNormalMap=getTexture(json.clearcoatNormalMap);if(json.clearcoatNormalScale!==undefined)material.clearcoatNormalScale=new Vector2().fromArray(json.clearcoatNormalScale);if(json.transmission!==undefined)material.transmission=json.transmission;if(json.transmissionMap!==undefined)material.transmissionMap=getTexture(json.transmissionMap);return material;},setTextures:function(value){this.textures=value;return this;}});const LoaderUtils={decodeText:function(array){if(typeof TextDecoder!=='undefined'){return new TextDecoder().decode(array);}// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n// throws a \"maximum call stack size exceeded\" error for large arrays.\nlet s='';for(let i=0,il=array.length;i<il;i++){// Implicitly assumes little-endian.\ns+=String.fromCharCode(array[i]);}try{// merges multi-byte utf-8 characters.\nreturn decodeURIComponent(escape(s));}catch(e){// see #16358\nreturn s;}},extractUrlBase:function(url){const index=url.lastIndexOf('/');if(index===-1)return'./';return url.substr(0,index+1);}};function InstancedBufferGeometry(){BufferGeometry.call(this);this.type='InstancedBufferGeometry';this.instanceCount=Infinity;}InstancedBufferGeometry.prototype=Object.assign(Object.create(BufferGeometry.prototype),{constructor:InstancedBufferGeometry,isInstancedBufferGeometry:true,copy:function(source){BufferGeometry.prototype.copy.call(this,source);this.instanceCount=source.instanceCount;return this;},clone:function(){return new this.constructor().copy(this);},toJSON:function(){const data=BufferGeometry.prototype.toJSON.call(this);data.instanceCount=this.instanceCount;data.isInstancedBufferGeometry=true;return data;}});function InstancedBufferAttribute(array,itemSize,normalized,meshPerAttribute){if(typeof normalized==='number'){meshPerAttribute=normalized;normalized=false;console.error('THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.');}BufferAttribute.call(this,array,itemSize,normalized);this.meshPerAttribute=meshPerAttribute||1;}InstancedBufferAttribute.prototype=Object.assign(Object.create(BufferAttribute.prototype),{constructor:InstancedBufferAttribute,isInstancedBufferAttribute:true,copy:function(source){BufferAttribute.prototype.copy.call(this,source);this.meshPerAttribute=source.meshPerAttribute;return this;},toJSON:function(){const data=BufferAttribute.prototype.toJSON.call(this);data.meshPerAttribute=this.meshPerAttribute;data.isInstancedBufferAttribute=true;return data;}});function BufferGeometryLoader(manager){Loader.call(this,manager);}BufferGeometryLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:BufferGeometryLoader,load:function(url,onLoad,onProgress,onError){const scope=this;const loader=new FileLoader(scope.manager);loader.setPath(scope.path);loader.setRequestHeader(scope.requestHeader);loader.setWithCredentials(scope.withCredentials);loader.load(url,function(text){try{onLoad(scope.parse(JSON.parse(text)));}catch(e){if(onError){onError(e);}else{console.error(e);}scope.manager.itemError(url);}},onProgress,onError);},parse:function(json){const interleavedBufferMap={};const arrayBufferMap={};function getInterleavedBuffer(json,uuid){if(interleavedBufferMap[uuid]!==undefined)return interleavedBufferMap[uuid];const interleavedBuffers=json.interleavedBuffers;const interleavedBuffer=interleavedBuffers[uuid];const buffer=getArrayBuffer(json,interleavedBuffer.buffer);const array=getTypedArray(interleavedBuffer.type,buffer);const ib=new InterleavedBuffer(array,interleavedBuffer.stride);ib.uuid=interleavedBuffer.uuid;interleavedBufferMap[uuid]=ib;return ib;}function getArrayBuffer(json,uuid){if(arrayBufferMap[uuid]!==undefined)return arrayBufferMap[uuid];const arrayBuffers=json.arrayBuffers;const arrayBuffer=arrayBuffers[uuid];const ab=new Uint32Array(arrayBuffer).buffer;arrayBufferMap[uuid]=ab;return ab;}const geometry=json.isInstancedBufferGeometry?new InstancedBufferGeometry():new BufferGeometry();const index=json.data.index;if(index!==undefined){const typedArray=getTypedArray(index.type,index.array);geometry.setIndex(new BufferAttribute(typedArray,1));}const attributes=json.data.attributes;for(const key in attributes){const attribute=attributes[key];let bufferAttribute;if(attribute.isInterleavedBufferAttribute){const interleavedBuffer=getInterleavedBuffer(json.data,attribute.data);bufferAttribute=new InterleavedBufferAttribute(interleavedBuffer,attribute.itemSize,attribute.offset,attribute.normalized);}else{const typedArray=getTypedArray(attribute.type,attribute.array);const bufferAttributeConstr=attribute.isInstancedBufferAttribute?InstancedBufferAttribute:BufferAttribute;bufferAttribute=new bufferAttributeConstr(typedArray,attribute.itemSize,attribute.normalized);}if(attribute.name!==undefined)bufferAttribute.name=attribute.name;geometry.setAttribute(key,bufferAttribute);}const morphAttributes=json.data.morphAttributes;if(morphAttributes){for(const key in morphAttributes){const attributeArray=morphAttributes[key];const array=[];for(let i=0,il=attributeArray.length;i<il;i++){const attribute=attributeArray[i];let bufferAttribute;if(attribute.isInterleavedBufferAttribute){const interleavedBuffer=getInterleavedBuffer(json.data,attribute.data);bufferAttribute=new InterleavedBufferAttribute(interleavedBuffer,attribute.itemSize,attribute.offset,attribute.normalized);}else{const typedArray=getTypedArray(attribute.type,attribute.array);bufferAttribute=new BufferAttribute(typedArray,attribute.itemSize,attribute.normalized);}if(attribute.name!==undefined)bufferAttribute.name=attribute.name;array.push(bufferAttribute);}geometry.morphAttributes[key]=array;}}const morphTargetsRelative=json.data.morphTargetsRelative;if(morphTargetsRelative){geometry.morphTargetsRelative=true;}const groups=json.data.groups||json.data.drawcalls||json.data.offsets;if(groups!==undefined){for(let i=0,n=groups.length;i!==n;++i){const group=groups[i];geometry.addGroup(group.start,group.count,group.materialIndex);}}const boundingSphere=json.data.boundingSphere;if(boundingSphere!==undefined){const center=new Vector3();if(boundingSphere.center!==undefined){center.fromArray(boundingSphere.center);}geometry.boundingSphere=new Sphere(center,boundingSphere.radius);}if(json.name)geometry.name=json.name;if(json.userData)geometry.userData=json.userData;return geometry;}});class ObjectLoader extends Loader{constructor(manager){super(manager);}load(url,onLoad,onProgress,onError){const scope=this;const path=this.path===''?LoaderUtils.extractUrlBase(url):this.path;this.resourcePath=this.resourcePath||path;const loader=new FileLoader(this.manager);loader.setPath(this.path);loader.setRequestHeader(this.requestHeader);loader.setWithCredentials(this.withCredentials);loader.load(url,function(text){let json=null;try{json=JSON.parse(text);}catch(error){if(onError!==undefined)onError(error);console.error('THREE:ObjectLoader: Can\\'t parse '+url+'.',error.message);return;}const metadata=json.metadata;if(metadata===undefined||metadata.type===undefined||metadata.type.toLowerCase()==='geometry'){console.error('THREE.ObjectLoader: Can\\'t load '+url);return;}scope.parse(json,onLoad);},onProgress,onError);}parse(json,onLoad){const animations=this.parseAnimations(json.animations);const shapes=this.parseShapes(json.shapes);const geometries=this.parseGeometries(json.geometries,shapes);const images=this.parseImages(json.images,function(){if(onLoad!==undefined)onLoad(object);});const textures=this.parseTextures(json.textures,images);const materials=this.parseMaterials(json.materials,textures);const object=this.parseObject(json.object,geometries,materials,animations);const skeletons=this.parseSkeletons(json.skeletons,object);this.bindSkeletons(object,skeletons);//\nif(onLoad!==undefined){let hasImages=false;for(const uuid in images){if(images[uuid]instanceof HTMLImageElement){hasImages=true;break;}}if(hasImages===false)onLoad(object);}return object;}parseShapes(json){const shapes={};if(json!==undefined){for(let i=0,l=json.length;i<l;i++){const shape=new Shape().fromJSON(json[i]);shapes[shape.uuid]=shape;}}return shapes;}parseSkeletons(json,object){const skeletons={};const bones={};// generate bone lookup table\nobject.traverse(function(child){if(child.isBone)bones[child.uuid]=child;});// create skeletons\nif(json!==undefined){for(let i=0,l=json.length;i<l;i++){const skeleton=new Skeleton().fromJSON(json[i],bones);skeletons[skeleton.uuid]=skeleton;}}return skeletons;}parseGeometries(json,shapes){const geometries={};let geometryShapes;if(json!==undefined){const bufferGeometryLoader=new BufferGeometryLoader();for(let i=0,l=json.length;i<l;i++){let geometry;const data=json[i];switch(data.type){case'PlaneGeometry':case'PlaneBufferGeometry':geometry=new Geometries[data.type](data.width,data.height,data.widthSegments,data.heightSegments);break;case'BoxGeometry':case'BoxBufferGeometry':geometry=new Geometries[data.type](data.width,data.height,data.depth,data.widthSegments,data.heightSegments,data.depthSegments);break;case'CircleGeometry':case'CircleBufferGeometry':geometry=new Geometries[data.type](data.radius,data.segments,data.thetaStart,data.thetaLength);break;case'CylinderGeometry':case'CylinderBufferGeometry':geometry=new Geometries[data.type](data.radiusTop,data.radiusBottom,data.height,data.radialSegments,data.heightSegments,data.openEnded,data.thetaStart,data.thetaLength);break;case'ConeGeometry':case'ConeBufferGeometry':geometry=new Geometries[data.type](data.radius,data.height,data.radialSegments,data.heightSegments,data.openEnded,data.thetaStart,data.thetaLength);break;case'SphereGeometry':case'SphereBufferGeometry':geometry=new Geometries[data.type](data.radius,data.widthSegments,data.heightSegments,data.phiStart,data.phiLength,data.thetaStart,data.thetaLength);break;case'DodecahedronGeometry':case'DodecahedronBufferGeometry':case'IcosahedronGeometry':case'IcosahedronBufferGeometry':case'OctahedronGeometry':case'OctahedronBufferGeometry':case'TetrahedronGeometry':case'TetrahedronBufferGeometry':geometry=new Geometries[data.type](data.radius,data.detail);break;case'RingGeometry':case'RingBufferGeometry':geometry=new Geometries[data.type](data.innerRadius,data.outerRadius,data.thetaSegments,data.phiSegments,data.thetaStart,data.thetaLength);break;case'TorusGeometry':case'TorusBufferGeometry':geometry=new Geometries[data.type](data.radius,data.tube,data.radialSegments,data.tubularSegments,data.arc);break;case'TorusKnotGeometry':case'TorusKnotBufferGeometry':geometry=new Geometries[data.type](data.radius,data.tube,data.tubularSegments,data.radialSegments,data.p,data.q);break;case'TubeGeometry':case'TubeBufferGeometry':// This only works for built-in curves (e.g. CatmullRomCurve3).\n// User defined curves or instances of CurvePath will not be deserialized.\ngeometry=new Geometries[data.type](new Curves[data.path.type]().fromJSON(data.path),data.tubularSegments,data.radius,data.radialSegments,data.closed);break;case'LatheGeometry':case'LatheBufferGeometry':geometry=new Geometries[data.type](data.points,data.segments,data.phiStart,data.phiLength);break;case'PolyhedronGeometry':case'PolyhedronBufferGeometry':geometry=new Geometries[data.type](data.vertices,data.indices,data.radius,data.details);break;case'ShapeGeometry':case'ShapeBufferGeometry':geometryShapes=[];for(let j=0,jl=data.shapes.length;j<jl;j++){const shape=shapes[data.shapes[j]];geometryShapes.push(shape);}geometry=new Geometries[data.type](geometryShapes,data.curveSegments);break;case'ExtrudeGeometry':case'ExtrudeBufferGeometry':geometryShapes=[];for(let j=0,jl=data.shapes.length;j<jl;j++){const shape=shapes[data.shapes[j]];geometryShapes.push(shape);}const extrudePath=data.options.extrudePath;if(extrudePath!==undefined){data.options.extrudePath=new Curves[extrudePath.type]().fromJSON(extrudePath);}geometry=new Geometries[data.type](geometryShapes,data.options);break;case'BufferGeometry':case'InstancedBufferGeometry':geometry=bufferGeometryLoader.parse(data);break;case'Geometry':console.error('THREE.ObjectLoader: Loading \"Geometry\" is not supported anymore.');break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type \"'+data.type+'\"');continue;}geometry.uuid=data.uuid;if(data.name!==undefined)geometry.name=data.name;if(geometry.isBufferGeometry===true&&data.userData!==undefined)geometry.userData=data.userData;geometries[data.uuid]=geometry;}}return geometries;}parseMaterials(json,textures){const cache={};// MultiMaterial\nconst materials={};if(json!==undefined){const loader=new MaterialLoader();loader.setTextures(textures);for(let i=0,l=json.length;i<l;i++){const data=json[i];if(data.type==='MultiMaterial'){// Deprecated\nconst array=[];for(let j=0;j<data.materials.length;j++){const material=data.materials[j];if(cache[material.uuid]===undefined){cache[material.uuid]=loader.parse(material);}array.push(cache[material.uuid]);}materials[data.uuid]=array;}else{if(cache[data.uuid]===undefined){cache[data.uuid]=loader.parse(data);}materials[data.uuid]=cache[data.uuid];}}}return materials;}parseAnimations(json){const animations={};if(json!==undefined){for(let i=0;i<json.length;i++){const data=json[i];const clip=AnimationClip.parse(data);animations[clip.uuid]=clip;}}return animations;}parseImages(json,onLoad){const scope=this;const images={};let loader;function loadImage(url){scope.manager.itemStart(url);return loader.load(url,function(){scope.manager.itemEnd(url);},undefined,function(){scope.manager.itemError(url);scope.manager.itemEnd(url);});}function deserializeImage(image){if(typeof image==='string'){const url=image;const path=/^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(url)?url:scope.resourcePath+url;return loadImage(path);}else{if(image.data){return{data:getTypedArray(image.type,image.data),width:image.width,height:image.height};}else{return null;}}}if(json!==undefined&&json.length>0){const manager=new LoadingManager(onLoad);loader=new ImageLoader(manager);loader.setCrossOrigin(this.crossOrigin);for(let i=0,il=json.length;i<il;i++){const image=json[i];const url=image.url;if(Array.isArray(url)){// load array of images e.g CubeTexture\nimages[image.uuid]=[];for(let j=0,jl=url.length;j<jl;j++){const currentUrl=url[j];const deserializedImage=deserializeImage(currentUrl);if(deserializedImage!==null){if(deserializedImage instanceof HTMLImageElement){images[image.uuid].push(deserializedImage);}else{// special case: handle array of data textures for cube textures\nimages[image.uuid].push(new DataTexture(deserializedImage.data,deserializedImage.width,deserializedImage.height));}}}}else{// load single image\nconst deserializedImage=deserializeImage(image.url);if(deserializedImage!==null){images[image.uuid]=deserializedImage;}}}}return images;}parseTextures(json,images){function parseConstant(value,type){if(typeof value==='number')return value;console.warn('THREE.ObjectLoader.parseTexture: Constant should be in numeric form.',value);return type[value];}const textures={};if(json!==undefined){for(let i=0,l=json.length;i<l;i++){const data=json[i];if(data.image===undefined){console.warn('THREE.ObjectLoader: No \"image\" specified for',data.uuid);}if(images[data.image]===undefined){console.warn('THREE.ObjectLoader: Undefined image',data.image);}let texture;const image=images[data.image];if(Array.isArray(image)){texture=new CubeTexture(image);if(image.length===6)texture.needsUpdate=true;}else{if(image&&image.data){texture=new DataTexture(image.data,image.width,image.height);}else{texture=new Texture(image);}if(image)texture.needsUpdate=true;// textures can have undefined image data\n}texture.uuid=data.uuid;if(data.name!==undefined)texture.name=data.name;if(data.mapping!==undefined)texture.mapping=parseConstant(data.mapping,TEXTURE_MAPPING);if(data.offset!==undefined)texture.offset.fromArray(data.offset);if(data.repeat!==undefined)texture.repeat.fromArray(data.repeat);if(data.center!==undefined)texture.center.fromArray(data.center);if(data.rotation!==undefined)texture.rotation=data.rotation;if(data.wrap!==undefined){texture.wrapS=parseConstant(data.wrap[0],TEXTURE_WRAPPING);texture.wrapT=parseConstant(data.wrap[1],TEXTURE_WRAPPING);}if(data.format!==undefined)texture.format=data.format;if(data.type!==undefined)texture.type=data.type;if(data.encoding!==undefined)texture.encoding=data.encoding;if(data.minFilter!==undefined)texture.minFilter=parseConstant(data.minFilter,TEXTURE_FILTER);if(data.magFilter!==undefined)texture.magFilter=parseConstant(data.magFilter,TEXTURE_FILTER);if(data.anisotropy!==undefined)texture.anisotropy=data.anisotropy;if(data.flipY!==undefined)texture.flipY=data.flipY;if(data.premultiplyAlpha!==undefined)texture.premultiplyAlpha=data.premultiplyAlpha;if(data.unpackAlignment!==undefined)texture.unpackAlignment=data.unpackAlignment;textures[data.uuid]=texture;}}return textures;}parseObject(data,geometries,materials,animations){let object;function getGeometry(name){if(geometries[name]===undefined){console.warn('THREE.ObjectLoader: Undefined geometry',name);}return geometries[name];}function getMaterial(name){if(name===undefined)return undefined;if(Array.isArray(name)){const array=[];for(let i=0,l=name.length;i<l;i++){const uuid=name[i];if(materials[uuid]===undefined){console.warn('THREE.ObjectLoader: Undefined material',uuid);}array.push(materials[uuid]);}return array;}if(materials[name]===undefined){console.warn('THREE.ObjectLoader: Undefined material',name);}return materials[name];}let geometry,material;switch(data.type){case'Scene':object=new Scene();if(data.background!==undefined){if(Number.isInteger(data.background)){object.background=new Color(data.background);}}if(data.fog!==undefined){if(data.fog.type==='Fog'){object.fog=new Fog(data.fog.color,data.fog.near,data.fog.far);}else if(data.fog.type==='FogExp2'){object.fog=new FogExp2(data.fog.color,data.fog.density);}}break;case'PerspectiveCamera':object=new PerspectiveCamera(data.fov,data.aspect,data.near,data.far);if(data.focus!==undefined)object.focus=data.focus;if(data.zoom!==undefined)object.zoom=data.zoom;if(data.filmGauge!==undefined)object.filmGauge=data.filmGauge;if(data.filmOffset!==undefined)object.filmOffset=data.filmOffset;if(data.view!==undefined)object.view=Object.assign({},data.view);break;case'OrthographicCamera':object=new OrthographicCamera(data.left,data.right,data.top,data.bottom,data.near,data.far);if(data.zoom!==undefined)object.zoom=data.zoom;if(data.view!==undefined)object.view=Object.assign({},data.view);break;case'AmbientLight':object=new AmbientLight(data.color,data.intensity);break;case'DirectionalLight':object=new DirectionalLight(data.color,data.intensity);break;case'PointLight':object=new PointLight(data.color,data.intensity,data.distance,data.decay);break;case'RectAreaLight':object=new RectAreaLight(data.color,data.intensity,data.width,data.height);break;case'SpotLight':object=new SpotLight(data.color,data.intensity,data.distance,data.angle,data.penumbra,data.decay);break;case'HemisphereLight':object=new HemisphereLight(data.color,data.groundColor,data.intensity);break;case'LightProbe':object=new LightProbe().fromJSON(data);break;case'SkinnedMesh':geometry=getGeometry(data.geometry);material=getMaterial(data.material);object=new SkinnedMesh(geometry,material);if(data.bindMode!==undefined)object.bindMode=data.bindMode;if(data.bindMatrix!==undefined)object.bindMatrix.fromArray(data.bindMatrix);if(data.skeleton!==undefined)object.skeleton=data.skeleton;break;case'Mesh':geometry=getGeometry(data.geometry);material=getMaterial(data.material);object=new Mesh(geometry,material);break;case'InstancedMesh':geometry=getGeometry(data.geometry);material=getMaterial(data.material);const count=data.count;const instanceMatrix=data.instanceMatrix;object=new InstancedMesh(geometry,material,count);object.instanceMatrix=new BufferAttribute(new Float32Array(instanceMatrix.array),16);break;case'LOD':object=new LOD();break;case'Line':object=new Line(getGeometry(data.geometry),getMaterial(data.material));break;case'LineLoop':object=new LineLoop(getGeometry(data.geometry),getMaterial(data.material));break;case'LineSegments':object=new LineSegments(getGeometry(data.geometry),getMaterial(data.material));break;case'PointCloud':case'Points':object=new Points(getGeometry(data.geometry),getMaterial(data.material));break;case'Sprite':object=new Sprite(getMaterial(data.material));break;case'Group':object=new Group();break;case'Bone':object=new Bone();break;default:object=new Object3D();}object.uuid=data.uuid;if(data.name!==undefined)object.name=data.name;if(data.matrix!==undefined){object.matrix.fromArray(data.matrix);if(data.matrixAutoUpdate!==undefined)object.matrixAutoUpdate=data.matrixAutoUpdate;if(object.matrixAutoUpdate)object.matrix.decompose(object.position,object.quaternion,object.scale);}else{if(data.position!==undefined)object.position.fromArray(data.position);if(data.rotation!==undefined)object.rotation.fromArray(data.rotation);if(data.quaternion!==undefined)object.quaternion.fromArray(data.quaternion);if(data.scale!==undefined)object.scale.fromArray(data.scale);}if(data.castShadow!==undefined)object.castShadow=data.castShadow;if(data.receiveShadow!==undefined)object.receiveShadow=data.receiveShadow;if(data.shadow){if(data.shadow.bias!==undefined)object.shadow.bias=data.shadow.bias;if(data.shadow.normalBias!==undefined)object.shadow.normalBias=data.shadow.normalBias;if(data.shadow.radius!==undefined)object.shadow.radius=data.shadow.radius;if(data.shadow.mapSize!==undefined)object.shadow.mapSize.fromArray(data.shadow.mapSize);if(data.shadow.camera!==undefined)object.shadow.camera=this.parseObject(data.shadow.camera);}if(data.visible!==undefined)object.visible=data.visible;if(data.frustumCulled!==undefined)object.frustumCulled=data.frustumCulled;if(data.renderOrder!==undefined)object.renderOrder=data.renderOrder;if(data.userData!==undefined)object.userData=data.userData;if(data.layers!==undefined)object.layers.mask=data.layers;if(data.children!==undefined){const children=data.children;for(let i=0;i<children.length;i++){object.add(this.parseObject(children[i],geometries,materials,animations));}}if(data.animations!==undefined){const objectAnimations=data.animations;for(let i=0;i<objectAnimations.length;i++){const uuid=objectAnimations[i];object.animations.push(animations[uuid]);}}if(data.type==='LOD'){if(data.autoUpdate!==undefined)object.autoUpdate=data.autoUpdate;const levels=data.levels;for(let l=0;l<levels.length;l++){const level=levels[l];const child=object.getObjectByProperty('uuid',level.object);if(child!==undefined){object.addLevel(child,level.distance);}}}return object;}bindSkeletons(object,skeletons){if(Object.keys(skeletons).length===0)return;object.traverse(function(child){if(child.isSkinnedMesh===true&&child.skeleton!==undefined){const skeleton=skeletons[child.skeleton];if(skeleton===undefined){console.warn('THREE.ObjectLoader: No skeleton found with UUID:',child.skeleton);}else{child.bind(skeleton,child.bindMatrix);}}});}/* DEPRECATED */setTexturePath(value){console.warn('THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().');return this.setResourcePath(value);}}const TEXTURE_MAPPING={UVMapping:UVMapping,CubeReflectionMapping:CubeReflectionMapping,CubeRefractionMapping:CubeRefractionMapping,EquirectangularReflectionMapping:EquirectangularReflectionMapping,EquirectangularRefractionMapping:EquirectangularRefractionMapping,CubeUVReflectionMapping:CubeUVReflectionMapping,CubeUVRefractionMapping:CubeUVRefractionMapping};const TEXTURE_WRAPPING={RepeatWrapping:RepeatWrapping,ClampToEdgeWrapping:ClampToEdgeWrapping,MirroredRepeatWrapping:MirroredRepeatWrapping};const TEXTURE_FILTER={NearestFilter:NearestFilter,NearestMipmapNearestFilter:NearestMipmapNearestFilter,NearestMipmapLinearFilter:NearestMipmapLinearFilter,LinearFilter:LinearFilter,LinearMipmapNearestFilter:LinearMipmapNearestFilter,LinearMipmapLinearFilter:LinearMipmapLinearFilter};function ImageBitmapLoader(manager){if(typeof createImageBitmap==='undefined'){console.warn('THREE.ImageBitmapLoader: createImageBitmap() not supported.');}if(typeof fetch==='undefined'){console.warn('THREE.ImageBitmapLoader: fetch() not supported.');}Loader.call(this,manager);this.options={premultiplyAlpha:'none'};}ImageBitmapLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:ImageBitmapLoader,isImageBitmapLoader:true,setOptions:function setOptions(options){this.options=options;return this;},load:function(url,onLoad,onProgress,onError){if(url===undefined)url='';if(this.path!==undefined)url=this.path+url;url=this.manager.resolveURL(url);const scope=this;const cached=Cache.get(url);if(cached!==undefined){scope.manager.itemStart(url);setTimeout(function(){if(onLoad)onLoad(cached);scope.manager.itemEnd(url);},0);return cached;}const fetchOptions={};fetchOptions.credentials=this.crossOrigin==='anonymous'?'same-origin':'include';fetch(url,fetchOptions).then(function(res){return res.blob();}).then(function(blob){return createImageBitmap(blob,scope.options);}).then(function(imageBitmap){Cache.add(url,imageBitmap);if(onLoad)onLoad(imageBitmap);scope.manager.itemEnd(url);}).catch(function(e){if(onError)onError(e);scope.manager.itemError(url);scope.manager.itemEnd(url);});scope.manager.itemStart(url);}});function ShapePath(){this.type='ShapePath';this.color=new Color();this.subPaths=[];this.currentPath=null;}Object.assign(ShapePath.prototype,{moveTo:function(x,y){this.currentPath=new Path();this.subPaths.push(this.currentPath);this.currentPath.moveTo(x,y);return this;},lineTo:function(x,y){this.currentPath.lineTo(x,y);return this;},quadraticCurveTo:function(aCPx,aCPy,aX,aY){this.currentPath.quadraticCurveTo(aCPx,aCPy,aX,aY);return this;},bezierCurveTo:function(aCP1x,aCP1y,aCP2x,aCP2y,aX,aY){this.currentPath.bezierCurveTo(aCP1x,aCP1y,aCP2x,aCP2y,aX,aY);return this;},splineThru:function(pts){this.currentPath.splineThru(pts);return this;},toShapes:function(isCCW,noHoles){function toShapesNoHoles(inSubpaths){const shapes=[];for(let i=0,l=inSubpaths.length;i<l;i++){const tmpPath=inSubpaths[i];const tmpShape=new Shape();tmpShape.curves=tmpPath.curves;shapes.push(tmpShape);}return shapes;}function isPointInsidePolygon(inPt,inPolygon){const polyLen=inPolygon.length;// inPt on polygon contour => immediate success    or\n// toggling of inside/outside at every single! intersection point of an edge\n//  with the horizontal line through inPt, left of inPt\n//  not counting lowerY endpoints of edges and whole edges on that line\nlet inside=false;for(let p=polyLen-1,q=0;q<polyLen;p=q++){let edgeLowPt=inPolygon[p];let edgeHighPt=inPolygon[q];let edgeDx=edgeHighPt.x-edgeLowPt.x;let edgeDy=edgeHighPt.y-edgeLowPt.y;if(Math.abs(edgeDy)>Number.EPSILON){// not parallel\nif(edgeDy<0){edgeLowPt=inPolygon[q];edgeDx=-edgeDx;edgeHighPt=inPolygon[p];edgeDy=-edgeDy;}if(inPt.y<edgeLowPt.y||inPt.y>edgeHighPt.y)continue;if(inPt.y===edgeLowPt.y){if(inPt.x===edgeLowPt.x)return true;// inPt is on contour ?\n// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n}else{const perpEdge=edgeDy*(inPt.x-edgeLowPt.x)-edgeDx*(inPt.y-edgeLowPt.y);if(perpEdge===0)return true;// inPt is on contour ?\nif(perpEdge<0)continue;inside=!inside;// true intersection left of inPt\n}}else{// parallel or collinear\nif(inPt.y!==edgeLowPt.y)continue;// parallel\n// edge lies on the same horizontal line as inPt\nif(edgeHighPt.x<=inPt.x&&inPt.x<=edgeLowPt.x||edgeLowPt.x<=inPt.x&&inPt.x<=edgeHighPt.x)return true;// inPt: Point on contour !\n// continue;\n}}return inside;}const isClockWise=ShapeUtils.isClockWise;const subPaths=this.subPaths;if(subPaths.length===0)return[];if(noHoles===true)return toShapesNoHoles(subPaths);let solid,tmpPath,tmpShape;const shapes=[];if(subPaths.length===1){tmpPath=subPaths[0];tmpShape=new Shape();tmpShape.curves=tmpPath.curves;shapes.push(tmpShape);return shapes;}let holesFirst=!isClockWise(subPaths[0].getPoints());holesFirst=isCCW?!holesFirst:holesFirst;// console.log(\"Holes first\", holesFirst);\nconst betterShapeHoles=[];const newShapes=[];let newShapeHoles=[];let mainIdx=0;let tmpPoints;newShapes[mainIdx]=undefined;newShapeHoles[mainIdx]=[];for(let i=0,l=subPaths.length;i<l;i++){tmpPath=subPaths[i];tmpPoints=tmpPath.getPoints();solid=isClockWise(tmpPoints);solid=isCCW?!solid:solid;if(solid){if(!holesFirst&&newShapes[mainIdx])mainIdx++;newShapes[mainIdx]={s:new Shape(),p:tmpPoints};newShapes[mainIdx].s.curves=tmpPath.curves;if(holesFirst)mainIdx++;newShapeHoles[mainIdx]=[];//console.log('cw', i);\n}else{newShapeHoles[mainIdx].push({h:tmpPath,p:tmpPoints[0]});//console.log('ccw', i);\n}}// only Holes? -> probably all Shapes with wrong orientation\nif(!newShapes[0])return toShapesNoHoles(subPaths);if(newShapes.length>1){let ambiguous=false;const toChange=[];for(let sIdx=0,sLen=newShapes.length;sIdx<sLen;sIdx++){betterShapeHoles[sIdx]=[];}for(let sIdx=0,sLen=newShapes.length;sIdx<sLen;sIdx++){const sho=newShapeHoles[sIdx];for(let hIdx=0;hIdx<sho.length;hIdx++){const ho=sho[hIdx];let hole_unassigned=true;for(let s2Idx=0;s2Idx<newShapes.length;s2Idx++){if(isPointInsidePolygon(ho.p,newShapes[s2Idx].p)){if(sIdx!==s2Idx)toChange.push({froms:sIdx,tos:s2Idx,hole:hIdx});if(hole_unassigned){hole_unassigned=false;betterShapeHoles[s2Idx].push(ho);}else{ambiguous=true;}}}if(hole_unassigned){betterShapeHoles[sIdx].push(ho);}}}// console.log(\"ambiguous: \", ambiguous);\nif(toChange.length>0){// console.log(\"to change: \", toChange);\nif(!ambiguous)newShapeHoles=betterShapeHoles;}}let tmpHoles;for(let i=0,il=newShapes.length;i<il;i++){tmpShape=newShapes[i].s;shapes.push(tmpShape);tmpHoles=newShapeHoles[i];for(let j=0,jl=tmpHoles.length;j<jl;j++){tmpShape.holes.push(tmpHoles[j].h);}}//console.log(\"shape\", shapes);\nreturn shapes;}});class Font{constructor(data){Object.defineProperty(this,'isFont',{value:true});this.type='Font';this.data=data;}generateShapes(text,size=100){const shapes=[];const paths=createPaths(text,size,this.data);for(let p=0,pl=paths.length;p<pl;p++){Array.prototype.push.apply(shapes,paths[p].toShapes());}return shapes;}}function createPaths(text,size,data){const chars=Array.from?Array.from(text):String(text).split('');// workaround for IE11, see #13988\nconst scale=size/data.resolution;const line_height=(data.boundingBox.yMax-data.boundingBox.yMin+data.underlineThickness)*scale;const paths=[];let offsetX=0,offsetY=0;for(let i=0;i<chars.length;i++){const char=chars[i];if(char==='\\n'){offsetX=0;offsetY-=line_height;}else{const ret=createPath(char,scale,offsetX,offsetY,data);offsetX+=ret.offsetX;paths.push(ret.path);}}return paths;}function createPath(char,scale,offsetX,offsetY,data){const glyph=data.glyphs[char]||data.glyphs['?'];if(!glyph){console.error('THREE.Font: character \"'+char+'\" does not exists in font family '+data.familyName+'.');return;}const path=new ShapePath();let x,y,cpx,cpy,cpx1,cpy1,cpx2,cpy2;if(glyph.o){const outline=glyph._cachedOutline||(glyph._cachedOutline=glyph.o.split(' '));for(let i=0,l=outline.length;i<l;){const action=outline[i++];switch(action){case'm':// moveTo\nx=outline[i++]*scale+offsetX;y=outline[i++]*scale+offsetY;path.moveTo(x,y);break;case'l':// lineTo\nx=outline[i++]*scale+offsetX;y=outline[i++]*scale+offsetY;path.lineTo(x,y);break;case'q':// quadraticCurveTo\ncpx=outline[i++]*scale+offsetX;cpy=outline[i++]*scale+offsetY;cpx1=outline[i++]*scale+offsetX;cpy1=outline[i++]*scale+offsetY;path.quadraticCurveTo(cpx1,cpy1,cpx,cpy);break;case'b':// bezierCurveTo\ncpx=outline[i++]*scale+offsetX;cpy=outline[i++]*scale+offsetY;cpx1=outline[i++]*scale+offsetX;cpy1=outline[i++]*scale+offsetY;cpx2=outline[i++]*scale+offsetX;cpy2=outline[i++]*scale+offsetY;path.bezierCurveTo(cpx1,cpy1,cpx2,cpy2,cpx,cpy);break;}}}return{offsetX:glyph.ha*scale,path:path};}function FontLoader(manager){Loader.call(this,manager);}FontLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:FontLoader,load:function(url,onLoad,onProgress,onError){const scope=this;const loader=new FileLoader(this.manager);loader.setPath(this.path);loader.setRequestHeader(this.requestHeader);loader.setWithCredentials(scope.withCredentials);loader.load(url,function(text){let json;try{json=JSON.parse(text);}catch(e){console.warn('THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.');json=JSON.parse(text.substring(65,text.length-2));}const font=scope.parse(json);if(onLoad)onLoad(font);},onProgress,onError);},parse:function(json){return new Font(json);}});let _context;const AudioContext={getContext:function(){if(_context===undefined){_context=new(window.AudioContext||window.webkitAudioContext)();}return _context;},setContext:function(value){_context=value;}};function AudioLoader(manager){Loader.call(this,manager);}AudioLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:AudioLoader,load:function(url,onLoad,onProgress,onError){const scope=this;const loader=new FileLoader(scope.manager);loader.setResponseType('arraybuffer');loader.setPath(scope.path);loader.setRequestHeader(scope.requestHeader);loader.setWithCredentials(scope.withCredentials);loader.load(url,function(buffer){try{// Create a copy of the buffer. The `decodeAudioData` method\n// detaches the buffer when complete, preventing reuse.\nconst bufferCopy=buffer.slice(0);const context=AudioContext.getContext();context.decodeAudioData(bufferCopy,function(audioBuffer){onLoad(audioBuffer);});}catch(e){if(onError){onError(e);}else{console.error(e);}scope.manager.itemError(url);}},onProgress,onError);}});function HemisphereLightProbe(skyColor,groundColor,intensity){LightProbe.call(this,undefined,intensity);const color1=new Color().set(skyColor);const color2=new Color().set(groundColor);const sky=new Vector3(color1.r,color1.g,color1.b);const ground=new Vector3(color2.r,color2.g,color2.b);// without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\nconst c0=Math.sqrt(Math.PI);const c1=c0*Math.sqrt(0.75);this.sh.coefficients[0].copy(sky).add(ground).multiplyScalar(c0);this.sh.coefficients[1].copy(sky).sub(ground).multiplyScalar(c1);}HemisphereLightProbe.prototype=Object.assign(Object.create(LightProbe.prototype),{constructor:HemisphereLightProbe,isHemisphereLightProbe:true,copy:function(source){// modifying colors not currently supported\nLightProbe.prototype.copy.call(this,source);return this;},toJSON:function(meta){const data=LightProbe.prototype.toJSON.call(this,meta);// data.sh = this.sh.toArray(); // todo\nreturn data;}});function AmbientLightProbe(color,intensity){LightProbe.call(this,undefined,intensity);const color1=new Color().set(color);// without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\nthis.sh.coefficients[0].set(color1.r,color1.g,color1.b).multiplyScalar(2*Math.sqrt(Math.PI));}AmbientLightProbe.prototype=Object.assign(Object.create(LightProbe.prototype),{constructor:AmbientLightProbe,isAmbientLightProbe:true,copy:function(source){// modifying color not currently supported\nLightProbe.prototype.copy.call(this,source);return this;},toJSON:function(meta){const data=LightProbe.prototype.toJSON.call(this,meta);// data.sh = this.sh.toArray(); // todo\nreturn data;}});const _eyeRight=new Matrix4();const _eyeLeft=new Matrix4();function StereoCamera(){this.type='StereoCamera';this.aspect=1;this.eyeSep=0.064;this.cameraL=new PerspectiveCamera();this.cameraL.layers.enable(1);this.cameraL.matrixAutoUpdate=false;this.cameraR=new PerspectiveCamera();this.cameraR.layers.enable(2);this.cameraR.matrixAutoUpdate=false;this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null};}Object.assign(StereoCamera.prototype,{update:function(camera){const cache=this._cache;const needsUpdate=cache.focus!==camera.focus||cache.fov!==camera.fov||cache.aspect!==camera.aspect*this.aspect||cache.near!==camera.near||cache.far!==camera.far||cache.zoom!==camera.zoom||cache.eyeSep!==this.eyeSep;if(needsUpdate){cache.focus=camera.focus;cache.fov=camera.fov;cache.aspect=camera.aspect*this.aspect;cache.near=camera.near;cache.far=camera.far;cache.zoom=camera.zoom;cache.eyeSep=this.eyeSep;// Off-axis stereoscopic effect based on\n// http://paulbourke.net/stereographics/stereorender/\nconst projectionMatrix=camera.projectionMatrix.clone();const eyeSepHalf=cache.eyeSep/2;const eyeSepOnProjection=eyeSepHalf*cache.near/cache.focus;const ymax=cache.near*Math.tan(MathUtils.DEG2RAD*cache.fov*0.5)/cache.zoom;let xmin,xmax;// translate xOffset\n_eyeLeft.elements[12]=-eyeSepHalf;_eyeRight.elements[12]=eyeSepHalf;// for left eye\nxmin=-ymax*cache.aspect+eyeSepOnProjection;xmax=ymax*cache.aspect+eyeSepOnProjection;projectionMatrix.elements[0]=2*cache.near/(xmax-xmin);projectionMatrix.elements[8]=(xmax+xmin)/(xmax-xmin);this.cameraL.projectionMatrix.copy(projectionMatrix);// for right eye\nxmin=-ymax*cache.aspect-eyeSepOnProjection;xmax=ymax*cache.aspect-eyeSepOnProjection;projectionMatrix.elements[0]=2*cache.near/(xmax-xmin);projectionMatrix.elements[8]=(xmax+xmin)/(xmax-xmin);this.cameraR.projectionMatrix.copy(projectionMatrix);}this.cameraL.matrixWorld.copy(camera.matrixWorld).multiply(_eyeLeft);this.cameraR.matrixWorld.copy(camera.matrixWorld).multiply(_eyeRight);}});class Clock{constructor(autoStart){this.autoStart=autoStart!==undefined?autoStart:true;this.startTime=0;this.oldTime=0;this.elapsedTime=0;this.running=false;}start(){this.startTime=now();this.oldTime=this.startTime;this.elapsedTime=0;this.running=true;}stop(){this.getElapsedTime();this.running=false;this.autoStart=false;}getElapsedTime(){this.getDelta();return this.elapsedTime;}getDelta(){let diff=0;if(this.autoStart&&!this.running){this.start();return 0;}if(this.running){const newTime=now();diff=(newTime-this.oldTime)/1000;this.oldTime=newTime;this.elapsedTime+=diff;}return diff;}}function now(){return(typeof performance==='undefined'?Date:performance).now();// see #10732\n}const _position$2=/*@__PURE__*/new Vector3();const _quaternion$3=/*@__PURE__*/new Quaternion();const _scale$1=/*@__PURE__*/new Vector3();const _orientation=/*@__PURE__*/new Vector3();class AudioListener extends Object3D{constructor(){super();this.type='AudioListener';this.context=AudioContext.getContext();this.gain=this.context.createGain();this.gain.connect(this.context.destination);this.filter=null;this.timeDelta=0;// private\nthis._clock=new Clock();}getInput(){return this.gain;}removeFilter(){if(this.filter!==null){this.gain.disconnect(this.filter);this.filter.disconnect(this.context.destination);this.gain.connect(this.context.destination);this.filter=null;}return this;}getFilter(){return this.filter;}setFilter(value){if(this.filter!==null){this.gain.disconnect(this.filter);this.filter.disconnect(this.context.destination);}else{this.gain.disconnect(this.context.destination);}this.filter=value;this.gain.connect(this.filter);this.filter.connect(this.context.destination);return this;}getMasterVolume(){return this.gain.gain.value;}setMasterVolume(value){this.gain.gain.setTargetAtTime(value,this.context.currentTime,0.01);return this;}updateMatrixWorld(force){super.updateMatrixWorld(force);const listener=this.context.listener;const up=this.up;this.timeDelta=this._clock.getDelta();this.matrixWorld.decompose(_position$2,_quaternion$3,_scale$1);_orientation.set(0,0,-1).applyQuaternion(_quaternion$3);if(listener.positionX){// code path for Chrome (see #14393)\nconst endTime=this.context.currentTime+this.timeDelta;listener.positionX.linearRampToValueAtTime(_position$2.x,endTime);listener.positionY.linearRampToValueAtTime(_position$2.y,endTime);listener.positionZ.linearRampToValueAtTime(_position$2.z,endTime);listener.forwardX.linearRampToValueAtTime(_orientation.x,endTime);listener.forwardY.linearRampToValueAtTime(_orientation.y,endTime);listener.forwardZ.linearRampToValueAtTime(_orientation.z,endTime);listener.upX.linearRampToValueAtTime(up.x,endTime);listener.upY.linearRampToValueAtTime(up.y,endTime);listener.upZ.linearRampToValueAtTime(up.z,endTime);}else{listener.setPosition(_position$2.x,_position$2.y,_position$2.z);listener.setOrientation(_orientation.x,_orientation.y,_orientation.z,up.x,up.y,up.z);}}}class Audio extends Object3D{constructor(listener){super();this.type='Audio';this.listener=listener;this.context=listener.context;this.gain=this.context.createGain();this.gain.connect(listener.getInput());this.autoplay=false;this.buffer=null;this.detune=0;this.loop=false;this.loopStart=0;this.loopEnd=0;this.offset=0;this.duration=undefined;this.playbackRate=1;this.isPlaying=false;this.hasPlaybackControl=true;this.source=null;this.sourceType='empty';this._startedAt=0;this._progress=0;this._connected=false;this.filters=[];}getOutput(){return this.gain;}setNodeSource(audioNode){this.hasPlaybackControl=false;this.sourceType='audioNode';this.source=audioNode;this.connect();return this;}setMediaElementSource(mediaElement){this.hasPlaybackControl=false;this.sourceType='mediaNode';this.source=this.context.createMediaElementSource(mediaElement);this.connect();return this;}setMediaStreamSource(mediaStream){this.hasPlaybackControl=false;this.sourceType='mediaStreamNode';this.source=this.context.createMediaStreamSource(mediaStream);this.connect();return this;}setBuffer(audioBuffer){this.buffer=audioBuffer;this.sourceType='buffer';if(this.autoplay)this.play();return this;}play(delay=0){if(this.isPlaying===true){console.warn('THREE.Audio: Audio is already playing.');return;}if(this.hasPlaybackControl===false){console.warn('THREE.Audio: this Audio has no playback control.');return;}this._startedAt=this.context.currentTime+delay;const source=this.context.createBufferSource();source.buffer=this.buffer;source.loop=this.loop;source.loopStart=this.loopStart;source.loopEnd=this.loopEnd;source.onended=this.onEnded.bind(this);source.start(this._startedAt,this._progress+this.offset,this.duration);this.isPlaying=true;this.source=source;this.setDetune(this.detune);this.setPlaybackRate(this.playbackRate);return this.connect();}pause(){if(this.hasPlaybackControl===false){console.warn('THREE.Audio: this Audio has no playback control.');return;}if(this.isPlaying===true){// update current progress\nthis._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate;if(this.loop===true){// ensure _progress does not exceed duration with looped audios\nthis._progress=this._progress%(this.duration||this.buffer.duration);}this.source.stop();this.source.onended=null;this.isPlaying=false;}return this;}stop(){if(this.hasPlaybackControl===false){console.warn('THREE.Audio: this Audio has no playback control.');return;}this._progress=0;this.source.stop();this.source.onended=null;this.isPlaying=false;return this;}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let i=1,l=this.filters.length;i<l;i++){this.filters[i-1].connect(this.filters[i]);}this.filters[this.filters.length-1].connect(this.getOutput());}else{this.source.connect(this.getOutput());}this._connected=true;return this;}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let i=1,l=this.filters.length;i<l;i++){this.filters[i-1].disconnect(this.filters[i]);}this.filters[this.filters.length-1].disconnect(this.getOutput());}else{this.source.disconnect(this.getOutput());}this._connected=false;return this;}getFilters(){return this.filters;}setFilters(value){if(!value)value=[];if(this._connected===true){this.disconnect();this.filters=value.slice();this.connect();}else{this.filters=value.slice();}return this;}setDetune(value){this.detune=value;if(this.source.detune===undefined)return;// only set detune when available\nif(this.isPlaying===true){this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,0.01);}return this;}getDetune(){return this.detune;}getFilter(){return this.getFilters()[0];}setFilter(filter){return this.setFilters(filter?[filter]:[]);}setPlaybackRate(value){if(this.hasPlaybackControl===false){console.warn('THREE.Audio: this Audio has no playback control.');return;}this.playbackRate=value;if(this.isPlaying===true){this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,0.01);}return this;}getPlaybackRate(){return this.playbackRate;}onEnded(){this.isPlaying=false;}getLoop(){if(this.hasPlaybackControl===false){console.warn('THREE.Audio: this Audio has no playback control.');return false;}return this.loop;}setLoop(value){if(this.hasPlaybackControl===false){console.warn('THREE.Audio: this Audio has no playback control.');return;}this.loop=value;if(this.isPlaying===true){this.source.loop=this.loop;}return this;}setLoopStart(value){this.loopStart=value;return this;}setLoopEnd(value){this.loopEnd=value;return this;}getVolume(){return this.gain.gain.value;}setVolume(value){this.gain.gain.setTargetAtTime(value,this.context.currentTime,0.01);return this;}}const _position$3=/*@__PURE__*/new Vector3();const _quaternion$4=/*@__PURE__*/new Quaternion();const _scale$2=/*@__PURE__*/new Vector3();const _orientation$1=/*@__PURE__*/new Vector3();class PositionalAudio extends Audio{constructor(listener){super(listener);this.panner=this.context.createPanner();this.panner.panningModel='HRTF';this.panner.connect(this.gain);}getOutput(){return this.panner;}getRefDistance(){return this.panner.refDistance;}setRefDistance(value){this.panner.refDistance=value;return this;}getRolloffFactor(){return this.panner.rolloffFactor;}setRolloffFactor(value){this.panner.rolloffFactor=value;return this;}getDistanceModel(){return this.panner.distanceModel;}setDistanceModel(value){this.panner.distanceModel=value;return this;}getMaxDistance(){return this.panner.maxDistance;}setMaxDistance(value){this.panner.maxDistance=value;return this;}setDirectionalCone(coneInnerAngle,coneOuterAngle,coneOuterGain){this.panner.coneInnerAngle=coneInnerAngle;this.panner.coneOuterAngle=coneOuterAngle;this.panner.coneOuterGain=coneOuterGain;return this;}updateMatrixWorld(force){super.updateMatrixWorld(force);if(this.hasPlaybackControl===true&&this.isPlaying===false)return;this.matrixWorld.decompose(_position$3,_quaternion$4,_scale$2);_orientation$1.set(0,0,1).applyQuaternion(_quaternion$4);const panner=this.panner;if(panner.positionX){// code path for Chrome and Firefox (see #14393)\nconst endTime=this.context.currentTime+this.listener.timeDelta;panner.positionX.linearRampToValueAtTime(_position$3.x,endTime);panner.positionY.linearRampToValueAtTime(_position$3.y,endTime);panner.positionZ.linearRampToValueAtTime(_position$3.z,endTime);panner.orientationX.linearRampToValueAtTime(_orientation$1.x,endTime);panner.orientationY.linearRampToValueAtTime(_orientation$1.y,endTime);panner.orientationZ.linearRampToValueAtTime(_orientation$1.z,endTime);}else{panner.setPosition(_position$3.x,_position$3.y,_position$3.z);panner.setOrientation(_orientation$1.x,_orientation$1.y,_orientation$1.z);}}}class AudioAnalyser{constructor(audio,fftSize=2048){this.analyser=audio.context.createAnalyser();this.analyser.fftSize=fftSize;this.data=new Uint8Array(this.analyser.frequencyBinCount);audio.getOutput().connect(this.analyser);}getFrequencyData(){this.analyser.getByteFrequencyData(this.data);return this.data;}getAverageFrequency(){let value=0;const data=this.getFrequencyData();for(let i=0;i<data.length;i++){value+=data[i];}return value/data.length;}}function PropertyMixer(binding,typeName,valueSize){this.binding=binding;this.valueSize=valueSize;let mixFunction,mixFunctionAdditive,setIdentity;// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n//\n// interpolators can use .buffer as their .result\n// the data then goes to 'incoming'\n//\n// 'accu0' and 'accu1' are used frame-interleaved for\n// the cumulative result and are compared to detect\n// changes\n//\n// 'orig' stores the original state of the property\n//\n// 'add' is used for additive cumulative results\n//\n// 'work' is optional and is only present for quaternion types. It is used\n// to store intermediate quaternion multiplication results\nswitch(typeName){case'quaternion':mixFunction=this._slerp;mixFunctionAdditive=this._slerpAdditive;setIdentity=this._setAdditiveIdentityQuaternion;this.buffer=new Float64Array(valueSize*6);this._workIndex=5;break;case'string':case'bool':mixFunction=this._select;// Use the regular mix function and for additive on these types,\n// additive is not relevant for non-numeric types\nmixFunctionAdditive=this._select;setIdentity=this._setAdditiveIdentityOther;this.buffer=new Array(valueSize*5);break;default:mixFunction=this._lerp;mixFunctionAdditive=this._lerpAdditive;setIdentity=this._setAdditiveIdentityNumeric;this.buffer=new Float64Array(valueSize*5);}this._mixBufferRegion=mixFunction;this._mixBufferRegionAdditive=mixFunctionAdditive;this._setIdentity=setIdentity;this._origIndex=3;this._addIndex=4;this.cumulativeWeight=0;this.cumulativeWeightAdditive=0;this.useCount=0;this.referenceCount=0;}Object.assign(PropertyMixer.prototype,{// accumulate data in the 'incoming' region into 'accu<i>'\naccumulate:function(accuIndex,weight){// note: happily accumulating nothing when weight = 0, the caller knows\n// the weight and shouldn't have made the call in the first place\nconst buffer=this.buffer,stride=this.valueSize,offset=accuIndex*stride+stride;let currentWeight=this.cumulativeWeight;if(currentWeight===0){// accuN := incoming * weight\nfor(let i=0;i!==stride;++i){buffer[offset+i]=buffer[i];}currentWeight=weight;}else{// accuN := accuN + incoming * weight\ncurrentWeight+=weight;const mix=weight/currentWeight;this._mixBufferRegion(buffer,offset,0,mix,stride);}this.cumulativeWeight=currentWeight;},// accumulate data in the 'incoming' region into 'add'\naccumulateAdditive:function(weight){const buffer=this.buffer,stride=this.valueSize,offset=stride*this._addIndex;if(this.cumulativeWeightAdditive===0){// add = identity\nthis._setIdentity();}// add := add + incoming * weight\nthis._mixBufferRegionAdditive(buffer,offset,0,weight,stride);this.cumulativeWeightAdditive+=weight;},// apply the state of 'accu<i>' to the binding when accus differ\napply:function(accuIndex){const stride=this.valueSize,buffer=this.buffer,offset=accuIndex*stride+stride,weight=this.cumulativeWeight,weightAdditive=this.cumulativeWeightAdditive,binding=this.binding;this.cumulativeWeight=0;this.cumulativeWeightAdditive=0;if(weight<1){// accuN := accuN + original * ( 1 - cumulativeWeight )\nconst originalValueOffset=stride*this._origIndex;this._mixBufferRegion(buffer,offset,originalValueOffset,1-weight,stride);}if(weightAdditive>0){// accuN := accuN + additive accuN\nthis._mixBufferRegionAdditive(buffer,offset,this._addIndex*stride,1,stride);}for(let i=stride,e=stride+stride;i!==e;++i){if(buffer[i]!==buffer[i+stride]){// value has changed -> update scene graph\nbinding.setValue(buffer,offset);break;}}},// remember the state of the bound property and copy it to both accus\nsaveOriginalState:function(){const binding=this.binding;const buffer=this.buffer,stride=this.valueSize,originalValueOffset=stride*this._origIndex;binding.getValue(buffer,originalValueOffset);// accu[0..1] := orig -- initially detect changes against the original\nfor(let i=stride,e=originalValueOffset;i!==e;++i){buffer[i]=buffer[originalValueOffset+i%stride];}// Add to identity for additive\nthis._setIdentity();this.cumulativeWeight=0;this.cumulativeWeightAdditive=0;},// apply the state previously taken via 'saveOriginalState' to the binding\nrestoreOriginalState:function(){const originalValueOffset=this.valueSize*3;this.binding.setValue(this.buffer,originalValueOffset);},_setAdditiveIdentityNumeric:function(){const startIndex=this._addIndex*this.valueSize;const endIndex=startIndex+this.valueSize;for(let i=startIndex;i<endIndex;i++){this.buffer[i]=0;}},_setAdditiveIdentityQuaternion:function(){this._setAdditiveIdentityNumeric();this.buffer[this._addIndex*this.valueSize+3]=1;},_setAdditiveIdentityOther:function(){const startIndex=this._origIndex*this.valueSize;const targetIndex=this._addIndex*this.valueSize;for(let i=0;i<this.valueSize;i++){this.buffer[targetIndex+i]=this.buffer[startIndex+i];}},// mix functions\n_select:function(buffer,dstOffset,srcOffset,t,stride){if(t>=0.5){for(let i=0;i!==stride;++i){buffer[dstOffset+i]=buffer[srcOffset+i];}}},_slerp:function(buffer,dstOffset,srcOffset,t){Quaternion.slerpFlat(buffer,dstOffset,buffer,dstOffset,buffer,srcOffset,t);},_slerpAdditive:function(buffer,dstOffset,srcOffset,t,stride){const workOffset=this._workIndex*stride;// Store result in intermediate buffer offset\nQuaternion.multiplyQuaternionsFlat(buffer,workOffset,buffer,dstOffset,buffer,srcOffset);// Slerp to the intermediate result\nQuaternion.slerpFlat(buffer,dstOffset,buffer,dstOffset,buffer,workOffset,t);},_lerp:function(buffer,dstOffset,srcOffset,t,stride){const s=1-t;for(let i=0;i!==stride;++i){const j=dstOffset+i;buffer[j]=buffer[j]*s+buffer[srcOffset+i]*t;}},_lerpAdditive:function(buffer,dstOffset,srcOffset,t,stride){for(let i=0;i!==stride;++i){const j=dstOffset+i;buffer[j]=buffer[j]+buffer[srcOffset+i]*t;}}});// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE='\\\\[\\\\]\\\\.:\\\\/';const _reservedRe=new RegExp('['+_RESERVED_CHARS_RE+']','g');// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar='[^'+_RESERVED_CHARS_RE+']';const _wordCharOrDot='[^'+_RESERVED_CHARS_RE.replace('\\\\.','')+']';// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe=/((?:WC+[\\/:])*)/.source.replace('WC',_wordChar);// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe=/(WCOD+)?/.source.replace('WCOD',_wordCharOrDot);// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe=/(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace('WC',_wordChar);// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe=/\\.(WC+)(?:\\[(.+)\\])?/.source.replace('WC',_wordChar);const _trackRe=new RegExp(''+'^'+_directoryRe+_nodeRe+_objectRe+_propertyRe+'$');const _supportedObjectNames=['material','materials','bones'];function Composite(targetGroup,path,optionalParsedPath){const parsedPath=optionalParsedPath||PropertyBinding.parseTrackName(path);this._targetGroup=targetGroup;this._bindings=targetGroup.subscribe_(path,parsedPath);}Object.assign(Composite.prototype,{getValue:function(array,offset){this.bind();// bind all binding\nconst firstValidIndex=this._targetGroup.nCachedObjects_,binding=this._bindings[firstValidIndex];// and only call .getValue on the first\nif(binding!==undefined)binding.getValue(array,offset);},setValue:function(array,offset){const bindings=this._bindings;for(let i=this._targetGroup.nCachedObjects_,n=bindings.length;i!==n;++i){bindings[i].setValue(array,offset);}},bind:function(){const bindings=this._bindings;for(let i=this._targetGroup.nCachedObjects_,n=bindings.length;i!==n;++i){bindings[i].bind();}},unbind:function(){const bindings=this._bindings;for(let i=this._targetGroup.nCachedObjects_,n=bindings.length;i!==n;++i){bindings[i].unbind();}}});function PropertyBinding(rootNode,path,parsedPath){this.path=path;this.parsedPath=parsedPath||PropertyBinding.parseTrackName(path);this.node=PropertyBinding.findNode(rootNode,this.parsedPath.nodeName)||rootNode;this.rootNode=rootNode;}Object.assign(PropertyBinding,{Composite:Composite,create:function(root,path,parsedPath){if(!(root&&root.isAnimationObjectGroup)){return new PropertyBinding(root,path,parsedPath);}else{return new PropertyBinding.Composite(root,path,parsedPath);}},/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */sanitizeNodeName:function(name){return name.replace(/\\s/g,'_').replace(_reservedRe,'');},parseTrackName:function(trackName){const matches=_trackRe.exec(trackName);if(!matches){throw new Error('PropertyBinding: Cannot parse trackName: '+trackName);}const results={// directoryName: matches[ 1 ], // (tschw) currently unused\nnodeName:matches[2],objectName:matches[3],objectIndex:matches[4],propertyName:matches[5],// required\npropertyIndex:matches[6]};const lastDot=results.nodeName&&results.nodeName.lastIndexOf('.');if(lastDot!==undefined&&lastDot!==-1){const objectName=results.nodeName.substring(lastDot+1);// Object names must be checked against an allowlist. Otherwise, there\n// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n// 'bar' could be the objectName, or part of a nodeName (which can\n// include '.' characters).\nif(_supportedObjectNames.indexOf(objectName)!==-1){results.nodeName=results.nodeName.substring(0,lastDot);results.objectName=objectName;}}if(results.propertyName===null||results.propertyName.length===0){throw new Error('PropertyBinding: can not parse propertyName from trackName: '+trackName);}return results;},findNode:function(root,nodeName){if(!nodeName||nodeName===''||nodeName==='.'||nodeName===-1||nodeName===root.name||nodeName===root.uuid){return root;}// search into skeleton bones.\nif(root.skeleton){const bone=root.skeleton.getBoneByName(nodeName);if(bone!==undefined){return bone;}}// search into node subtree.\nif(root.children){const searchNodeSubtree=function(children){for(let i=0;i<children.length;i++){const childNode=children[i];if(childNode.name===nodeName||childNode.uuid===nodeName){return childNode;}const result=searchNodeSubtree(childNode.children);if(result)return result;}return null;};const subTreeNode=searchNodeSubtree(root.children);if(subTreeNode){return subTreeNode;}}return null;}});Object.assign(PropertyBinding.prototype,{// prototype, continued\n// these are used to \"bind\" a nonexistent property\n_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function getValue_direct(buffer,offset){buffer[offset]=this.node[this.propertyName];},function getValue_array(buffer,offset){const source=this.resolvedProperty;for(let i=0,n=source.length;i!==n;++i){buffer[offset++]=source[i];}},function getValue_arrayElement(buffer,offset){buffer[offset]=this.resolvedProperty[this.propertyIndex];},function getValue_toArray(buffer,offset){this.resolvedProperty.toArray(buffer,offset);}],SetterByBindingTypeAndVersioning:[[// Direct\nfunction setValue_direct(buffer,offset){this.targetObject[this.propertyName]=buffer[offset];},function setValue_direct_setNeedsUpdate(buffer,offset){this.targetObject[this.propertyName]=buffer[offset];this.targetObject.needsUpdate=true;},function setValue_direct_setMatrixWorldNeedsUpdate(buffer,offset){this.targetObject[this.propertyName]=buffer[offset];this.targetObject.matrixWorldNeedsUpdate=true;}],[// EntireArray\nfunction setValue_array(buffer,offset){const dest=this.resolvedProperty;for(let i=0,n=dest.length;i!==n;++i){dest[i]=buffer[offset++];}},function setValue_array_setNeedsUpdate(buffer,offset){const dest=this.resolvedProperty;for(let i=0,n=dest.length;i!==n;++i){dest[i]=buffer[offset++];}this.targetObject.needsUpdate=true;},function setValue_array_setMatrixWorldNeedsUpdate(buffer,offset){const dest=this.resolvedProperty;for(let i=0,n=dest.length;i!==n;++i){dest[i]=buffer[offset++];}this.targetObject.matrixWorldNeedsUpdate=true;}],[// ArrayElement\nfunction setValue_arrayElement(buffer,offset){this.resolvedProperty[this.propertyIndex]=buffer[offset];},function setValue_arrayElement_setNeedsUpdate(buffer,offset){this.resolvedProperty[this.propertyIndex]=buffer[offset];this.targetObject.needsUpdate=true;},function setValue_arrayElement_setMatrixWorldNeedsUpdate(buffer,offset){this.resolvedProperty[this.propertyIndex]=buffer[offset];this.targetObject.matrixWorldNeedsUpdate=true;}],[// HasToFromArray\nfunction setValue_fromArray(buffer,offset){this.resolvedProperty.fromArray(buffer,offset);},function setValue_fromArray_setNeedsUpdate(buffer,offset){this.resolvedProperty.fromArray(buffer,offset);this.targetObject.needsUpdate=true;},function setValue_fromArray_setMatrixWorldNeedsUpdate(buffer,offset){this.resolvedProperty.fromArray(buffer,offset);this.targetObject.matrixWorldNeedsUpdate=true;}]],getValue:function getValue_unbound(targetArray,offset){this.bind();this.getValue(targetArray,offset);// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\n},setValue:function getValue_unbound(sourceArray,offset){this.bind();this.setValue(sourceArray,offset);},// create getter / setter pair for a property in the scene graph\nbind:function(){let targetObject=this.node;const parsedPath=this.parsedPath;const objectName=parsedPath.objectName;const propertyName=parsedPath.propertyName;let propertyIndex=parsedPath.propertyIndex;if(!targetObject){targetObject=PropertyBinding.findNode(this.rootNode,parsedPath.nodeName)||this.rootNode;this.node=targetObject;}// set fail state so we can just 'return' on error\nthis.getValue=this._getValue_unavailable;this.setValue=this._setValue_unavailable;// ensure there is a value node\nif(!targetObject){console.error('THREE.PropertyBinding: Trying to update node for track: '+this.path+' but it wasn\\'t found.');return;}if(objectName){let objectIndex=parsedPath.objectIndex;// special cases were we need to reach deeper into the hierarchy to get the face materials....\nswitch(objectName){case'materials':if(!targetObject.material){console.error('THREE.PropertyBinding: Can not bind to material as node does not have a material.',this);return;}if(!targetObject.material.materials){console.error('THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.',this);return;}targetObject=targetObject.material.materials;break;case'bones':if(!targetObject.skeleton){console.error('THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.',this);return;}// potential future optimization: skip this if propertyIndex is already an integer\n// and convert the integer string to a true integer.\ntargetObject=targetObject.skeleton.bones;// support resolving morphTarget names into indices.\nfor(let i=0;i<targetObject.length;i++){if(targetObject[i].name===objectIndex){objectIndex=i;break;}}break;default:if(targetObject[objectName]===undefined){console.error('THREE.PropertyBinding: Can not bind to objectName of node undefined.',this);return;}targetObject=targetObject[objectName];}if(objectIndex!==undefined){if(targetObject[objectIndex]===undefined){console.error('THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.',this,targetObject);return;}targetObject=targetObject[objectIndex];}}// resolve property\nconst nodeProperty=targetObject[propertyName];if(nodeProperty===undefined){const nodeName=parsedPath.nodeName;console.error('THREE.PropertyBinding: Trying to update property for track: '+nodeName+'.'+propertyName+' but it wasn\\'t found.',targetObject);return;}// determine versioning scheme\nlet versioning=this.Versioning.None;this.targetObject=targetObject;if(targetObject.needsUpdate!==undefined){// material\nversioning=this.Versioning.NeedsUpdate;}else if(targetObject.matrixWorldNeedsUpdate!==undefined){// node transform\nversioning=this.Versioning.MatrixWorldNeedsUpdate;}// determine how the property gets bound\nlet bindingType=this.BindingType.Direct;if(propertyIndex!==undefined){// access a sub element of the property array (only primitives are supported right now)\nif(propertyName==='morphTargetInfluences'){// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n// support resolving morphTarget names into indices.\nif(!targetObject.geometry){console.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.',this);return;}if(targetObject.geometry.isBufferGeometry){if(!targetObject.geometry.morphAttributes){console.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.',this);return;}if(targetObject.morphTargetDictionary[propertyIndex]!==undefined){propertyIndex=targetObject.morphTargetDictionary[propertyIndex];}}else{console.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.',this);return;}}bindingType=this.BindingType.ArrayElement;this.resolvedProperty=nodeProperty;this.propertyIndex=propertyIndex;}else if(nodeProperty.fromArray!==undefined&&nodeProperty.toArray!==undefined){// must use copy for Object3D.Euler/Quaternion\nbindingType=this.BindingType.HasFromToArray;this.resolvedProperty=nodeProperty;}else if(Array.isArray(nodeProperty)){bindingType=this.BindingType.EntireArray;this.resolvedProperty=nodeProperty;}else{this.propertyName=propertyName;}// select getter / setter\nthis.getValue=this.GetterByBindingType[bindingType];this.setValue=this.SetterByBindingTypeAndVersioning[bindingType][versioning];},unbind:function(){this.node=null;// back to the prototype version of getValue / setValue\n// note: avoiding to mutate the shape of 'this' via 'delete'\nthis.getValue=this._getValue_unbound;this.setValue=this._setValue_unbound;}});// DECLARE ALIAS AFTER assign prototype\nObject.assign(PropertyBinding.prototype,{// initial state of these methods that calls 'bind'\n_getValue_unbound:PropertyBinding.prototype.getValue,_setValue_unbound:PropertyBinding.prototype.setValue});/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */function AnimationObjectGroup(){this.uuid=MathUtils.generateUUID();// cached objects followed by the active ones\nthis._objects=Array.prototype.slice.call(arguments);this.nCachedObjects_=0;// threshold\n// note: read by PropertyBinding.Composite\nconst indices={};this._indicesByUUID=indices;// for bookkeeping\nfor(let i=0,n=arguments.length;i!==n;++i){indices[arguments[i].uuid]=i;}this._paths=[];// inside: string\nthis._parsedPaths=[];// inside: { we don't care, here }\nthis._bindings=[];// inside: Array< PropertyBinding >\nthis._bindingsIndicesByPath={};// inside: indices in these arrays\nconst scope=this;this.stats={objects:{get total(){return scope._objects.length;},get inUse(){return this.total-scope.nCachedObjects_;}},get bindingsPerObject(){return scope._bindings.length;}};}Object.assign(AnimationObjectGroup.prototype,{isAnimationObjectGroup:true,add:function(){const objects=this._objects,indicesByUUID=this._indicesByUUID,paths=this._paths,parsedPaths=this._parsedPaths,bindings=this._bindings,nBindings=bindings.length;let knownObject=undefined,nObjects=objects.length,nCachedObjects=this.nCachedObjects_;for(let i=0,n=arguments.length;i!==n;++i){const object=arguments[i],uuid=object.uuid;let index=indicesByUUID[uuid];if(index===undefined){// unknown object -> add it to the ACTIVE region\nindex=nObjects++;indicesByUUID[uuid]=index;objects.push(object);// accounting is done, now do the same for all bindings\nfor(let j=0,m=nBindings;j!==m;++j){bindings[j].push(new PropertyBinding(object,paths[j],parsedPaths[j]));}}else if(index<nCachedObjects){knownObject=objects[index];// move existing object to the ACTIVE region\nconst firstActiveIndex=--nCachedObjects,lastCachedObject=objects[firstActiveIndex];indicesByUUID[lastCachedObject.uuid]=index;objects[index]=lastCachedObject;indicesByUUID[uuid]=firstActiveIndex;objects[firstActiveIndex]=object;// accounting is done, now do the same for all bindings\nfor(let j=0,m=nBindings;j!==m;++j){const bindingsForPath=bindings[j],lastCached=bindingsForPath[firstActiveIndex];let binding=bindingsForPath[index];bindingsForPath[index]=lastCached;if(binding===undefined){// since we do not bother to create new bindings\n// for objects that are cached, the binding may\n// or may not exist\nbinding=new PropertyBinding(object,paths[j],parsedPaths[j]);}bindingsForPath[firstActiveIndex]=binding;}}else if(objects[index]!==knownObject){console.error('THREE.AnimationObjectGroup: Different objects with the same UUID '+'detected. Clean the caches or recreate your infrastructure when reloading scenes.');}// else the object is already where we want it to be\n}// for arguments\nthis.nCachedObjects_=nCachedObjects;},remove:function(){const objects=this._objects,indicesByUUID=this._indicesByUUID,bindings=this._bindings,nBindings=bindings.length;let nCachedObjects=this.nCachedObjects_;for(let i=0,n=arguments.length;i!==n;++i){const object=arguments[i],uuid=object.uuid,index=indicesByUUID[uuid];if(index!==undefined&&index>=nCachedObjects){// move existing object into the CACHED region\nconst lastCachedIndex=nCachedObjects++,firstActiveObject=objects[lastCachedIndex];indicesByUUID[firstActiveObject.uuid]=index;objects[index]=firstActiveObject;indicesByUUID[uuid]=lastCachedIndex;objects[lastCachedIndex]=object;// accounting is done, now do the same for all bindings\nfor(let j=0,m=nBindings;j!==m;++j){const bindingsForPath=bindings[j],firstActive=bindingsForPath[lastCachedIndex],binding=bindingsForPath[index];bindingsForPath[index]=firstActive;bindingsForPath[lastCachedIndex]=binding;}}}// for arguments\nthis.nCachedObjects_=nCachedObjects;},// remove & forget\nuncache:function(){const objects=this._objects,indicesByUUID=this._indicesByUUID,bindings=this._bindings,nBindings=bindings.length;let nCachedObjects=this.nCachedObjects_,nObjects=objects.length;for(let i=0,n=arguments.length;i!==n;++i){const object=arguments[i],uuid=object.uuid,index=indicesByUUID[uuid];if(index!==undefined){delete indicesByUUID[uuid];if(index<nCachedObjects){// object is cached, shrink the CACHED region\nconst firstActiveIndex=--nCachedObjects,lastCachedObject=objects[firstActiveIndex],lastIndex=--nObjects,lastObject=objects[lastIndex];// last cached object takes this object's place\nindicesByUUID[lastCachedObject.uuid]=index;objects[index]=lastCachedObject;// last object goes to the activated slot and pop\nindicesByUUID[lastObject.uuid]=firstActiveIndex;objects[firstActiveIndex]=lastObject;objects.pop();// accounting is done, now do the same for all bindings\nfor(let j=0,m=nBindings;j!==m;++j){const bindingsForPath=bindings[j],lastCached=bindingsForPath[firstActiveIndex],last=bindingsForPath[lastIndex];bindingsForPath[index]=lastCached;bindingsForPath[firstActiveIndex]=last;bindingsForPath.pop();}}else{// object is active, just swap with the last and pop\nconst lastIndex=--nObjects,lastObject=objects[lastIndex];if(lastIndex>0){indicesByUUID[lastObject.uuid]=index;}objects[index]=lastObject;objects.pop();// accounting is done, now do the same for all bindings\nfor(let j=0,m=nBindings;j!==m;++j){const bindingsForPath=bindings[j];bindingsForPath[index]=bindingsForPath[lastIndex];bindingsForPath.pop();}}// cached or active\n}// if object is known\n}// for arguments\nthis.nCachedObjects_=nCachedObjects;},// Internal interface used by befriended PropertyBinding.Composite:\nsubscribe_:function(path,parsedPath){// returns an array of bindings for the given path that is changed\n// according to the contained objects in the group\nconst indicesByPath=this._bindingsIndicesByPath;let index=indicesByPath[path];const bindings=this._bindings;if(index!==undefined)return bindings[index];const paths=this._paths,parsedPaths=this._parsedPaths,objects=this._objects,nObjects=objects.length,nCachedObjects=this.nCachedObjects_,bindingsForPath=new Array(nObjects);index=bindings.length;indicesByPath[path]=index;paths.push(path);parsedPaths.push(parsedPath);bindings.push(bindingsForPath);for(let i=nCachedObjects,n=objects.length;i!==n;++i){const object=objects[i];bindingsForPath[i]=new PropertyBinding(object,path,parsedPath);}return bindingsForPath;},unsubscribe_:function(path){// tells the group to forget about a property path and no longer\n// update the array previously obtained with 'subscribe_'\nconst indicesByPath=this._bindingsIndicesByPath,index=indicesByPath[path];if(index!==undefined){const paths=this._paths,parsedPaths=this._parsedPaths,bindings=this._bindings,lastBindingsIndex=bindings.length-1,lastBindings=bindings[lastBindingsIndex],lastBindingsPath=path[lastBindingsIndex];indicesByPath[lastBindingsPath]=index;bindings[index]=lastBindings;bindings.pop();parsedPaths[index]=parsedPaths[lastBindingsIndex];parsedPaths.pop();paths[index]=paths[lastBindingsIndex];paths.pop();}}});class AnimationAction{constructor(mixer,clip,localRoot=null,blendMode=clip.blendMode){this._mixer=mixer;this._clip=clip;this._localRoot=localRoot;this.blendMode=blendMode;const tracks=clip.tracks,nTracks=tracks.length,interpolants=new Array(nTracks);const interpolantSettings={endingStart:ZeroCurvatureEnding,endingEnd:ZeroCurvatureEnding};for(let i=0;i!==nTracks;++i){const interpolant=tracks[i].createInterpolant(null);interpolants[i]=interpolant;interpolant.settings=interpolantSettings;}this._interpolantSettings=interpolantSettings;this._interpolants=interpolants;// bound by the mixer\n// inside: PropertyMixer (managed by the mixer)\nthis._propertyBindings=new Array(nTracks);this._cacheIndex=null;// for the memory manager\nthis._byClipCacheIndex=null;// for the memory manager\nthis._timeScaleInterpolant=null;this._weightInterpolant=null;this.loop=LoopRepeat;this._loopCount=-1;// global mixer time when the action is to be started\n// it's set back to 'null' upon start of the action\nthis._startTime=null;// scaled local time of the action\n// gets clamped or wrapped to 0..clip.duration according to loop\nthis.time=0;this.timeScale=1;this._effectiveTimeScale=1;this.weight=1;this._effectiveWeight=1;this.repetitions=Infinity;// no. of repetitions when looping\nthis.paused=false;// true -> zero effective time scale\nthis.enabled=true;// false -> zero effective weight\nthis.clampWhenFinished=false;// keep feeding the last frame?\nthis.zeroSlopeAtStart=true;// for smooth interpolation w/o separate\nthis.zeroSlopeAtEnd=true;// clips for start, loop and end\n}// State & Scheduling\nplay(){this._mixer._activateAction(this);return this;}stop(){this._mixer._deactivateAction(this);return this.reset();}reset(){this.paused=false;this.enabled=true;this.time=0;// restart clip\nthis._loopCount=-1;// forget previous loops\nthis._startTime=null;// forget scheduling\nreturn this.stopFading().stopWarping();}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this);}// return true when play has been called\nisScheduled(){return this._mixer._isActiveAction(this);}startAt(time){this._startTime=time;return this;}setLoop(mode,repetitions){this.loop=mode;this.repetitions=repetitions;return this;}// Weight\n// set the weight stopping any scheduled fading\n// although .enabled = false yields an effective weight of zero, this\n// method does *not* change .enabled, because it would be confusing\nsetEffectiveWeight(weight){this.weight=weight;// note: same logic as when updated at runtime\nthis._effectiveWeight=this.enabled?weight:0;return this.stopFading();}// return the weight considering fading and .enabled\ngetEffectiveWeight(){return this._effectiveWeight;}fadeIn(duration){return this._scheduleFading(duration,0,1);}fadeOut(duration){return this._scheduleFading(duration,1,0);}crossFadeFrom(fadeOutAction,duration,warp){fadeOutAction.fadeOut(duration);this.fadeIn(duration);if(warp){const fadeInDuration=this._clip.duration,fadeOutDuration=fadeOutAction._clip.duration,startEndRatio=fadeOutDuration/fadeInDuration,endStartRatio=fadeInDuration/fadeOutDuration;fadeOutAction.warp(1.0,startEndRatio,duration);this.warp(endStartRatio,1.0,duration);}return this;}crossFadeTo(fadeInAction,duration,warp){return fadeInAction.crossFadeFrom(this,duration,warp);}stopFading(){const weightInterpolant=this._weightInterpolant;if(weightInterpolant!==null){this._weightInterpolant=null;this._mixer._takeBackControlInterpolant(weightInterpolant);}return this;}// Time Scale Control\n// set the time scale stopping any scheduled warping\n// although .paused = true yields an effective time scale of zero, this\n// method does *not* change .paused, because it would be confusing\nsetEffectiveTimeScale(timeScale){this.timeScale=timeScale;this._effectiveTimeScale=this.paused?0:timeScale;return this.stopWarping();}// return the time scale considering warping and .paused\ngetEffectiveTimeScale(){return this._effectiveTimeScale;}setDuration(duration){this.timeScale=this._clip.duration/duration;return this.stopWarping();}syncWith(action){this.time=action.time;this.timeScale=action.timeScale;return this.stopWarping();}halt(duration){return this.warp(this._effectiveTimeScale,0,duration);}warp(startTimeScale,endTimeScale,duration){const mixer=this._mixer,now=mixer.time,timeScale=this.timeScale;let interpolant=this._timeScaleInterpolant;if(interpolant===null){interpolant=mixer._lendControlInterpolant();this._timeScaleInterpolant=interpolant;}const times=interpolant.parameterPositions,values=interpolant.sampleValues;times[0]=now;times[1]=now+duration;values[0]=startTimeScale/timeScale;values[1]=endTimeScale/timeScale;return this;}stopWarping(){const timeScaleInterpolant=this._timeScaleInterpolant;if(timeScaleInterpolant!==null){this._timeScaleInterpolant=null;this._mixer._takeBackControlInterpolant(timeScaleInterpolant);}return this;}// Object Accessors\ngetMixer(){return this._mixer;}getClip(){return this._clip;}getRoot(){return this._localRoot||this._mixer._root;}// Interna\n_update(time,deltaTime,timeDirection,accuIndex){// called by the mixer\nif(!this.enabled){// call ._updateWeight() to update ._effectiveWeight\nthis._updateWeight(time);return;}const startTime=this._startTime;if(startTime!==null){// check for scheduled start of action\nconst timeRunning=(time-startTime)*timeDirection;if(timeRunning<0||timeDirection===0){return;// yet to come / don't decide when delta = 0\n}// start\nthis._startTime=null;// unschedule\ndeltaTime=timeDirection*timeRunning;}// apply time scale and advance time\ndeltaTime*=this._updateTimeScale(time);const clipTime=this._updateTime(deltaTime);// note: _updateTime may disable the action resulting in\n// an effective weight of 0\nconst weight=this._updateWeight(time);if(weight>0){const interpolants=this._interpolants;const propertyMixers=this._propertyBindings;switch(this.blendMode){case AdditiveAnimationBlendMode:for(let j=0,m=interpolants.length;j!==m;++j){interpolants[j].evaluate(clipTime);propertyMixers[j].accumulateAdditive(weight);}break;case NormalAnimationBlendMode:default:for(let j=0,m=interpolants.length;j!==m;++j){interpolants[j].evaluate(clipTime);propertyMixers[j].accumulate(accuIndex,weight);}}}}_updateWeight(time){let weight=0;if(this.enabled){weight=this.weight;const interpolant=this._weightInterpolant;if(interpolant!==null){const interpolantValue=interpolant.evaluate(time)[0];weight*=interpolantValue;if(time>interpolant.parameterPositions[1]){this.stopFading();if(interpolantValue===0){// faded out, disable\nthis.enabled=false;}}}}this._effectiveWeight=weight;return weight;}_updateTimeScale(time){let timeScale=0;if(!this.paused){timeScale=this.timeScale;const interpolant=this._timeScaleInterpolant;if(interpolant!==null){const interpolantValue=interpolant.evaluate(time)[0];timeScale*=interpolantValue;if(time>interpolant.parameterPositions[1]){this.stopWarping();if(timeScale===0){// motion has halted, pause\nthis.paused=true;}else{// warp done - apply final time scale\nthis.timeScale=timeScale;}}}}this._effectiveTimeScale=timeScale;return timeScale;}_updateTime(deltaTime){const duration=this._clip.duration;const loop=this.loop;let time=this.time+deltaTime;let loopCount=this._loopCount;const pingPong=loop===LoopPingPong;if(deltaTime===0){if(loopCount===-1)return time;return pingPong&&(loopCount&1)===1?duration-time:time;}if(loop===LoopOnce){if(loopCount===-1){// just started\nthis._loopCount=0;this._setEndings(true,true,false);}handle_stop:{if(time>=duration){time=duration;}else if(time<0){time=0;}else{this.time=time;break handle_stop;}if(this.clampWhenFinished)this.paused=true;else this.enabled=false;this.time=time;this._mixer.dispatchEvent({type:'finished',action:this,direction:deltaTime<0?-1:1});}}else{// repetitive Repeat or PingPong\nif(loopCount===-1){// just started\nif(deltaTime>=0){loopCount=0;this._setEndings(true,this.repetitions===0,pingPong);}else{// when looping in reverse direction, the initial\n// transition through zero counts as a repetition,\n// so leave loopCount at -1\nthis._setEndings(this.repetitions===0,true,pingPong);}}if(time>=duration||time<0){// wrap around\nconst loopDelta=Math.floor(time/duration);// signed\ntime-=duration*loopDelta;loopCount+=Math.abs(loopDelta);const pending=this.repetitions-loopCount;if(pending<=0){// have to stop (switch state, clamp time, fire event)\nif(this.clampWhenFinished)this.paused=true;else this.enabled=false;time=deltaTime>0?duration:0;this.time=time;this._mixer.dispatchEvent({type:'finished',action:this,direction:deltaTime>0?1:-1});}else{// keep running\nif(pending===1){// entering the last round\nconst atStart=deltaTime<0;this._setEndings(atStart,!atStart,pingPong);}else{this._setEndings(false,false,pingPong);}this._loopCount=loopCount;this.time=time;this._mixer.dispatchEvent({type:'loop',action:this,loopDelta:loopDelta});}}else{this.time=time;}if(pingPong&&(loopCount&1)===1){// invert time for the \"pong round\"\nreturn duration-time;}}return time;}_setEndings(atStart,atEnd,pingPong){const settings=this._interpolantSettings;if(pingPong){settings.endingStart=ZeroSlopeEnding;settings.endingEnd=ZeroSlopeEnding;}else{// assuming for LoopOnce atStart == atEnd == true\nif(atStart){settings.endingStart=this.zeroSlopeAtStart?ZeroSlopeEnding:ZeroCurvatureEnding;}else{settings.endingStart=WrapAroundEnding;}if(atEnd){settings.endingEnd=this.zeroSlopeAtEnd?ZeroSlopeEnding:ZeroCurvatureEnding;}else{settings.endingEnd=WrapAroundEnding;}}}_scheduleFading(duration,weightNow,weightThen){const mixer=this._mixer,now=mixer.time;let interpolant=this._weightInterpolant;if(interpolant===null){interpolant=mixer._lendControlInterpolant();this._weightInterpolant=interpolant;}const times=interpolant.parameterPositions,values=interpolant.sampleValues;times[0]=now;values[0]=weightNow;times[1]=now+duration;values[1]=weightThen;return this;}}function AnimationMixer(root){this._root=root;this._initMemoryManager();this._accuIndex=0;this.time=0;this.timeScale=1.0;}AnimationMixer.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:AnimationMixer,_bindAction:function(action,prototypeAction){const root=action._localRoot||this._root,tracks=action._clip.tracks,nTracks=tracks.length,bindings=action._propertyBindings,interpolants=action._interpolants,rootUuid=root.uuid,bindingsByRoot=this._bindingsByRootAndName;let bindingsByName=bindingsByRoot[rootUuid];if(bindingsByName===undefined){bindingsByName={};bindingsByRoot[rootUuid]=bindingsByName;}for(let i=0;i!==nTracks;++i){const track=tracks[i],trackName=track.name;let binding=bindingsByName[trackName];if(binding!==undefined){bindings[i]=binding;}else{binding=bindings[i];if(binding!==undefined){// existing binding, make sure the cache knows\nif(binding._cacheIndex===null){++binding.referenceCount;this._addInactiveBinding(binding,rootUuid,trackName);}continue;}const path=prototypeAction&&prototypeAction._propertyBindings[i].binding.parsedPath;binding=new PropertyMixer(PropertyBinding.create(root,trackName,path),track.ValueTypeName,track.getValueSize());++binding.referenceCount;this._addInactiveBinding(binding,rootUuid,trackName);bindings[i]=binding;}interpolants[i].resultBuffer=binding.buffer;}},_activateAction:function(action){if(!this._isActiveAction(action)){if(action._cacheIndex===null){// this action has been forgotten by the cache, but the user\n// appears to be still using it -> rebind\nconst rootUuid=(action._localRoot||this._root).uuid,clipUuid=action._clip.uuid,actionsForClip=this._actionsByClip[clipUuid];this._bindAction(action,actionsForClip&&actionsForClip.knownActions[0]);this._addInactiveAction(action,clipUuid,rootUuid);}const bindings=action._propertyBindings;// increment reference counts / sort out state\nfor(let i=0,n=bindings.length;i!==n;++i){const binding=bindings[i];if(binding.useCount++===0){this._lendBinding(binding);binding.saveOriginalState();}}this._lendAction(action);}},_deactivateAction:function(action){if(this._isActiveAction(action)){const bindings=action._propertyBindings;// decrement reference counts / sort out state\nfor(let i=0,n=bindings.length;i!==n;++i){const binding=bindings[i];if(--binding.useCount===0){binding.restoreOriginalState();this._takeBackBinding(binding);}}this._takeBackAction(action);}},// Memory manager\n_initMemoryManager:function(){this._actions=[];// 'nActiveActions' followed by inactive ones\nthis._nActiveActions=0;this._actionsByClip={};// inside:\n// {\n// \tknownActions: Array< AnimationAction > - used as prototypes\n// \tactionByRoot: AnimationAction - lookup\n// }\nthis._bindings=[];// 'nActiveBindings' followed by inactive ones\nthis._nActiveBindings=0;this._bindingsByRootAndName={};// inside: Map< name, PropertyMixer >\nthis._controlInterpolants=[];// same game as above\nthis._nActiveControlInterpolants=0;const scope=this;this.stats={actions:{get total(){return scope._actions.length;},get inUse(){return scope._nActiveActions;}},bindings:{get total(){return scope._bindings.length;},get inUse(){return scope._nActiveBindings;}},controlInterpolants:{get total(){return scope._controlInterpolants.length;},get inUse(){return scope._nActiveControlInterpolants;}}};},// Memory management for AnimationAction objects\n_isActiveAction:function(action){const index=action._cacheIndex;return index!==null&&index<this._nActiveActions;},_addInactiveAction:function(action,clipUuid,rootUuid){const actions=this._actions,actionsByClip=this._actionsByClip;let actionsForClip=actionsByClip[clipUuid];if(actionsForClip===undefined){actionsForClip={knownActions:[action],actionByRoot:{}};action._byClipCacheIndex=0;actionsByClip[clipUuid]=actionsForClip;}else{const knownActions=actionsForClip.knownActions;action._byClipCacheIndex=knownActions.length;knownActions.push(action);}action._cacheIndex=actions.length;actions.push(action);actionsForClip.actionByRoot[rootUuid]=action;},_removeInactiveAction:function(action){const actions=this._actions,lastInactiveAction=actions[actions.length-1],cacheIndex=action._cacheIndex;lastInactiveAction._cacheIndex=cacheIndex;actions[cacheIndex]=lastInactiveAction;actions.pop();action._cacheIndex=null;const clipUuid=action._clip.uuid,actionsByClip=this._actionsByClip,actionsForClip=actionsByClip[clipUuid],knownActionsForClip=actionsForClip.knownActions,lastKnownAction=knownActionsForClip[knownActionsForClip.length-1],byClipCacheIndex=action._byClipCacheIndex;lastKnownAction._byClipCacheIndex=byClipCacheIndex;knownActionsForClip[byClipCacheIndex]=lastKnownAction;knownActionsForClip.pop();action._byClipCacheIndex=null;const actionByRoot=actionsForClip.actionByRoot,rootUuid=(action._localRoot||this._root).uuid;delete actionByRoot[rootUuid];if(knownActionsForClip.length===0){delete actionsByClip[clipUuid];}this._removeInactiveBindingsForAction(action);},_removeInactiveBindingsForAction:function(action){const bindings=action._propertyBindings;for(let i=0,n=bindings.length;i!==n;++i){const binding=bindings[i];if(--binding.referenceCount===0){this._removeInactiveBinding(binding);}}},_lendAction:function(action){// [ active actions |  inactive actions  ]\n// [  active actions >| inactive actions ]\n//                 s        a\n//                  <-swap->\n//                 a        s\nconst actions=this._actions,prevIndex=action._cacheIndex,lastActiveIndex=this._nActiveActions++,firstInactiveAction=actions[lastActiveIndex];action._cacheIndex=lastActiveIndex;actions[lastActiveIndex]=action;firstInactiveAction._cacheIndex=prevIndex;actions[prevIndex]=firstInactiveAction;},_takeBackAction:function(action){// [  active actions  | inactive actions ]\n// [ active actions |< inactive actions  ]\n//        a        s\n//         <-swap->\n//        s        a\nconst actions=this._actions,prevIndex=action._cacheIndex,firstInactiveIndex=--this._nActiveActions,lastActiveAction=actions[firstInactiveIndex];action._cacheIndex=firstInactiveIndex;actions[firstInactiveIndex]=action;lastActiveAction._cacheIndex=prevIndex;actions[prevIndex]=lastActiveAction;},// Memory management for PropertyMixer objects\n_addInactiveBinding:function(binding,rootUuid,trackName){const bindingsByRoot=this._bindingsByRootAndName,bindings=this._bindings;let bindingByName=bindingsByRoot[rootUuid];if(bindingByName===undefined){bindingByName={};bindingsByRoot[rootUuid]=bindingByName;}bindingByName[trackName]=binding;binding._cacheIndex=bindings.length;bindings.push(binding);},_removeInactiveBinding:function(binding){const bindings=this._bindings,propBinding=binding.binding,rootUuid=propBinding.rootNode.uuid,trackName=propBinding.path,bindingsByRoot=this._bindingsByRootAndName,bindingByName=bindingsByRoot[rootUuid],lastInactiveBinding=bindings[bindings.length-1],cacheIndex=binding._cacheIndex;lastInactiveBinding._cacheIndex=cacheIndex;bindings[cacheIndex]=lastInactiveBinding;bindings.pop();delete bindingByName[trackName];if(Object.keys(bindingByName).length===0){delete bindingsByRoot[rootUuid];}},_lendBinding:function(binding){const bindings=this._bindings,prevIndex=binding._cacheIndex,lastActiveIndex=this._nActiveBindings++,firstInactiveBinding=bindings[lastActiveIndex];binding._cacheIndex=lastActiveIndex;bindings[lastActiveIndex]=binding;firstInactiveBinding._cacheIndex=prevIndex;bindings[prevIndex]=firstInactiveBinding;},_takeBackBinding:function(binding){const bindings=this._bindings,prevIndex=binding._cacheIndex,firstInactiveIndex=--this._nActiveBindings,lastActiveBinding=bindings[firstInactiveIndex];binding._cacheIndex=firstInactiveIndex;bindings[firstInactiveIndex]=binding;lastActiveBinding._cacheIndex=prevIndex;bindings[prevIndex]=lastActiveBinding;},// Memory management of Interpolants for weight and time scale\n_lendControlInterpolant:function(){const interpolants=this._controlInterpolants,lastActiveIndex=this._nActiveControlInterpolants++;let interpolant=interpolants[lastActiveIndex];if(interpolant===undefined){interpolant=new LinearInterpolant(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer);interpolant.__cacheIndex=lastActiveIndex;interpolants[lastActiveIndex]=interpolant;}return interpolant;},_takeBackControlInterpolant:function(interpolant){const interpolants=this._controlInterpolants,prevIndex=interpolant.__cacheIndex,firstInactiveIndex=--this._nActiveControlInterpolants,lastActiveInterpolant=interpolants[firstInactiveIndex];interpolant.__cacheIndex=firstInactiveIndex;interpolants[firstInactiveIndex]=interpolant;lastActiveInterpolant.__cacheIndex=prevIndex;interpolants[prevIndex]=lastActiveInterpolant;},_controlInterpolantsResultBuffer:new Float32Array(1),// return an action for a clip optionally using a custom root target\n// object (this method allocates a lot of dynamic memory in case a\n// previously unknown clip/root combination is specified)\nclipAction:function(clip,optionalRoot,blendMode){const root=optionalRoot||this._root,rootUuid=root.uuid;let clipObject=typeof clip==='string'?AnimationClip.findByName(root,clip):clip;const clipUuid=clipObject!==null?clipObject.uuid:clip;const actionsForClip=this._actionsByClip[clipUuid];let prototypeAction=null;if(blendMode===undefined){if(clipObject!==null){blendMode=clipObject.blendMode;}else{blendMode=NormalAnimationBlendMode;}}if(actionsForClip!==undefined){const existingAction=actionsForClip.actionByRoot[rootUuid];if(existingAction!==undefined&&existingAction.blendMode===blendMode){return existingAction;}// we know the clip, so we don't have to parse all\n// the bindings again but can just copy\nprototypeAction=actionsForClip.knownActions[0];// also, take the clip from the prototype action\nif(clipObject===null)clipObject=prototypeAction._clip;}// clip must be known when specified via string\nif(clipObject===null)return null;// allocate all resources required to run it\nconst newAction=new AnimationAction(this,clipObject,optionalRoot,blendMode);this._bindAction(newAction,prototypeAction);// and make the action known to the memory manager\nthis._addInactiveAction(newAction,clipUuid,rootUuid);return newAction;},// get an existing action\nexistingAction:function(clip,optionalRoot){const root=optionalRoot||this._root,rootUuid=root.uuid,clipObject=typeof clip==='string'?AnimationClip.findByName(root,clip):clip,clipUuid=clipObject?clipObject.uuid:clip,actionsForClip=this._actionsByClip[clipUuid];if(actionsForClip!==undefined){return actionsForClip.actionByRoot[rootUuid]||null;}return null;},// deactivates all previously scheduled actions\nstopAllAction:function(){const actions=this._actions,nActions=this._nActiveActions;for(let i=nActions-1;i>=0;--i){actions[i].stop();}return this;},// advance the time and update apply the animation\nupdate:function(deltaTime){deltaTime*=this.timeScale;const actions=this._actions,nActions=this._nActiveActions,time=this.time+=deltaTime,timeDirection=Math.sign(deltaTime),accuIndex=this._accuIndex^=1;// run active actions\nfor(let i=0;i!==nActions;++i){const action=actions[i];action._update(time,deltaTime,timeDirection,accuIndex);}// update scene graph\nconst bindings=this._bindings,nBindings=this._nActiveBindings;for(let i=0;i!==nBindings;++i){bindings[i].apply(accuIndex);}return this;},// Allows you to seek to a specific time in an animation.\nsetTime:function(timeInSeconds){this.time=0;// Zero out time attribute for AnimationMixer object;\nfor(let i=0;i<this._actions.length;i++){this._actions[i].time=0;// Zero out time attribute for all associated AnimationAction objects.\n}return this.update(timeInSeconds);// Update used to set exact time. Returns \"this\" AnimationMixer object.\n},// return this mixer's root target object\ngetRoot:function(){return this._root;},// free all resources specific to a particular clip\nuncacheClip:function(clip){const actions=this._actions,clipUuid=clip.uuid,actionsByClip=this._actionsByClip,actionsForClip=actionsByClip[clipUuid];if(actionsForClip!==undefined){// note: just calling _removeInactiveAction would mess up the\n// iteration state and also require updating the state we can\n// just throw away\nconst actionsToRemove=actionsForClip.knownActions;for(let i=0,n=actionsToRemove.length;i!==n;++i){const action=actionsToRemove[i];this._deactivateAction(action);const cacheIndex=action._cacheIndex,lastInactiveAction=actions[actions.length-1];action._cacheIndex=null;action._byClipCacheIndex=null;lastInactiveAction._cacheIndex=cacheIndex;actions[cacheIndex]=lastInactiveAction;actions.pop();this._removeInactiveBindingsForAction(action);}delete actionsByClip[clipUuid];}},// free all resources specific to a particular root target object\nuncacheRoot:function(root){const rootUuid=root.uuid,actionsByClip=this._actionsByClip;for(const clipUuid in actionsByClip){const actionByRoot=actionsByClip[clipUuid].actionByRoot,action=actionByRoot[rootUuid];if(action!==undefined){this._deactivateAction(action);this._removeInactiveAction(action);}}const bindingsByRoot=this._bindingsByRootAndName,bindingByName=bindingsByRoot[rootUuid];if(bindingByName!==undefined){for(const trackName in bindingByName){const binding=bindingByName[trackName];binding.restoreOriginalState();this._removeInactiveBinding(binding);}}},// remove a targeted clip from the cache\nuncacheAction:function(clip,optionalRoot){const action=this.existingAction(clip,optionalRoot);if(action!==null){this._deactivateAction(action);this._removeInactiveAction(action);}}});class Uniform{constructor(value){if(typeof value==='string'){console.warn('THREE.Uniform: Type parameter is no longer needed.');value=arguments[1];}this.value=value;}clone(){return new Uniform(this.value.clone===undefined?this.value:this.value.clone());}}function InstancedInterleavedBuffer(array,stride,meshPerAttribute){InterleavedBuffer.call(this,array,stride);this.meshPerAttribute=meshPerAttribute||1;}InstancedInterleavedBuffer.prototype=Object.assign(Object.create(InterleavedBuffer.prototype),{constructor:InstancedInterleavedBuffer,isInstancedInterleavedBuffer:true,copy:function(source){InterleavedBuffer.prototype.copy.call(this,source);this.meshPerAttribute=source.meshPerAttribute;return this;},clone:function(data){const ib=InterleavedBuffer.prototype.clone.call(this,data);ib.meshPerAttribute=this.meshPerAttribute;return ib;},toJSON:function(data){const json=InterleavedBuffer.prototype.toJSON.call(this,data);json.isInstancedInterleavedBuffer=true;json.meshPerAttribute=this.meshPerAttribute;return json;}});function GLBufferAttribute(buffer,type,itemSize,elementSize,count){this.buffer=buffer;this.type=type;this.itemSize=itemSize;this.elementSize=elementSize;this.count=count;this.version=0;}Object.defineProperty(GLBufferAttribute.prototype,'needsUpdate',{set:function(value){if(value===true)this.version++;}});Object.assign(GLBufferAttribute.prototype,{isGLBufferAttribute:true,setBuffer:function(buffer){this.buffer=buffer;return this;},setType:function(type,elementSize){this.type=type;this.elementSize=elementSize;return this;},setItemSize:function(itemSize){this.itemSize=itemSize;return this;},setCount:function(count){this.count=count;return this;}});function Raycaster(origin,direction,near,far){this.ray=new Ray(origin,direction);// direction is assumed to be normalized (for accurate distance calculations)\nthis.near=near||0;this.far=far||Infinity;this.camera=null;this.layers=new Layers();this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}};Object.defineProperties(this.params,{PointCloud:{get:function(){console.warn('THREE.Raycaster: params.PointCloud has been renamed to params.Points.');return this.Points;}}});}function ascSort(a,b){return a.distance-b.distance;}function intersectObject(object,raycaster,intersects,recursive){if(object.layers.test(raycaster.layers)){object.raycast(raycaster,intersects);}if(recursive===true){const children=object.children;for(let i=0,l=children.length;i<l;i++){intersectObject(children[i],raycaster,intersects,true);}}}Object.assign(Raycaster.prototype,{set:function(origin,direction){// direction is assumed to be normalized (for accurate distance calculations)\nthis.ray.set(origin,direction);},setFromCamera:function(coords,camera){if(camera&&camera.isPerspectiveCamera){this.ray.origin.setFromMatrixPosition(camera.matrixWorld);this.ray.direction.set(coords.x,coords.y,0.5).unproject(camera).sub(this.ray.origin).normalize();this.camera=camera;}else if(camera&&camera.isOrthographicCamera){this.ray.origin.set(coords.x,coords.y,(camera.near+camera.far)/(camera.near-camera.far)).unproject(camera);// set origin in plane of camera\nthis.ray.direction.set(0,0,-1).transformDirection(camera.matrixWorld);this.camera=camera;}else{console.error('THREE.Raycaster: Unsupported camera type: '+camera.type);}},intersectObject:function(object,recursive,optionalTarget){const intersects=optionalTarget||[];intersectObject(object,this,intersects,recursive);intersects.sort(ascSort);return intersects;},intersectObjects:function(objects,recursive,optionalTarget){const intersects=optionalTarget||[];if(Array.isArray(objects)===false){console.warn('THREE.Raycaster.intersectObjects: objects is not an Array.');return intersects;}for(let i=0,l=objects.length;i<l;i++){intersectObject(objects[i],this,intersects,recursive);}intersects.sort(ascSort);return intersects;}});/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axis.\n */class Spherical{constructor(radius=1,phi=0,theta=0){this.radius=radius;this.phi=phi;// polar angle\nthis.theta=theta;// azimuthal angle\nreturn this;}set(radius,phi,theta){this.radius=radius;this.phi=phi;this.theta=theta;return this;}clone(){return new this.constructor().copy(this);}copy(other){this.radius=other.radius;this.phi=other.phi;this.theta=other.theta;return this;}// restrict phi to be betwee EPS and PI-EPS\nmakeSafe(){const EPS=0.000001;this.phi=Math.max(EPS,Math.min(Math.PI-EPS,this.phi));return this;}setFromVector3(v){return this.setFromCartesianCoords(v.x,v.y,v.z);}setFromCartesianCoords(x,y,z){this.radius=Math.sqrt(x*x+y*y+z*z);if(this.radius===0){this.theta=0;this.phi=0;}else{this.theta=Math.atan2(x,z);this.phi=Math.acos(MathUtils.clamp(y/this.radius,-1,1));}return this;}}/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */class Cylindrical{constructor(radius,theta,y){this.radius=radius!==undefined?radius:1.0;// distance from the origin to a point in the x-z plane\nthis.theta=theta!==undefined?theta:0;// counterclockwise angle in the x-z plane measured in radians from the positive z-axis\nthis.y=y!==undefined?y:0;// height above the x-z plane\nreturn this;}set(radius,theta,y){this.radius=radius;this.theta=theta;this.y=y;return this;}clone(){return new this.constructor().copy(this);}copy(other){this.radius=other.radius;this.theta=other.theta;this.y=other.y;return this;}setFromVector3(v){return this.setFromCartesianCoords(v.x,v.y,v.z);}setFromCartesianCoords(x,y,z){this.radius=Math.sqrt(x*x+z*z);this.theta=Math.atan2(x,z);this.y=y;return this;}}const _vector$8=/*@__PURE__*/new Vector2();class Box2{constructor(min,max){Object.defineProperty(this,'isBox2',{value:true});this.min=min!==undefined?min:new Vector2(+Infinity,+Infinity);this.max=max!==undefined?max:new Vector2(-Infinity,-Infinity);}set(min,max){this.min.copy(min);this.max.copy(max);return this;}setFromPoints(points){this.makeEmpty();for(let i=0,il=points.length;i<il;i++){this.expandByPoint(points[i]);}return this;}setFromCenterAndSize(center,size){const halfSize=_vector$8.copy(size).multiplyScalar(0.5);this.min.copy(center).sub(halfSize);this.max.copy(center).add(halfSize);return this;}clone(){return new this.constructor().copy(this);}copy(box){this.min.copy(box.min);this.max.copy(box.max);return this;}makeEmpty(){this.min.x=this.min.y=+Infinity;this.max.x=this.max.y=-Infinity;return this;}isEmpty(){// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\nreturn this.max.x<this.min.x||this.max.y<this.min.y;}getCenter(target){if(target===undefined){console.warn('THREE.Box2: .getCenter() target is now required');target=new Vector2();}return this.isEmpty()?target.set(0,0):target.addVectors(this.min,this.max).multiplyScalar(0.5);}getSize(target){if(target===undefined){console.warn('THREE.Box2: .getSize() target is now required');target=new Vector2();}return this.isEmpty()?target.set(0,0):target.subVectors(this.max,this.min);}expandByPoint(point){this.min.min(point);this.max.max(point);return this;}expandByVector(vector){this.min.sub(vector);this.max.add(vector);return this;}expandByScalar(scalar){this.min.addScalar(-scalar);this.max.addScalar(scalar);return this;}containsPoint(point){return point.x<this.min.x||point.x>this.max.x||point.y<this.min.y||point.y>this.max.y?false:true;}containsBox(box){return this.min.x<=box.min.x&&box.max.x<=this.max.x&&this.min.y<=box.min.y&&box.max.y<=this.max.y;}getParameter(point,target){// This can potentially have a divide by zero if the box\n// has a size dimension of 0.\nif(target===undefined){console.warn('THREE.Box2: .getParameter() target is now required');target=new Vector2();}return target.set((point.x-this.min.x)/(this.max.x-this.min.x),(point.y-this.min.y)/(this.max.y-this.min.y));}intersectsBox(box){// using 4 splitting planes to rule out intersections\nreturn box.max.x<this.min.x||box.min.x>this.max.x||box.max.y<this.min.y||box.min.y>this.max.y?false:true;}clampPoint(point,target){if(target===undefined){console.warn('THREE.Box2: .clampPoint() target is now required');target=new Vector2();}return target.copy(point).clamp(this.min,this.max);}distanceToPoint(point){const clampedPoint=_vector$8.copy(point).clamp(this.min,this.max);return clampedPoint.sub(point).length();}intersect(box){this.min.max(box.min);this.max.min(box.max);return this;}union(box){this.min.min(box.min);this.max.max(box.max);return this;}translate(offset){this.min.add(offset);this.max.add(offset);return this;}equals(box){return box.min.equals(this.min)&&box.max.equals(this.max);}}const _startP=/*@__PURE__*/new Vector3();const _startEnd=/*@__PURE__*/new Vector3();class Line3{constructor(start,end){this.start=start!==undefined?start:new Vector3();this.end=end!==undefined?end:new Vector3();}set(start,end){this.start.copy(start);this.end.copy(end);return this;}clone(){return new this.constructor().copy(this);}copy(line){this.start.copy(line.start);this.end.copy(line.end);return this;}getCenter(target){if(target===undefined){console.warn('THREE.Line3: .getCenter() target is now required');target=new Vector3();}return target.addVectors(this.start,this.end).multiplyScalar(0.5);}delta(target){if(target===undefined){console.warn('THREE.Line3: .delta() target is now required');target=new Vector3();}return target.subVectors(this.end,this.start);}distanceSq(){return this.start.distanceToSquared(this.end);}distance(){return this.start.distanceTo(this.end);}at(t,target){if(target===undefined){console.warn('THREE.Line3: .at() target is now required');target=new Vector3();}return this.delta(target).multiplyScalar(t).add(this.start);}closestPointToPointParameter(point,clampToLine){_startP.subVectors(point,this.start);_startEnd.subVectors(this.end,this.start);const startEnd2=_startEnd.dot(_startEnd);const startEnd_startP=_startEnd.dot(_startP);let t=startEnd_startP/startEnd2;if(clampToLine){t=MathUtils.clamp(t,0,1);}return t;}closestPointToPoint(point,clampToLine,target){const t=this.closestPointToPointParameter(point,clampToLine);if(target===undefined){console.warn('THREE.Line3: .closestPointToPoint() target is now required');target=new Vector3();}return this.delta(target).multiplyScalar(t).add(this.start);}applyMatrix4(matrix){this.start.applyMatrix4(matrix);this.end.applyMatrix4(matrix);return this;}equals(line){return line.start.equals(this.start)&&line.end.equals(this.end);}}function ImmediateRenderObject(material){Object3D.call(this);this.material=material;this.render=function()/* renderCallback */{};this.hasPositions=false;this.hasNormals=false;this.hasColors=false;this.hasUvs=false;this.positionArray=null;this.normalArray=null;this.colorArray=null;this.uvArray=null;this.count=0;}ImmediateRenderObject.prototype=Object.create(Object3D.prototype);ImmediateRenderObject.prototype.constructor=ImmediateRenderObject;ImmediateRenderObject.prototype.isImmediateRenderObject=true;const _vector$9=/*@__PURE__*/new Vector3();class SpotLightHelper extends Object3D{constructor(light,color){super();this.light=light;this.light.updateMatrixWorld();this.matrix=light.matrixWorld;this.matrixAutoUpdate=false;this.color=color;const geometry=new BufferGeometry();const positions=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let i=0,j=1,l=32;i<l;i++,j++){const p1=i/l*Math.PI*2;const p2=j/l*Math.PI*2;positions.push(Math.cos(p1),Math.sin(p1),1,Math.cos(p2),Math.sin(p2),1);}geometry.setAttribute('position',new Float32BufferAttribute(positions,3));const material=new LineBasicMaterial({fog:false,toneMapped:false});this.cone=new LineSegments(geometry,material);this.add(this.cone);this.update();}dispose(){this.cone.geometry.dispose();this.cone.material.dispose();}update(){this.light.updateMatrixWorld();const coneLength=this.light.distance?this.light.distance:1000;const coneWidth=coneLength*Math.tan(this.light.angle);this.cone.scale.set(coneWidth,coneWidth,coneLength);_vector$9.setFromMatrixPosition(this.light.target.matrixWorld);this.cone.lookAt(_vector$9);if(this.color!==undefined){this.cone.material.color.set(this.color);}else{this.cone.material.color.copy(this.light.color);}}}const _vector$a=/*@__PURE__*/new Vector3();const _boneMatrix=/*@__PURE__*/new Matrix4();const _matrixWorldInv=/*@__PURE__*/new Matrix4();class SkeletonHelper extends LineSegments{constructor(object){const bones=getBoneList(object);const geometry=new BufferGeometry();const vertices=[];const colors=[];const color1=new Color(0,0,1);const color2=new Color(0,1,0);for(let i=0;i<bones.length;i++){const bone=bones[i];if(bone.parent&&bone.parent.isBone){vertices.push(0,0,0);vertices.push(0,0,0);colors.push(color1.r,color1.g,color1.b);colors.push(color2.r,color2.g,color2.b);}}geometry.setAttribute('position',new Float32BufferAttribute(vertices,3));geometry.setAttribute('color',new Float32BufferAttribute(colors,3));const material=new LineBasicMaterial({vertexColors:true,depthTest:false,depthWrite:false,toneMapped:false,transparent:true});super(geometry,material);this.type='SkeletonHelper';this.isSkeletonHelper=true;this.root=object;this.bones=bones;this.matrix=object.matrixWorld;this.matrixAutoUpdate=false;}updateMatrixWorld(force){const bones=this.bones;const geometry=this.geometry;const position=geometry.getAttribute('position');_matrixWorldInv.copy(this.root.matrixWorld).invert();for(let i=0,j=0;i<bones.length;i++){const bone=bones[i];if(bone.parent&&bone.parent.isBone){_boneMatrix.multiplyMatrices(_matrixWorldInv,bone.matrixWorld);_vector$a.setFromMatrixPosition(_boneMatrix);position.setXYZ(j,_vector$a.x,_vector$a.y,_vector$a.z);_boneMatrix.multiplyMatrices(_matrixWorldInv,bone.parent.matrixWorld);_vector$a.setFromMatrixPosition(_boneMatrix);position.setXYZ(j+1,_vector$a.x,_vector$a.y,_vector$a.z);j+=2;}}geometry.getAttribute('position').needsUpdate=true;super.updateMatrixWorld(force);}}function getBoneList(object){const boneList=[];if(object&&object.isBone){boneList.push(object);}for(let i=0;i<object.children.length;i++){boneList.push.apply(boneList,getBoneList(object.children[i]));}return boneList;}class PointLightHelper extends Mesh{constructor(light,sphereSize,color){const geometry=new SphereGeometry(sphereSize,4,2);const material=new MeshBasicMaterial({wireframe:true,fog:false,toneMapped:false});super(geometry,material);this.light=light;this.light.updateMatrixWorld();this.color=color;this.type='PointLightHelper';this.matrix=this.light.matrixWorld;this.matrixAutoUpdate=false;this.update();/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronBufferGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/}dispose(){this.geometry.dispose();this.material.dispose();}update(){if(this.color!==undefined){this.material.color.set(this.color);}else{this.material.color.copy(this.light.color);}/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/}}const _vector$b=/*@__PURE__*/new Vector3();const _color1=/*@__PURE__*/new Color();const _color2=/*@__PURE__*/new Color();class HemisphereLightHelper extends Object3D{constructor(light,size,color){super();this.light=light;this.light.updateMatrixWorld();this.matrix=light.matrixWorld;this.matrixAutoUpdate=false;this.color=color;const geometry=new OctahedronGeometry(size);geometry.rotateY(Math.PI*0.5);this.material=new MeshBasicMaterial({wireframe:true,fog:false,toneMapped:false});if(this.color===undefined)this.material.vertexColors=true;const position=geometry.getAttribute('position');const colors=new Float32Array(position.count*3);geometry.setAttribute('color',new BufferAttribute(colors,3));this.add(new Mesh(geometry,this.material));this.update();}dispose(){this.children[0].geometry.dispose();this.children[0].material.dispose();}update(){const mesh=this.children[0];if(this.color!==undefined){this.material.color.set(this.color);}else{const colors=mesh.geometry.getAttribute('color');_color1.copy(this.light.color);_color2.copy(this.light.groundColor);for(let i=0,l=colors.count;i<l;i++){const color=i<l/2?_color1:_color2;colors.setXYZ(i,color.r,color.g,color.b);}colors.needsUpdate=true;}mesh.lookAt(_vector$b.setFromMatrixPosition(this.light.matrixWorld).negate());}}class GridHelper extends LineSegments{constructor(size=10,divisions=10,color1=0x444444,color2=0x888888){color1=new Color(color1);color2=new Color(color2);const center=divisions/2;const step=size/divisions;const halfSize=size/2;const vertices=[],colors=[];for(let i=0,j=0,k=-halfSize;i<=divisions;i++,k+=step){vertices.push(-halfSize,0,k,halfSize,0,k);vertices.push(k,0,-halfSize,k,0,halfSize);const color=i===center?color1:color2;color.toArray(colors,j);j+=3;color.toArray(colors,j);j+=3;color.toArray(colors,j);j+=3;color.toArray(colors,j);j+=3;}const geometry=new BufferGeometry();geometry.setAttribute('position',new Float32BufferAttribute(vertices,3));geometry.setAttribute('color',new Float32BufferAttribute(colors,3));const material=new LineBasicMaterial({vertexColors:true,toneMapped:false});super(geometry,material);this.type='GridHelper';}}class PolarGridHelper extends LineSegments{constructor(radius=10,radials=16,circles=8,divisions=64,color1=0x444444,color2=0x888888){color1=new Color(color1);color2=new Color(color2);const vertices=[];const colors=[];// create the radials\nfor(let i=0;i<=radials;i++){const v=i/radials*(Math.PI*2);const x=Math.sin(v)*radius;const z=Math.cos(v)*radius;vertices.push(0,0,0);vertices.push(x,0,z);const color=i&1?color1:color2;colors.push(color.r,color.g,color.b);colors.push(color.r,color.g,color.b);}// create the circles\nfor(let i=0;i<=circles;i++){const color=i&1?color1:color2;const r=radius-radius/circles*i;for(let j=0;j<divisions;j++){// first vertex\nlet v=j/divisions*(Math.PI*2);let x=Math.sin(v)*r;let z=Math.cos(v)*r;vertices.push(x,0,z);colors.push(color.r,color.g,color.b);// second vertex\nv=(j+1)/divisions*(Math.PI*2);x=Math.sin(v)*r;z=Math.cos(v)*r;vertices.push(x,0,z);colors.push(color.r,color.g,color.b);}}const geometry=new BufferGeometry();geometry.setAttribute('position',new Float32BufferAttribute(vertices,3));geometry.setAttribute('color',new Float32BufferAttribute(colors,3));const material=new LineBasicMaterial({vertexColors:true,toneMapped:false});super(geometry,material);this.type='PolarGridHelper';}}const _v1$6=/*@__PURE__*/new Vector3();const _v2$3=/*@__PURE__*/new Vector3();const _v3$1=/*@__PURE__*/new Vector3();class DirectionalLightHelper extends Object3D{constructor(light,size,color){super();this.light=light;this.light.updateMatrixWorld();this.matrix=light.matrixWorld;this.matrixAutoUpdate=false;this.color=color;if(size===undefined)size=1;let geometry=new BufferGeometry();geometry.setAttribute('position',new Float32BufferAttribute([-size,size,0,size,size,0,size,-size,0,-size,-size,0,-size,size,0],3));const material=new LineBasicMaterial({fog:false,toneMapped:false});this.lightPlane=new Line(geometry,material);this.add(this.lightPlane);geometry=new BufferGeometry();geometry.setAttribute('position',new Float32BufferAttribute([0,0,0,0,0,1],3));this.targetLine=new Line(geometry,material);this.add(this.targetLine);this.update();}dispose(){this.lightPlane.geometry.dispose();this.lightPlane.material.dispose();this.targetLine.geometry.dispose();this.targetLine.material.dispose();}update(){_v1$6.setFromMatrixPosition(this.light.matrixWorld);_v2$3.setFromMatrixPosition(this.light.target.matrixWorld);_v3$1.subVectors(_v2$3,_v1$6);this.lightPlane.lookAt(_v2$3);if(this.color!==undefined){this.lightPlane.material.color.set(this.color);this.targetLine.material.color.set(this.color);}else{this.lightPlane.material.color.copy(this.light.color);this.targetLine.material.color.copy(this.light.color);}this.targetLine.lookAt(_v2$3);this.targetLine.scale.z=_v3$1.length();}}const _vector$c=/*@__PURE__*/new Vector3();const _camera=/*@__PURE__*/new Camera();/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n */class CameraHelper extends LineSegments{constructor(camera){const geometry=new BufferGeometry();const material=new LineBasicMaterial({color:0xffffff,vertexColors:true,toneMapped:false});const vertices=[];const colors=[];const pointMap={};// colors\nconst colorFrustum=new Color(0xffaa00);const colorCone=new Color(0xff0000);const colorUp=new Color(0x00aaff);const colorTarget=new Color(0xffffff);const colorCross=new Color(0x333333);// near\naddLine('n1','n2',colorFrustum);addLine('n2','n4',colorFrustum);addLine('n4','n3',colorFrustum);addLine('n3','n1',colorFrustum);// far\naddLine('f1','f2',colorFrustum);addLine('f2','f4',colorFrustum);addLine('f4','f3',colorFrustum);addLine('f3','f1',colorFrustum);// sides\naddLine('n1','f1',colorFrustum);addLine('n2','f2',colorFrustum);addLine('n3','f3',colorFrustum);addLine('n4','f4',colorFrustum);// cone\naddLine('p','n1',colorCone);addLine('p','n2',colorCone);addLine('p','n3',colorCone);addLine('p','n4',colorCone);// up\naddLine('u1','u2',colorUp);addLine('u2','u3',colorUp);addLine('u3','u1',colorUp);// target\naddLine('c','t',colorTarget);addLine('p','c',colorCross);// cross\naddLine('cn1','cn2',colorCross);addLine('cn3','cn4',colorCross);addLine('cf1','cf2',colorCross);addLine('cf3','cf4',colorCross);function addLine(a,b,color){addPoint(a,color);addPoint(b,color);}function addPoint(id,color){vertices.push(0,0,0);colors.push(color.r,color.g,color.b);if(pointMap[id]===undefined){pointMap[id]=[];}pointMap[id].push(vertices.length/3-1);}geometry.setAttribute('position',new Float32BufferAttribute(vertices,3));geometry.setAttribute('color',new Float32BufferAttribute(colors,3));super(geometry,material);this.type='CameraHelper';this.camera=camera;if(this.camera.updateProjectionMatrix)this.camera.updateProjectionMatrix();this.matrix=camera.matrixWorld;this.matrixAutoUpdate=false;this.pointMap=pointMap;this.update();}update(){const geometry=this.geometry;const pointMap=this.pointMap;const w=1,h=1;// we need just camera projection matrix inverse\n// world matrix must be identity\n_camera.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse);// center / target\nsetPoint('c',pointMap,geometry,_camera,0,0,-1);setPoint('t',pointMap,geometry,_camera,0,0,1);// near\nsetPoint('n1',pointMap,geometry,_camera,-w,-h,-1);setPoint('n2',pointMap,geometry,_camera,w,-h,-1);setPoint('n3',pointMap,geometry,_camera,-w,h,-1);setPoint('n4',pointMap,geometry,_camera,w,h,-1);// far\nsetPoint('f1',pointMap,geometry,_camera,-w,-h,1);setPoint('f2',pointMap,geometry,_camera,w,-h,1);setPoint('f3',pointMap,geometry,_camera,-w,h,1);setPoint('f4',pointMap,geometry,_camera,w,h,1);// up\nsetPoint('u1',pointMap,geometry,_camera,w*0.7,h*1.1,-1);setPoint('u2',pointMap,geometry,_camera,-w*0.7,h*1.1,-1);setPoint('u3',pointMap,geometry,_camera,0,h*2,-1);// cross\nsetPoint('cf1',pointMap,geometry,_camera,-w,0,1);setPoint('cf2',pointMap,geometry,_camera,w,0,1);setPoint('cf3',pointMap,geometry,_camera,0,-h,1);setPoint('cf4',pointMap,geometry,_camera,0,h,1);setPoint('cn1',pointMap,geometry,_camera,-w,0,-1);setPoint('cn2',pointMap,geometry,_camera,w,0,-1);setPoint('cn3',pointMap,geometry,_camera,0,-h,-1);setPoint('cn4',pointMap,geometry,_camera,0,h,-1);geometry.getAttribute('position').needsUpdate=true;}}function setPoint(point,pointMap,geometry,camera,x,y,z){_vector$c.set(x,y,z).unproject(camera);const points=pointMap[point];if(points!==undefined){const position=geometry.getAttribute('position');for(let i=0,l=points.length;i<l;i++){position.setXYZ(points[i],_vector$c.x,_vector$c.y,_vector$c.z);}}}const _box$3=/*@__PURE__*/new Box3();class BoxHelper extends LineSegments{constructor(object,color=0xffff00){const indices=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]);const positions=new Float32Array(8*3);const geometry=new BufferGeometry();geometry.setIndex(new BufferAttribute(indices,1));geometry.setAttribute('position',new BufferAttribute(positions,3));super(geometry,new LineBasicMaterial({color:color,toneMapped:false}));this.object=object;this.type='BoxHelper';this.matrixAutoUpdate=false;this.update();}update(object){if(object!==undefined){console.warn('THREE.BoxHelper: .update() has no longer arguments.');}if(this.object!==undefined){_box$3.setFromObject(this.object);}if(_box$3.isEmpty())return;const min=_box$3.min;const max=_box$3.max;/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/const position=this.geometry.attributes.position;const array=position.array;array[0]=max.x;array[1]=max.y;array[2]=max.z;array[3]=min.x;array[4]=max.y;array[5]=max.z;array[6]=min.x;array[7]=min.y;array[8]=max.z;array[9]=max.x;array[10]=min.y;array[11]=max.z;array[12]=max.x;array[13]=max.y;array[14]=min.z;array[15]=min.x;array[16]=max.y;array[17]=min.z;array[18]=min.x;array[19]=min.y;array[20]=min.z;array[21]=max.x;array[22]=min.y;array[23]=min.z;position.needsUpdate=true;this.geometry.computeBoundingSphere();}setFromObject(object){this.object=object;this.update();return this;}copy(source){LineSegments.prototype.copy.call(this,source);this.object=source.object;return this;}}class Box3Helper extends LineSegments{constructor(box,color=0xffff00){const indices=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]);const positions=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1];const geometry=new BufferGeometry();geometry.setIndex(new BufferAttribute(indices,1));geometry.setAttribute('position',new Float32BufferAttribute(positions,3));super(geometry,new LineBasicMaterial({color:color,toneMapped:false}));this.box=box;this.type='Box3Helper';this.geometry.computeBoundingSphere();}updateMatrixWorld(force){const box=this.box;if(box.isEmpty())return;box.getCenter(this.position);box.getSize(this.scale);this.scale.multiplyScalar(0.5);super.updateMatrixWorld(force);}}class PlaneHelper extends Line{constructor(plane,size=1,hex=0xffff00){const color=hex;const positions=[1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0];const geometry=new BufferGeometry();geometry.setAttribute('position',new Float32BufferAttribute(positions,3));geometry.computeBoundingSphere();super(geometry,new LineBasicMaterial({color:color,toneMapped:false}));this.type='PlaneHelper';this.plane=plane;this.size=size;const positions2=[1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1];const geometry2=new BufferGeometry();geometry2.setAttribute('position',new Float32BufferAttribute(positions2,3));geometry2.computeBoundingSphere();this.add(new Mesh(geometry2,new MeshBasicMaterial({color:color,opacity:0.2,transparent:true,depthWrite:false,toneMapped:false})));}updateMatrixWorld(force){let scale=-this.plane.constant;if(Math.abs(scale)<1e-8)scale=1e-8;// sign does not matter\nthis.scale.set(0.5*this.size,0.5*this.size,scale);this.children[0].material.side=scale<0?BackSide:FrontSide;// renderer flips side when determinant < 0; flipping not wanted here\nthis.lookAt(this.plane.normal);super.updateMatrixWorld(force);}}const _axis=/*@__PURE__*/new Vector3();let _lineGeometry,_coneGeometry;class ArrowHelper extends Object3D{constructor(dir,origin,length,color,headLength,headWidth){super();// dir is assumed to be normalized\nthis.type='ArrowHelper';if(dir===undefined)dir=new Vector3(0,0,1);if(origin===undefined)origin=new Vector3(0,0,0);if(length===undefined)length=1;if(color===undefined)color=0xffff00;if(headLength===undefined)headLength=0.2*length;if(headWidth===undefined)headWidth=0.2*headLength;if(_lineGeometry===undefined){_lineGeometry=new BufferGeometry();_lineGeometry.setAttribute('position',new Float32BufferAttribute([0,0,0,0,1,0],3));_coneGeometry=new CylinderGeometry(0,0.5,1,5,1);_coneGeometry.translate(0,-0.5,0);}this.position.copy(origin);this.line=new Line(_lineGeometry,new LineBasicMaterial({color:color,toneMapped:false}));this.line.matrixAutoUpdate=false;this.add(this.line);this.cone=new Mesh(_coneGeometry,new MeshBasicMaterial({color:color,toneMapped:false}));this.cone.matrixAutoUpdate=false;this.add(this.cone);this.setDirection(dir);this.setLength(length,headLength,headWidth);}setDirection(dir){// dir is assumed to be normalized\nif(dir.y>0.99999){this.quaternion.set(0,0,0,1);}else if(dir.y<-0.99999){this.quaternion.set(1,0,0,0);}else{_axis.set(dir.z,0,-dir.x).normalize();const radians=Math.acos(dir.y);this.quaternion.setFromAxisAngle(_axis,radians);}}setLength(length,headLength,headWidth){if(headLength===undefined)headLength=0.2*length;if(headWidth===undefined)headWidth=0.2*headLength;this.line.scale.set(1,Math.max(0.0001,length-headLength),1);// see #17458\nthis.line.updateMatrix();this.cone.scale.set(headWidth,headLength,headWidth);this.cone.position.y=length;this.cone.updateMatrix();}setColor(color){this.line.material.color.set(color);this.cone.material.color.set(color);}copy(source){super.copy(source,false);this.line.copy(source.line);this.cone.copy(source.cone);return this;}}class AxesHelper extends LineSegments{constructor(size=1){const vertices=[0,0,0,size,0,0,0,0,0,0,size,0,0,0,0,0,0,size];const colors=[1,0,0,1,0.6,0,0,1,0,0.6,1,0,0,0,1,0,0.6,1];const geometry=new BufferGeometry();geometry.setAttribute('position',new Float32BufferAttribute(vertices,3));geometry.setAttribute('color',new Float32BufferAttribute(colors,3));const material=new LineBasicMaterial({vertexColors:true,toneMapped:false});super(geometry,material);this.type='AxesHelper';}}const _floatView=new Float32Array(1);const _int32View=new Int32Array(_floatView.buffer);const DataUtils={// Converts float32 to float16 (stored as uint16 value).\ntoHalfFloat:function(val){// Source: http://gamedev.stackexchange.com/questions/17326/conversion-of-a-number-from-single-precision-floating-point-representation-to-a/17410#17410\n/* This method is faster than the OpenEXR implementation (very often\n\t\t* used, eg. in Ogre), with the additional benefit of rounding, inspired\n\t\t* by James Tursa?s half-precision code. */_floatView[0]=val;const x=_int32View[0];let bits=x>>16&0x8000;/* Get the sign */let m=x>>12&0x07ff;/* Keep one extra bit for rounding */const e=x>>23&0xff;/* Using int is faster here */ /* If zero, or denormal, or exponent underflows too much for a denormal\n\t\t\t* half, return signed zero. */if(e<103)return bits;/* If NaN, return NaN. If Inf or exponent overflow, return Inf. */if(e>142){bits|=0x7c00;/* If exponent was 0xff and one mantissa bit was set, it means NaN,\n\t\t\t\t\t\t* not Inf, so make sure we set one mantissa bit too. */bits|=(e==255?0:1)&&x&0x007fffff;return bits;}/* If exponent underflows but not too much, return a denormal */if(e<113){m|=0x0800;/* Extra rounding may overflow and set mantissa to 0 and exponent\n\t\t\t\t* to 1, which is OK. */bits|=(m>>114-e)+(m>>113-e&1);return bits;}bits|=e-112<<10|m>>1;/* Extra rounding. An overflow will set mantissa to 0 and increment\n\t\t\t* the exponent, which is OK. */bits+=m&1;return bits;}};const LOD_MIN=4;const LOD_MAX=8;const SIZE_MAX=Math.pow(2,LOD_MAX);// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA=[0.125,0.215,0.35,0.446,0.526,0.582];const TOTAL_LODS=LOD_MAX-LOD_MIN+1+EXTRA_LOD_SIGMA.length;// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES=20;const ENCODINGS={[LinearEncoding]:0,[sRGBEncoding]:1,[RGBEEncoding]:2,[RGBM7Encoding]:3,[RGBM16Encoding]:4,[RGBDEncoding]:5,[GammaEncoding]:6};const backgroundMaterial=new MeshBasicMaterial({side:BackSide,depthWrite:false,depthTest:false});const backgroundBox=new Mesh(new BoxGeometry(),backgroundMaterial);const _flatCamera=/*@__PURE__*/new OrthographicCamera();const{_lodPlanes,_sizeLods,_sigmas}=/*@__PURE__*/_createPlanes();const _clearColor=/*@__PURE__*/new Color();let _oldTarget=null;// Golden Ratio\nconst PHI=(1+Math.sqrt(5))/2;const INV_PHI=1/PHI;// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections=[/*@__PURE__*/new Vector3(1,1,1),/*@__PURE__*/new Vector3(-1,1,1),/*@__PURE__*/new Vector3(1,1,-1),/*@__PURE__*/new Vector3(-1,1,-1),/*@__PURE__*/new Vector3(0,PHI,INV_PHI),/*@__PURE__*/new Vector3(0,PHI,-INV_PHI),/*@__PURE__*/new Vector3(INV_PHI,0,PHI),/*@__PURE__*/new Vector3(-INV_PHI,0,PHI),/*@__PURE__*/new Vector3(PHI,INV_PHI,0),/*@__PURE__*/new Vector3(-PHI,INV_PHI,0)];/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n */function convertLinearToRGBE(color){const maxComponent=Math.max(color.r,color.g,color.b);const fExp=Math.min(Math.max(Math.ceil(Math.log2(maxComponent)),-128.0),127.0);color.multiplyScalar(Math.pow(2.0,-fExp));const alpha=(fExp+128.0)/255.0;return alpha;}class PMREMGenerator{constructor(renderer){this._renderer=renderer;this._pingPongRenderTarget=null;this._blurMaterial=_getBlurShader(MAX_SAMPLES);this._equirectShader=null;this._cubemapShader=null;this._compileMaterial(this._blurMaterial);}/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */fromScene(scene,sigma=0,near=0.1,far=100){_oldTarget=this._renderer.getRenderTarget();const cubeUVRenderTarget=this._allocateTargets();this._sceneToCubeUV(scene,near,far,cubeUVRenderTarget);if(sigma>0){this._blur(cubeUVRenderTarget,0,0,sigma);}this._applyPMREM(cubeUVRenderTarget);this._cleanup(cubeUVRenderTarget);return cubeUVRenderTarget;}/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * (RGBFormat) or HDR (RGBEFormat). The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */fromEquirectangular(equirectangular){return this._fromTexture(equirectangular);}/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * (RGBFormat) or HDR (RGBEFormat). The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */fromCubemap(cubemap){return this._fromTexture(cubemap);}/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */compileCubemapShader(){if(this._cubemapShader===null){this._cubemapShader=_getCubemapShader();this._compileMaterial(this._cubemapShader);}}/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */compileEquirectangularShader(){if(this._equirectShader===null){this._equirectShader=_getEquirectShader();this._compileMaterial(this._equirectShader);}}/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */dispose(){this._blurMaterial.dispose();if(this._cubemapShader!==null)this._cubemapShader.dispose();if(this._equirectShader!==null)this._equirectShader.dispose();for(let i=0;i<_lodPlanes.length;i++){_lodPlanes[i].dispose();}}// private interface\n_cleanup(outputTarget){this._pingPongRenderTarget.dispose();this._renderer.setRenderTarget(_oldTarget);outputTarget.scissorTest=false;_setViewport(outputTarget,0,0,outputTarget.width,outputTarget.height);}_fromTexture(texture){_oldTarget=this._renderer.getRenderTarget();const cubeUVRenderTarget=this._allocateTargets(texture);this._textureToCubeUV(texture,cubeUVRenderTarget);this._applyPMREM(cubeUVRenderTarget);this._cleanup(cubeUVRenderTarget);return cubeUVRenderTarget;}_allocateTargets(texture){// warning: null texture is valid\nconst params={magFilter:NearestFilter,minFilter:NearestFilter,generateMipmaps:false,type:UnsignedByteType,format:RGBEFormat,encoding:_isLDR(texture)?texture.encoding:RGBEEncoding,depthBuffer:false};const cubeUVRenderTarget=_createRenderTarget(params);cubeUVRenderTarget.depthBuffer=texture?false:true;this._pingPongRenderTarget=_createRenderTarget(params);return cubeUVRenderTarget;}_compileMaterial(material){const tmpMesh=new Mesh(_lodPlanes[0],material);this._renderer.compile(tmpMesh,_flatCamera);}_sceneToCubeUV(scene,near,far,cubeUVRenderTarget){const fov=90;const aspect=1;const cubeCamera=new PerspectiveCamera(fov,aspect,near,far);const upSign=[1,-1,1,1,1,1];const forwardSign=[1,1,1,-1,-1,-1];const renderer=this._renderer;const originalAutoClear=renderer.autoClear;const outputEncoding=renderer.outputEncoding;const toneMapping=renderer.toneMapping;renderer.getClearColor(_clearColor);renderer.toneMapping=NoToneMapping;renderer.outputEncoding=LinearEncoding;renderer.autoClear=false;let useSolidColor=false;const background=scene.background;if(background){if(background.isColor){backgroundMaterial.color.copy(background).convertSRGBToLinear();scene.background=null;const alpha=convertLinearToRGBE(backgroundMaterial.color);backgroundMaterial.opacity=alpha;useSolidColor=true;}}else{backgroundMaterial.color.copy(_clearColor).convertSRGBToLinear();const alpha=convertLinearToRGBE(backgroundMaterial.color);backgroundMaterial.opacity=alpha;useSolidColor=true;}for(let i=0;i<6;i++){const col=i%3;if(col==0){cubeCamera.up.set(0,upSign[i],0);cubeCamera.lookAt(forwardSign[i],0,0);}else if(col==1){cubeCamera.up.set(0,0,upSign[i]);cubeCamera.lookAt(0,forwardSign[i],0);}else{cubeCamera.up.set(0,upSign[i],0);cubeCamera.lookAt(0,0,forwardSign[i]);}_setViewport(cubeUVRenderTarget,col*SIZE_MAX,i>2?SIZE_MAX:0,SIZE_MAX,SIZE_MAX);renderer.setRenderTarget(cubeUVRenderTarget);if(useSolidColor){renderer.render(backgroundBox,cubeCamera);}renderer.render(scene,cubeCamera);}renderer.toneMapping=toneMapping;renderer.outputEncoding=outputEncoding;renderer.autoClear=originalAutoClear;}_textureToCubeUV(texture,cubeUVRenderTarget){const renderer=this._renderer;if(texture.isCubeTexture){if(this._cubemapShader==null){this._cubemapShader=_getCubemapShader();}}else{if(this._equirectShader==null){this._equirectShader=_getEquirectShader();}}const material=texture.isCubeTexture?this._cubemapShader:this._equirectShader;const mesh=new Mesh(_lodPlanes[0],material);const uniforms=material.uniforms;uniforms['envMap'].value=texture;if(!texture.isCubeTexture){uniforms['texelSize'].value.set(1.0/texture.image.width,1.0/texture.image.height);}uniforms['inputEncoding'].value=ENCODINGS[texture.encoding];uniforms['outputEncoding'].value=ENCODINGS[cubeUVRenderTarget.texture.encoding];_setViewport(cubeUVRenderTarget,0,0,3*SIZE_MAX,2*SIZE_MAX);renderer.setRenderTarget(cubeUVRenderTarget);renderer.render(mesh,_flatCamera);}_applyPMREM(cubeUVRenderTarget){const renderer=this._renderer;const autoClear=renderer.autoClear;renderer.autoClear=false;for(let i=1;i<TOTAL_LODS;i++){const sigma=Math.sqrt(_sigmas[i]*_sigmas[i]-_sigmas[i-1]*_sigmas[i-1]);const poleAxis=_axisDirections[(i-1)%_axisDirections.length];this._blur(cubeUVRenderTarget,i-1,i,sigma,poleAxis);}renderer.autoClear=autoClear;}/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t */_blur(cubeUVRenderTarget,lodIn,lodOut,sigma,poleAxis){const pingPongRenderTarget=this._pingPongRenderTarget;this._halfBlur(cubeUVRenderTarget,pingPongRenderTarget,lodIn,lodOut,sigma,'latitudinal',poleAxis);this._halfBlur(pingPongRenderTarget,cubeUVRenderTarget,lodOut,lodOut,sigma,'longitudinal',poleAxis);}_halfBlur(targetIn,targetOut,lodIn,lodOut,sigmaRadians,direction,poleAxis){const renderer=this._renderer;const blurMaterial=this._blurMaterial;if(direction!=='latitudinal'&&direction!=='longitudinal'){console.error('blur direction must be either latitudinal or longitudinal!');}// Number of standard deviations at which to cut off the discrete approximation.\nconst STANDARD_DEVIATIONS=3;const blurMesh=new Mesh(_lodPlanes[lodOut],blurMaterial);const blurUniforms=blurMaterial.uniforms;const pixels=_sizeLods[lodIn]-1;const radiansPerPixel=isFinite(sigmaRadians)?Math.PI/(2*pixels):2*Math.PI/(2*MAX_SAMPLES-1);const sigmaPixels=sigmaRadians/radiansPerPixel;const samples=isFinite(sigmaRadians)?1+Math.floor(STANDARD_DEVIATIONS*sigmaPixels):MAX_SAMPLES;if(samples>MAX_SAMPLES){console.warn(`sigmaRadians, ${sigmaRadians}, is too large and will clip, as it requested ${samples} samples when the maximum is set to ${MAX_SAMPLES}`);}const weights=[];let sum=0;for(let i=0;i<MAX_SAMPLES;++i){const x=i/sigmaPixels;const weight=Math.exp(-x*x/2);weights.push(weight);if(i==0){sum+=weight;}else if(i<samples){sum+=2*weight;}}for(let i=0;i<weights.length;i++){weights[i]=weights[i]/sum;}blurUniforms['envMap'].value=targetIn.texture;blurUniforms['samples'].value=samples;blurUniforms['weights'].value=weights;blurUniforms['latitudinal'].value=direction==='latitudinal';if(poleAxis){blurUniforms['poleAxis'].value=poleAxis;}blurUniforms['dTheta'].value=radiansPerPixel;blurUniforms['mipInt'].value=LOD_MAX-lodIn;blurUniforms['inputEncoding'].value=ENCODINGS[targetIn.texture.encoding];blurUniforms['outputEncoding'].value=ENCODINGS[targetIn.texture.encoding];const outputSize=_sizeLods[lodOut];const x=3*Math.max(0,SIZE_MAX-2*outputSize);const y=(lodOut===0?0:2*SIZE_MAX)+2*outputSize*(lodOut>LOD_MAX-LOD_MIN?lodOut-LOD_MAX+LOD_MIN:0);_setViewport(targetOut,x,y,3*outputSize,2*outputSize);renderer.setRenderTarget(targetOut);renderer.render(blurMesh,_flatCamera);}}function _isLDR(texture){if(texture===undefined||texture.type!==UnsignedByteType)return false;return texture.encoding===LinearEncoding||texture.encoding===sRGBEncoding||texture.encoding===GammaEncoding;}function _createPlanes(){const _lodPlanes=[];const _sizeLods=[];const _sigmas=[];let lod=LOD_MAX;for(let i=0;i<TOTAL_LODS;i++){const sizeLod=Math.pow(2,lod);_sizeLods.push(sizeLod);let sigma=1.0/sizeLod;if(i>LOD_MAX-LOD_MIN){sigma=EXTRA_LOD_SIGMA[i-LOD_MAX+LOD_MIN-1];}else if(i==0){sigma=0;}_sigmas.push(sigma);const texelSize=1.0/(sizeLod-1);const min=-texelSize/2;const max=1+texelSize/2;const uv1=[min,min,max,min,max,max,min,min,max,max,min,max];const cubeFaces=6;const vertices=6;const positionSize=3;const uvSize=2;const faceIndexSize=1;const position=new Float32Array(positionSize*vertices*cubeFaces);const uv=new Float32Array(uvSize*vertices*cubeFaces);const faceIndex=new Float32Array(faceIndexSize*vertices*cubeFaces);for(let face=0;face<cubeFaces;face++){const x=face%3*2/3-1;const y=face>2?0:-1;const coordinates=[x,y,0,x+2/3,y,0,x+2/3,y+1,0,x,y,0,x+2/3,y+1,0,x,y+1,0];position.set(coordinates,positionSize*vertices*face);uv.set(uv1,uvSize*vertices*face);const fill=[face,face,face,face,face,face];faceIndex.set(fill,faceIndexSize*vertices*face);}const planes=new BufferGeometry();planes.setAttribute('position',new BufferAttribute(position,positionSize));planes.setAttribute('uv',new BufferAttribute(uv,uvSize));planes.setAttribute('faceIndex',new BufferAttribute(faceIndex,faceIndexSize));_lodPlanes.push(planes);if(lod>LOD_MIN){lod--;}}return{_lodPlanes,_sizeLods,_sigmas};}function _createRenderTarget(params){const cubeUVRenderTarget=new WebGLRenderTarget(3*SIZE_MAX,3*SIZE_MAX,params);cubeUVRenderTarget.texture.mapping=CubeUVReflectionMapping;cubeUVRenderTarget.texture.name='PMREM.cubeUv';cubeUVRenderTarget.scissorTest=true;return cubeUVRenderTarget;}function _setViewport(target,x,y,width,height){target.viewport.set(x,y,width,height);target.scissor.set(x,y,width,height);}function _getBlurShader(maxSamples){const weights=new Float32Array(maxSamples);const poleAxis=new Vector3(0,1,0);const shaderMaterial=new RawShaderMaterial({name:'SphericalGaussianBlur',defines:{'n':maxSamples},uniforms:{'envMap':{value:null},'samples':{value:1},'weights':{value:weights},'latitudinal':{value:false},'dTheta':{value:0},'mipInt':{value:0},'poleAxis':{value:poleAxis},'inputEncoding':{value:ENCODINGS[LinearEncoding]},'outputEncoding':{value:ENCODINGS[LinearEncoding]}},vertexShader:_getCommonVertexShader(),fragmentShader:/* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t${_getEncodings()}\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,blending:NoBlending,depthTest:false,depthWrite:false});return shaderMaterial;}function _getEquirectShader(){const texelSize=new Vector2(1,1);const shaderMaterial=new RawShaderMaterial({name:'EquirectangularToCubeUV',uniforms:{'envMap':{value:null},'texelSize':{value:texelSize},'inputEncoding':{value:ENCODINGS[LinearEncoding]},'outputEncoding':{value:ENCODINGS[LinearEncoding]}},vertexShader:_getCommonVertexShader(),fragmentShader:/* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform vec2 texelSize;\n\n\t\t\t${_getEncodings()}\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tvec2 f = fract( uv / texelSize - 0.5 );\n\t\t\t\tuv -= f * texelSize;\n\t\t\t\tvec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x += texelSize.x;\n\t\t\t\tvec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.y += texelSize.y;\n\t\t\t\tvec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x -= texelSize.x;\n\t\t\t\tvec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\n\t\t\t\tvec3 tm = mix( tl, tr, f.x );\n\t\t\t\tvec3 bm = mix( bl, br, f.x );\n\t\t\t\tgl_FragColor.rgb = mix( tm, bm, f.y );\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,blending:NoBlending,depthTest:false,depthWrite:false});return shaderMaterial;}function _getCubemapShader(){const shaderMaterial=new RawShaderMaterial({name:'CubemapToCubeUV',uniforms:{'envMap':{value:null},'inputEncoding':{value:ENCODINGS[LinearEncoding]},'outputEncoding':{value:ENCODINGS[LinearEncoding]}},vertexShader:_getCommonVertexShader(),fragmentShader:/* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\t${_getEncodings()}\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,blending:NoBlending,depthTest:false,depthWrite:false});return shaderMaterial;}function _getCommonVertexShader(){return(/* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`);}function _getEncodings(){return(/* glsl */`\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t`);}function Face4(a,b,c,d,normal,color,materialIndex){console.warn('THREE.Face4 has been removed. A THREE.Face3 will be created instead.');return new Face3(a,b,c,normal,color,materialIndex);}const LineStrip=0;const LinePieces=1;const NoColors=0;const FaceColors=1;const VertexColors=2;function MeshFaceMaterial(materials){console.warn('THREE.MeshFaceMaterial has been removed. Use an Array instead.');return materials;}function MultiMaterial(materials=[]){console.warn('THREE.MultiMaterial has been removed. Use an Array instead.');materials.isMultiMaterial=true;materials.materials=materials;materials.clone=function(){return materials.slice();};return materials;}function PointCloud(geometry,material){console.warn('THREE.PointCloud has been renamed to THREE.Points.');return new Points(geometry,material);}function Particle(material){console.warn('THREE.Particle has been renamed to THREE.Sprite.');return new Sprite(material);}function ParticleSystem(geometry,material){console.warn('THREE.ParticleSystem has been renamed to THREE.Points.');return new Points(geometry,material);}function PointCloudMaterial(parameters){console.warn('THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.');return new PointsMaterial(parameters);}function ParticleBasicMaterial(parameters){console.warn('THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.');return new PointsMaterial(parameters);}function ParticleSystemMaterial(parameters){console.warn('THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.');return new PointsMaterial(parameters);}function Vertex(x,y,z){console.warn('THREE.Vertex has been removed. Use THREE.Vector3 instead.');return new Vector3(x,y,z);}//\nfunction DynamicBufferAttribute(array,itemSize){console.warn('THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead.');return new BufferAttribute(array,itemSize).setUsage(DynamicDrawUsage);}function Int8Attribute(array,itemSize){console.warn('THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.');return new Int8BufferAttribute(array,itemSize);}function Uint8Attribute(array,itemSize){console.warn('THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.');return new Uint8BufferAttribute(array,itemSize);}function Uint8ClampedAttribute(array,itemSize){console.warn('THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.');return new Uint8ClampedBufferAttribute(array,itemSize);}function Int16Attribute(array,itemSize){console.warn('THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.');return new Int16BufferAttribute(array,itemSize);}function Uint16Attribute(array,itemSize){console.warn('THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.');return new Uint16BufferAttribute(array,itemSize);}function Int32Attribute(array,itemSize){console.warn('THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.');return new Int32BufferAttribute(array,itemSize);}function Uint32Attribute(array,itemSize){console.warn('THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.');return new Uint32BufferAttribute(array,itemSize);}function Float32Attribute(array,itemSize){console.warn('THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.');return new Float32BufferAttribute(array,itemSize);}function Float64Attribute(array,itemSize){console.warn('THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.');return new Float64BufferAttribute(array,itemSize);}//\nCurve.create=function(construct,getPoint){console.log('THREE.Curve.create() has been deprecated');construct.prototype=Object.create(Curve.prototype);construct.prototype.constructor=construct;construct.prototype.getPoint=getPoint;return construct;};//\nObject.assign(Path.prototype,{fromPoints:function(points){console.warn('THREE.Path: .fromPoints() has been renamed to .setFromPoints().');return this.setFromPoints(points);}});//\nfunction ClosedSplineCurve3(points){console.warn('THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.');CatmullRomCurve3.call(this,points);this.type='catmullrom';this.closed=true;}ClosedSplineCurve3.prototype=Object.create(CatmullRomCurve3.prototype);//\nfunction SplineCurve3(points){console.warn('THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.');CatmullRomCurve3.call(this,points);this.type='catmullrom';}SplineCurve3.prototype=Object.create(CatmullRomCurve3.prototype);//\nfunction Spline(points){console.warn('THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.');CatmullRomCurve3.call(this,points);this.type='catmullrom';}Spline.prototype=Object.create(CatmullRomCurve3.prototype);Object.assign(Spline.prototype,{initFromArray:function()/* a */{console.error('THREE.Spline: .initFromArray() has been removed.');},getControlPointsArray:function()/* optionalTarget */{console.error('THREE.Spline: .getControlPointsArray() has been removed.');},reparametrizeByArcLength:function()/* samplingCoef */{console.error('THREE.Spline: .reparametrizeByArcLength() has been removed.');}});//\nfunction AxisHelper(size){console.warn('THREE.AxisHelper has been renamed to THREE.AxesHelper.');return new AxesHelper(size);}function BoundingBoxHelper(object,color){console.warn('THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.');return new BoxHelper(object,color);}function EdgesHelper(object,hex){console.warn('THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.');return new LineSegments(new EdgesGeometry(object.geometry),new LineBasicMaterial({color:hex!==undefined?hex:0xffffff}));}GridHelper.prototype.setColors=function(){console.error('THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.');};SkeletonHelper.prototype.update=function(){console.error('THREE.SkeletonHelper: update() no longer needs to be called.');};function WireframeHelper(object,hex){console.warn('THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.');return new LineSegments(new WireframeGeometry(object.geometry),new LineBasicMaterial({color:hex!==undefined?hex:0xffffff}));}//\nObject.assign(Loader.prototype,{extractUrlBase:function(url){console.warn('THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.');return LoaderUtils.extractUrlBase(url);}});Loader.Handlers={add:function()/* regex, loader */{console.error('THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.');},get:function()/* file */{console.error('THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.');}};function XHRLoader(manager){console.warn('THREE.XHRLoader has been renamed to THREE.FileLoader.');return new FileLoader(manager);}function BinaryTextureLoader(manager){console.warn('THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.');return new DataTextureLoader(manager);}//\nObject.assign(Box2.prototype,{center:function(optionalTarget){console.warn('THREE.Box2: .center() has been renamed to .getCenter().');return this.getCenter(optionalTarget);},empty:function(){console.warn('THREE.Box2: .empty() has been renamed to .isEmpty().');return this.isEmpty();},isIntersectionBox:function(box){console.warn('THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().');return this.intersectsBox(box);},size:function(optionalTarget){console.warn('THREE.Box2: .size() has been renamed to .getSize().');return this.getSize(optionalTarget);}});Object.assign(Box3.prototype,{center:function(optionalTarget){console.warn('THREE.Box3: .center() has been renamed to .getCenter().');return this.getCenter(optionalTarget);},empty:function(){console.warn('THREE.Box3: .empty() has been renamed to .isEmpty().');return this.isEmpty();},isIntersectionBox:function(box){console.warn('THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().');return this.intersectsBox(box);},isIntersectionSphere:function(sphere){console.warn('THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().');return this.intersectsSphere(sphere);},size:function(optionalTarget){console.warn('THREE.Box3: .size() has been renamed to .getSize().');return this.getSize(optionalTarget);}});Object.assign(Sphere.prototype,{empty:function(){console.warn('THREE.Sphere: .empty() has been renamed to .isEmpty().');return this.isEmpty();}});Frustum.prototype.setFromMatrix=function(m){console.warn('THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix().');return this.setFromProjectionMatrix(m);};Line3.prototype.center=function(optionalTarget){console.warn('THREE.Line3: .center() has been renamed to .getCenter().');return this.getCenter(optionalTarget);};Object.assign(MathUtils,{random16:function(){console.warn('THREE.Math: .random16() has been deprecated. Use Math.random() instead.');return Math.random();},nearestPowerOfTwo:function(value){console.warn('THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().');return MathUtils.floorPowerOfTwo(value);},nextPowerOfTwo:function(value){console.warn('THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().');return MathUtils.ceilPowerOfTwo(value);}});Object.assign(Matrix3.prototype,{flattenToArrayOffset:function(array,offset){console.warn('THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.');return this.toArray(array,offset);},multiplyVector3:function(vector){console.warn('THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.');return vector.applyMatrix3(this);},multiplyVector3Array:function()/* a */{console.error('THREE.Matrix3: .multiplyVector3Array() has been removed.');},applyToBufferAttribute:function(attribute){console.warn('THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead.');return attribute.applyMatrix3(this);},applyToVector3Array:function()/* array, offset, length */{console.error('THREE.Matrix3: .applyToVector3Array() has been removed.');},getInverse:function(matrix){console.warn('THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.');return this.copy(matrix).invert();}});Object.assign(Matrix4.prototype,{extractPosition:function(m){console.warn('THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().');return this.copyPosition(m);},flattenToArrayOffset:function(array,offset){console.warn('THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.');return this.toArray(array,offset);},getPosition:function(){console.warn('THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.');return new Vector3().setFromMatrixColumn(this,3);},setRotationFromQuaternion:function(q){console.warn('THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().');return this.makeRotationFromQuaternion(q);},multiplyToArray:function(){console.warn('THREE.Matrix4: .multiplyToArray() has been removed.');},multiplyVector3:function(vector){console.warn('THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.');return vector.applyMatrix4(this);},multiplyVector4:function(vector){console.warn('THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.');return vector.applyMatrix4(this);},multiplyVector3Array:function()/* a */{console.error('THREE.Matrix4: .multiplyVector3Array() has been removed.');},rotateAxis:function(v){console.warn('THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.');v.transformDirection(this);},crossVector:function(vector){console.warn('THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.');return vector.applyMatrix4(this);},translate:function(){console.error('THREE.Matrix4: .translate() has been removed.');},rotateX:function(){console.error('THREE.Matrix4: .rotateX() has been removed.');},rotateY:function(){console.error('THREE.Matrix4: .rotateY() has been removed.');},rotateZ:function(){console.error('THREE.Matrix4: .rotateZ() has been removed.');},rotateByAxis:function(){console.error('THREE.Matrix4: .rotateByAxis() has been removed.');},applyToBufferAttribute:function(attribute){console.warn('THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead.');return attribute.applyMatrix4(this);},applyToVector3Array:function()/* array, offset, length */{console.error('THREE.Matrix4: .applyToVector3Array() has been removed.');},makeFrustum:function(left,right,bottom,top,near,far){console.warn('THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.');return this.makePerspective(left,right,top,bottom,near,far);},getInverse:function(matrix){console.warn('THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.');return this.copy(matrix).invert();}});Plane.prototype.isIntersectionLine=function(line){console.warn('THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().');return this.intersectsLine(line);};Object.assign(Quaternion.prototype,{multiplyVector3:function(vector){console.warn('THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.');return vector.applyQuaternion(this);},inverse:function(){console.warn('THREE.Quaternion: .inverse() has been renamed to invert().');return this.invert();}});Object.assign(Ray.prototype,{isIntersectionBox:function(box){console.warn('THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().');return this.intersectsBox(box);},isIntersectionPlane:function(plane){console.warn('THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().');return this.intersectsPlane(plane);},isIntersectionSphere:function(sphere){console.warn('THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().');return this.intersectsSphere(sphere);}});Object.assign(Triangle.prototype,{area:function(){console.warn('THREE.Triangle: .area() has been renamed to .getArea().');return this.getArea();},barycoordFromPoint:function(point,target){console.warn('THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().');return this.getBarycoord(point,target);},midpoint:function(target){console.warn('THREE.Triangle: .midpoint() has been renamed to .getMidpoint().');return this.getMidpoint(target);},normal:function(target){console.warn('THREE.Triangle: .normal() has been renamed to .getNormal().');return this.getNormal(target);},plane:function(target){console.warn('THREE.Triangle: .plane() has been renamed to .getPlane().');return this.getPlane(target);}});Object.assign(Triangle,{barycoordFromPoint:function(point,a,b,c,target){console.warn('THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().');return Triangle.getBarycoord(point,a,b,c,target);},normal:function(a,b,c,target){console.warn('THREE.Triangle: .normal() has been renamed to .getNormal().');return Triangle.getNormal(a,b,c,target);}});Object.assign(Shape.prototype,{extractAllPoints:function(divisions){console.warn('THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.');return this.extractPoints(divisions);},extrude:function(options){console.warn('THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.');return new ExtrudeGeometry(this,options);},makeGeometry:function(options){console.warn('THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.');return new ShapeGeometry(this,options);}});Object.assign(Vector2.prototype,{fromAttribute:function(attribute,index,offset){console.warn('THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().');return this.fromBufferAttribute(attribute,index,offset);},distanceToManhattan:function(v){console.warn('THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().');return this.manhattanDistanceTo(v);},lengthManhattan:function(){console.warn('THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().');return this.manhattanLength();}});Object.assign(Vector3.prototype,{setEulerFromRotationMatrix:function(){console.error('THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.');},setEulerFromQuaternion:function(){console.error('THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.');},getPositionFromMatrix:function(m){console.warn('THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().');return this.setFromMatrixPosition(m);},getScaleFromMatrix:function(m){console.warn('THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().');return this.setFromMatrixScale(m);},getColumnFromMatrix:function(index,matrix){console.warn('THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().');return this.setFromMatrixColumn(matrix,index);},applyProjection:function(m){console.warn('THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.');return this.applyMatrix4(m);},fromAttribute:function(attribute,index,offset){console.warn('THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().');return this.fromBufferAttribute(attribute,index,offset);},distanceToManhattan:function(v){console.warn('THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().');return this.manhattanDistanceTo(v);},lengthManhattan:function(){console.warn('THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().');return this.manhattanLength();}});Object.assign(Vector4.prototype,{fromAttribute:function(attribute,index,offset){console.warn('THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().');return this.fromBufferAttribute(attribute,index,offset);},lengthManhattan:function(){console.warn('THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().');return this.manhattanLength();}});//\nObject.assign(Object3D.prototype,{getChildByName:function(name){console.warn('THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().');return this.getObjectByName(name);},renderDepth:function(){console.warn('THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.');},translate:function(distance,axis){console.warn('THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.');return this.translateOnAxis(axis,distance);},getWorldRotation:function(){console.error('THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.');},applyMatrix:function(matrix){console.warn('THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4().');return this.applyMatrix4(matrix);}});Object.defineProperties(Object3D.prototype,{eulerOrder:{get:function(){console.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');return this.rotation.order;},set:function(value){console.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');this.rotation.order=value;}},useQuaternion:{get:function(){console.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');},set:function(){console.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');}}});Object.assign(Mesh.prototype,{setDrawMode:function(){console.error('THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.');}});Object.defineProperties(Mesh.prototype,{drawMode:{get:function(){console.error('THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode.');return TrianglesDrawMode;},set:function(){console.error('THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.');}}});Object.defineProperties(LOD.prototype,{objects:{get:function(){console.warn('THREE.LOD: .objects has been renamed to .levels.');return this.levels;}}});Object.defineProperty(Skeleton.prototype,'useVertexTexture',{get:function(){console.warn('THREE.Skeleton: useVertexTexture has been removed.');},set:function(){console.warn('THREE.Skeleton: useVertexTexture has been removed.');}});SkinnedMesh.prototype.initBones=function(){console.error('THREE.SkinnedMesh: initBones() has been removed.');};Object.defineProperty(Curve.prototype,'__arcLengthDivisions',{get:function(){console.warn('THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.');return this.arcLengthDivisions;},set:function(value){console.warn('THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.');this.arcLengthDivisions=value;}});//\nPerspectiveCamera.prototype.setLens=function(focalLength,filmGauge){console.warn('THREE.PerspectiveCamera.setLens is deprecated. '+'Use .setFocalLength and .filmGauge for a photographic setup.');if(filmGauge!==undefined)this.filmGauge=filmGauge;this.setFocalLength(focalLength);};//\nObject.defineProperties(Light.prototype,{onlyShadow:{set:function(){console.warn('THREE.Light: .onlyShadow has been removed.');}},shadowCameraFov:{set:function(value){console.warn('THREE.Light: .shadowCameraFov is now .shadow.camera.fov.');this.shadow.camera.fov=value;}},shadowCameraLeft:{set:function(value){console.warn('THREE.Light: .shadowCameraLeft is now .shadow.camera.left.');this.shadow.camera.left=value;}},shadowCameraRight:{set:function(value){console.warn('THREE.Light: .shadowCameraRight is now .shadow.camera.right.');this.shadow.camera.right=value;}},shadowCameraTop:{set:function(value){console.warn('THREE.Light: .shadowCameraTop is now .shadow.camera.top.');this.shadow.camera.top=value;}},shadowCameraBottom:{set:function(value){console.warn('THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.');this.shadow.camera.bottom=value;}},shadowCameraNear:{set:function(value){console.warn('THREE.Light: .shadowCameraNear is now .shadow.camera.near.');this.shadow.camera.near=value;}},shadowCameraFar:{set:function(value){console.warn('THREE.Light: .shadowCameraFar is now .shadow.camera.far.');this.shadow.camera.far=value;}},shadowCameraVisible:{set:function(){console.warn('THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.');}},shadowBias:{set:function(value){console.warn('THREE.Light: .shadowBias is now .shadow.bias.');this.shadow.bias=value;}},shadowDarkness:{set:function(){console.warn('THREE.Light: .shadowDarkness has been removed.');}},shadowMapWidth:{set:function(value){console.warn('THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.');this.shadow.mapSize.width=value;}},shadowMapHeight:{set:function(value){console.warn('THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.');this.shadow.mapSize.height=value;}}});//\nObject.defineProperties(BufferAttribute.prototype,{length:{get:function(){console.warn('THREE.BufferAttribute: .length has been deprecated. Use .count instead.');return this.array.length;}},dynamic:{get:function(){console.warn('THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.');return this.usage===DynamicDrawUsage;},set:function()/* value */{console.warn('THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.');this.setUsage(DynamicDrawUsage);}}});Object.assign(BufferAttribute.prototype,{setDynamic:function(value){console.warn('THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead.');this.setUsage(value===true?DynamicDrawUsage:StaticDrawUsage);return this;},copyIndicesArray:function()/* indices */{console.error('THREE.BufferAttribute: .copyIndicesArray() has been removed.');},setArray:function()/* array */{console.error('THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers');}});Object.assign(BufferGeometry.prototype,{addIndex:function(index){console.warn('THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().');this.setIndex(index);},addAttribute:function(name,attribute){console.warn('THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute().');if(!(attribute&&attribute.isBufferAttribute)&&!(attribute&&attribute.isInterleavedBufferAttribute)){console.warn('THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).');return this.setAttribute(name,new BufferAttribute(arguments[1],arguments[2]));}if(name==='index'){console.warn('THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.');this.setIndex(attribute);return this;}return this.setAttribute(name,attribute);},addDrawCall:function(start,count,indexOffset){if(indexOffset!==undefined){console.warn('THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.');}console.warn('THREE.BufferGeometry: .addDrawCall() is now .addGroup().');this.addGroup(start,count);},clearDrawCalls:function(){console.warn('THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().');this.clearGroups();},computeOffsets:function(){console.warn('THREE.BufferGeometry: .computeOffsets() has been removed.');},removeAttribute:function(name){console.warn('THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute().');return this.deleteAttribute(name);},applyMatrix:function(matrix){console.warn('THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4().');return this.applyMatrix4(matrix);}});Object.defineProperties(BufferGeometry.prototype,{drawcalls:{get:function(){console.error('THREE.BufferGeometry: .drawcalls has been renamed to .groups.');return this.groups;}},offsets:{get:function(){console.warn('THREE.BufferGeometry: .offsets has been renamed to .groups.');return this.groups;}}});Object.defineProperties(InstancedBufferGeometry.prototype,{maxInstancedCount:{get:function(){console.warn('THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount.');return this.instanceCount;},set:function(value){console.warn('THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount.');this.instanceCount=value;}}});Object.defineProperties(Raycaster.prototype,{linePrecision:{get:function(){console.warn('THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead.');return this.params.Line.threshold;},set:function(value){console.warn('THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead.');this.params.Line.threshold=value;}}});Object.defineProperties(InterleavedBuffer.prototype,{dynamic:{get:function(){console.warn('THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead.');return this.usage===DynamicDrawUsage;},set:function(value){console.warn('THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead.');this.setUsage(value);}}});Object.assign(InterleavedBuffer.prototype,{setDynamic:function(value){console.warn('THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead.');this.setUsage(value===true?DynamicDrawUsage:StaticDrawUsage);return this;},setArray:function()/* array */{console.error('THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers');}});//\nObject.assign(ExtrudeGeometry.prototype,{getArrays:function(){console.error('THREE.ExtrudeGeometry: .getArrays() has been removed.');},addShapeList:function(){console.error('THREE.ExtrudeGeometry: .addShapeList() has been removed.');},addShape:function(){console.error('THREE.ExtrudeGeometry: .addShape() has been removed.');}});//\nObject.assign(Scene.prototype,{dispose:function(){console.error('THREE.Scene: .dispose() has been removed.');}});//\nObject.defineProperties(Uniform.prototype,{dynamic:{set:function(){console.warn('THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.');}},onUpdate:{value:function(){console.warn('THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.');return this;}}});//\nObject.defineProperties(Material.prototype,{wrapAround:{get:function(){console.warn('THREE.Material: .wrapAround has been removed.');},set:function(){console.warn('THREE.Material: .wrapAround has been removed.');}},overdraw:{get:function(){console.warn('THREE.Material: .overdraw has been removed.');},set:function(){console.warn('THREE.Material: .overdraw has been removed.');}},wrapRGB:{get:function(){console.warn('THREE.Material: .wrapRGB has been removed.');return new Color();}},shading:{get:function(){console.error('THREE.'+this.type+': .shading has been removed. Use the boolean .flatShading instead.');},set:function(value){console.warn('THREE.'+this.type+': .shading has been removed. Use the boolean .flatShading instead.');this.flatShading=value===FlatShading;}},stencilMask:{get:function(){console.warn('THREE.'+this.type+': .stencilMask has been removed. Use .stencilFuncMask instead.');return this.stencilFuncMask;},set:function(value){console.warn('THREE.'+this.type+': .stencilMask has been removed. Use .stencilFuncMask instead.');this.stencilFuncMask=value;}}});Object.defineProperties(MeshPhongMaterial.prototype,{metal:{get:function(){console.warn('THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.');return false;},set:function(){console.warn('THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead');}}});Object.defineProperties(MeshPhysicalMaterial.prototype,{transparency:{get:function(){console.warn('THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission.');return this.transmission;},set:function(value){console.warn('THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission.');this.transmission=value;}}});Object.defineProperties(ShaderMaterial.prototype,{derivatives:{get:function(){console.warn('THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');return this.extensions.derivatives;},set:function(value){console.warn('THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');this.extensions.derivatives=value;}}});//\nObject.assign(WebGLRenderer.prototype,{clearTarget:function(renderTarget,color,depth,stencil){console.warn('THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.');this.setRenderTarget(renderTarget);this.clear(color,depth,stencil);},animate:function(callback){console.warn('THREE.WebGLRenderer: .animate() is now .setAnimationLoop().');this.setAnimationLoop(callback);},getCurrentRenderTarget:function(){console.warn('THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().');return this.getRenderTarget();},getMaxAnisotropy:function(){console.warn('THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().');return this.capabilities.getMaxAnisotropy();},getPrecision:function(){console.warn('THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.');return this.capabilities.precision;},resetGLState:function(){console.warn('THREE.WebGLRenderer: .resetGLState() is now .state.reset().');return this.state.reset();},supportsFloatTextures:function(){console.warn('THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).');return this.extensions.get('OES_texture_float');},supportsHalfFloatTextures:function(){console.warn('THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).');return this.extensions.get('OES_texture_half_float');},supportsStandardDerivatives:function(){console.warn('THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).');return this.extensions.get('OES_standard_derivatives');},supportsCompressedTextureS3TC:function(){console.warn('THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).');return this.extensions.get('WEBGL_compressed_texture_s3tc');},supportsCompressedTexturePVRTC:function(){console.warn('THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).');return this.extensions.get('WEBGL_compressed_texture_pvrtc');},supportsBlendMinMax:function(){console.warn('THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).');return this.extensions.get('EXT_blend_minmax');},supportsVertexTextures:function(){console.warn('THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.');return this.capabilities.vertexTextures;},supportsInstancedArrays:function(){console.warn('THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).');return this.extensions.get('ANGLE_instanced_arrays');},enableScissorTest:function(boolean){console.warn('THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().');this.setScissorTest(boolean);},initMaterial:function(){console.warn('THREE.WebGLRenderer: .initMaterial() has been removed.');},addPrePlugin:function(){console.warn('THREE.WebGLRenderer: .addPrePlugin() has been removed.');},addPostPlugin:function(){console.warn('THREE.WebGLRenderer: .addPostPlugin() has been removed.');},updateShadowMap:function(){console.warn('THREE.WebGLRenderer: .updateShadowMap() has been removed.');},setFaceCulling:function(){console.warn('THREE.WebGLRenderer: .setFaceCulling() has been removed.');},allocTextureUnit:function(){console.warn('THREE.WebGLRenderer: .allocTextureUnit() has been removed.');},setTexture:function(){console.warn('THREE.WebGLRenderer: .setTexture() has been removed.');},setTexture2D:function(){console.warn('THREE.WebGLRenderer: .setTexture2D() has been removed.');},setTextureCube:function(){console.warn('THREE.WebGLRenderer: .setTextureCube() has been removed.');},getActiveMipMapLevel:function(){console.warn('THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel().');return this.getActiveMipmapLevel();}});Object.defineProperties(WebGLRenderer.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled;},set:function(value){console.warn('THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.');this.shadowMap.enabled=value;}},shadowMapType:{get:function(){return this.shadowMap.type;},set:function(value){console.warn('THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.');this.shadowMap.type=value;}},shadowMapCullFace:{get:function(){console.warn('THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.');return undefined;},set:function()/* value */{console.warn('THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.');}},context:{get:function(){console.warn('THREE.WebGLRenderer: .context has been removed. Use .getContext() instead.');return this.getContext();}},vr:{get:function(){console.warn('THREE.WebGLRenderer: .vr has been renamed to .xr');return this.xr;}},gammaInput:{get:function(){console.warn('THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.');return false;},set:function(){console.warn('THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.');}},gammaOutput:{get:function(){console.warn('THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.');return false;},set:function(value){console.warn('THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.');this.outputEncoding=value===true?sRGBEncoding:LinearEncoding;}},toneMappingWhitePoint:{get:function(){console.warn('THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.');return 1.0;},set:function(){console.warn('THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.');}}});Object.defineProperties(WebGLShadowMap.prototype,{cullFace:{get:function(){console.warn('THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.');return undefined;},set:function()/* cullFace */{console.warn('THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.');}},renderReverseSided:{get:function(){console.warn('THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.');return undefined;},set:function(){console.warn('THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.');}},renderSingleSided:{get:function(){console.warn('THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.');return undefined;},set:function(){console.warn('THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.');}}});function WebGLRenderTargetCube(width,height,options){console.warn('THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options ).');return new WebGLCubeRenderTarget(width,options);}//\nObject.defineProperties(WebGLRenderTarget.prototype,{wrapS:{get:function(){console.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');return this.texture.wrapS;},set:function(value){console.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');this.texture.wrapS=value;}},wrapT:{get:function(){console.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');return this.texture.wrapT;},set:function(value){console.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');this.texture.wrapT=value;}},magFilter:{get:function(){console.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');return this.texture.magFilter;},set:function(value){console.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');this.texture.magFilter=value;}},minFilter:{get:function(){console.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');return this.texture.minFilter;},set:function(value){console.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');this.texture.minFilter=value;}},anisotropy:{get:function(){console.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');return this.texture.anisotropy;},set:function(value){console.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');this.texture.anisotropy=value;}},offset:{get:function(){console.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');return this.texture.offset;},set:function(value){console.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');this.texture.offset=value;}},repeat:{get:function(){console.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');return this.texture.repeat;},set:function(value){console.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');this.texture.repeat=value;}},format:{get:function(){console.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');return this.texture.format;},set:function(value){console.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');this.texture.format=value;}},type:{get:function(){console.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');return this.texture.type;},set:function(value){console.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');this.texture.type=value;}},generateMipmaps:{get:function(){console.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');return this.texture.generateMipmaps;},set:function(value){console.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');this.texture.generateMipmaps=value;}}});//\nObject.defineProperties(Audio.prototype,{load:{value:function(file){console.warn('THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.');const scope=this;const audioLoader=new AudioLoader();audioLoader.load(file,function(buffer){scope.setBuffer(buffer);});return this;}},startTime:{set:function(){console.warn('THREE.Audio: .startTime is now .play( delay ).');}}});AudioAnalyser.prototype.getData=function(){console.warn('THREE.AudioAnalyser: .getData() is now .getFrequencyData().');return this.getFrequencyData();};//\nCubeCamera.prototype.updateCubeMap=function(renderer,scene){console.warn('THREE.CubeCamera: .updateCubeMap() is now .update().');return this.update(renderer,scene);};CubeCamera.prototype.clear=function(renderer,color,depth,stencil){console.warn('THREE.CubeCamera: .clear() is now .renderTarget.clear().');return this.renderTarget.clear(renderer,color,depth,stencil);};//\nconst GeometryUtils={merge:function(geometry1,geometry2,materialIndexOffset){console.warn('THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.');let matrix;if(geometry2.isMesh){geometry2.matrixAutoUpdate&&geometry2.updateMatrix();matrix=geometry2.matrix;geometry2=geometry2.geometry;}geometry1.merge(geometry2,matrix,materialIndexOffset);},center:function(geometry){console.warn('THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.');return geometry.center();}};ImageUtils.crossOrigin=undefined;ImageUtils.loadTexture=function(url,mapping,onLoad,onError){console.warn('THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.');const loader=new TextureLoader();loader.setCrossOrigin(this.crossOrigin);const texture=loader.load(url,onLoad,undefined,onError);if(mapping)texture.mapping=mapping;return texture;};ImageUtils.loadTextureCube=function(urls,mapping,onLoad,onError){console.warn('THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.');const loader=new CubeTextureLoader();loader.setCrossOrigin(this.crossOrigin);const texture=loader.load(urls,onLoad,undefined,onError);if(mapping)texture.mapping=mapping;return texture;};ImageUtils.loadCompressedTexture=function(){console.error('THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.');};ImageUtils.loadCompressedTextureCube=function(){console.error('THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.');};//\nfunction CanvasRenderer(){console.error('THREE.CanvasRenderer has been removed');}//\nfunction JSONLoader(){console.error('THREE.JSONLoader has been removed.');}//\nconst SceneUtils={createMultiMaterialObject:function()/* geometry, materials */{console.error('THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js');},detach:function()/* child, parent, scene */{console.error('THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js');},attach:function()/* child, scene, parent */{console.error('THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js');}};//\nfunction LensFlare(){console.error('THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js');}if(typeof __THREE_DEVTOOLS__!=='undefined'){/* eslint-disable no-undef */__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('register',{detail:{revision:REVISION}}));/* eslint-enable no-undef */}if(typeof window!=='undefined'){if(window.__THREE__){console.warn('WARNING: Multiple instances of Three.js being imported.');}else{window.__THREE__=REVISION;}}export{ACESFilmicToneMapping,AddEquation,AddOperation,AdditiveAnimationBlendMode,AdditiveBlending,AlphaFormat,AlwaysDepth,AlwaysStencilFunc,AmbientLight,AmbientLightProbe,AnimationClip,AnimationLoader,AnimationMixer,AnimationObjectGroup,AnimationUtils,ArcCurve,ArrayCamera,ArrowHelper,Audio,AudioAnalyser,AudioContext,AudioListener,AudioLoader,AxesHelper,AxisHelper,BackSide,BasicDepthPacking,BasicShadowMap,BinaryTextureLoader,Bone,BooleanKeyframeTrack,BoundingBoxHelper,Box2,Box3,Box3Helper,BoxGeometry as BoxBufferGeometry,BoxGeometry,BoxHelper,BufferAttribute,BufferGeometry,BufferGeometryLoader,ByteType,Cache,Camera,CameraHelper,CanvasRenderer,CanvasTexture,CatmullRomCurve3,CineonToneMapping,CircleGeometry as CircleBufferGeometry,CircleGeometry,ClampToEdgeWrapping,Clock,ClosedSplineCurve3,Color,ColorKeyframeTrack,CompressedTexture,CompressedTextureLoader,ConeGeometry as ConeBufferGeometry,ConeGeometry,CubeCamera,CubeReflectionMapping,CubeRefractionMapping,CubeTexture,CubeTextureLoader,CubeUVReflectionMapping,CubeUVRefractionMapping,CubicBezierCurve,CubicBezierCurve3,CubicInterpolant,CullFaceBack,CullFaceFront,CullFaceFrontBack,CullFaceNone,Curve,CurvePath,CustomBlending,CustomToneMapping,CylinderGeometry as CylinderBufferGeometry,CylinderGeometry,Cylindrical,DataTexture,DataTexture2DArray,DataTexture3D,DataTextureLoader,DataUtils,DecrementStencilOp,DecrementWrapStencilOp,DefaultLoadingManager,DepthFormat,DepthStencilFormat,DepthTexture,DirectionalLight,DirectionalLightHelper,DiscreteInterpolant,DodecahedronGeometry as DodecahedronBufferGeometry,DodecahedronGeometry,DoubleSide,DstAlphaFactor,DstColorFactor,DynamicBufferAttribute,DynamicCopyUsage,DynamicDrawUsage,DynamicReadUsage,EdgesGeometry,EdgesHelper,EllipseCurve,EqualDepth,EqualStencilFunc,EquirectangularReflectionMapping,EquirectangularRefractionMapping,Euler,EventDispatcher,ExtrudeGeometry as ExtrudeBufferGeometry,ExtrudeGeometry,Face3,Face4,FaceColors,FileLoader,FlatShading,Float16BufferAttribute,Float32Attribute,Float32BufferAttribute,Float64Attribute,Float64BufferAttribute,FloatType,Fog,FogExp2,Font,FontLoader,FrontSide,Frustum,GLBufferAttribute,GLSL1,GLSL3,GammaEncoding,GeometryUtils,GreaterDepth,GreaterEqualDepth,GreaterEqualStencilFunc,GreaterStencilFunc,GridHelper,Group,HalfFloatType,HemisphereLight,HemisphereLightHelper,HemisphereLightProbe,IcosahedronGeometry as IcosahedronBufferGeometry,IcosahedronGeometry,ImageBitmapLoader,ImageLoader,ImageUtils,ImmediateRenderObject,IncrementStencilOp,IncrementWrapStencilOp,InstancedBufferAttribute,InstancedBufferGeometry,InstancedInterleavedBuffer,InstancedMesh,Int16Attribute,Int16BufferAttribute,Int32Attribute,Int32BufferAttribute,Int8Attribute,Int8BufferAttribute,IntType,InterleavedBuffer,InterleavedBufferAttribute,Interpolant,InterpolateDiscrete,InterpolateLinear,InterpolateSmooth,InvertStencilOp,JSONLoader,KeepStencilOp,KeyframeTrack,LOD,LatheGeometry as LatheBufferGeometry,LatheGeometry,Layers,LensFlare,LessDepth,LessEqualDepth,LessEqualStencilFunc,LessStencilFunc,Light,LightProbe,Line,Line3,LineBasicMaterial,LineCurve,LineCurve3,LineDashedMaterial,LineLoop,LinePieces,LineSegments,LineStrip,LinearEncoding,LinearFilter,LinearInterpolant,LinearMipMapLinearFilter,LinearMipMapNearestFilter,LinearMipmapLinearFilter,LinearMipmapNearestFilter,LinearToneMapping,Loader,LoaderUtils,LoadingManager,LogLuvEncoding,LoopOnce,LoopPingPong,LoopRepeat,LuminanceAlphaFormat,LuminanceFormat,MOUSE,Material,MaterialLoader,MathUtils as Math,MathUtils,Matrix3,Matrix4,MaxEquation,Mesh,MeshBasicMaterial,MeshDepthMaterial,MeshDistanceMaterial,MeshFaceMaterial,MeshLambertMaterial,MeshMatcapMaterial,MeshNormalMaterial,MeshPhongMaterial,MeshPhysicalMaterial,MeshStandardMaterial,MeshToonMaterial,MinEquation,MirroredRepeatWrapping,MixOperation,MultiMaterial,MultiplyBlending,MultiplyOperation,NearestFilter,NearestMipMapLinearFilter,NearestMipMapNearestFilter,NearestMipmapLinearFilter,NearestMipmapNearestFilter,NeverDepth,NeverStencilFunc,NoBlending,NoColors,NoToneMapping,NormalAnimationBlendMode,NormalBlending,NotEqualDepth,NotEqualStencilFunc,NumberKeyframeTrack,Object3D,ObjectLoader,ObjectSpaceNormalMap,OctahedronGeometry as OctahedronBufferGeometry,OctahedronGeometry,OneFactor,OneMinusDstAlphaFactor,OneMinusDstColorFactor,OneMinusSrcAlphaFactor,OneMinusSrcColorFactor,OrthographicCamera,PCFShadowMap,PCFSoftShadowMap,PMREMGenerator,ParametricGeometry as ParametricBufferGeometry,ParametricGeometry,Particle,ParticleBasicMaterial,ParticleSystem,ParticleSystemMaterial,Path,PerspectiveCamera,Plane,PlaneGeometry as PlaneBufferGeometry,PlaneGeometry,PlaneHelper,PointCloud,PointCloudMaterial,PointLight,PointLightHelper,Points,PointsMaterial,PolarGridHelper,PolyhedronGeometry as PolyhedronBufferGeometry,PolyhedronGeometry,PositionalAudio,PropertyBinding,PropertyMixer,QuadraticBezierCurve,QuadraticBezierCurve3,Quaternion,QuaternionKeyframeTrack,QuaternionLinearInterpolant,REVISION,RGBADepthPacking,RGBAFormat,RGBAIntegerFormat,RGBA_ASTC_10x10_Format,RGBA_ASTC_10x5_Format,RGBA_ASTC_10x6_Format,RGBA_ASTC_10x8_Format,RGBA_ASTC_12x10_Format,RGBA_ASTC_12x12_Format,RGBA_ASTC_4x4_Format,RGBA_ASTC_5x4_Format,RGBA_ASTC_5x5_Format,RGBA_ASTC_6x5_Format,RGBA_ASTC_6x6_Format,RGBA_ASTC_8x5_Format,RGBA_ASTC_8x6_Format,RGBA_ASTC_8x8_Format,RGBA_BPTC_Format,RGBA_ETC2_EAC_Format,RGBA_PVRTC_2BPPV1_Format,RGBA_PVRTC_4BPPV1_Format,RGBA_S3TC_DXT1_Format,RGBA_S3TC_DXT3_Format,RGBA_S3TC_DXT5_Format,RGBDEncoding,RGBEEncoding,RGBEFormat,RGBFormat,RGBIntegerFormat,RGBM16Encoding,RGBM7Encoding,RGB_ETC1_Format,RGB_ETC2_Format,RGB_PVRTC_2BPPV1_Format,RGB_PVRTC_4BPPV1_Format,RGB_S3TC_DXT1_Format,RGFormat,RGIntegerFormat,RawShaderMaterial,Ray,Raycaster,RectAreaLight,RedFormat,RedIntegerFormat,ReinhardToneMapping,RepeatWrapping,ReplaceStencilOp,ReverseSubtractEquation,RingGeometry as RingBufferGeometry,RingGeometry,SRGB8_ALPHA8_ASTC_10x10_Format,SRGB8_ALPHA8_ASTC_10x5_Format,SRGB8_ALPHA8_ASTC_10x6_Format,SRGB8_ALPHA8_ASTC_10x8_Format,SRGB8_ALPHA8_ASTC_12x10_Format,SRGB8_ALPHA8_ASTC_12x12_Format,SRGB8_ALPHA8_ASTC_4x4_Format,SRGB8_ALPHA8_ASTC_5x4_Format,SRGB8_ALPHA8_ASTC_5x5_Format,SRGB8_ALPHA8_ASTC_6x5_Format,SRGB8_ALPHA8_ASTC_6x6_Format,SRGB8_ALPHA8_ASTC_8x5_Format,SRGB8_ALPHA8_ASTC_8x6_Format,SRGB8_ALPHA8_ASTC_8x8_Format,Scene,SceneUtils,ShaderChunk,ShaderLib,ShaderMaterial,ShadowMaterial,Shape,ShapeGeometry as ShapeBufferGeometry,ShapeGeometry,ShapePath,ShapeUtils,ShortType,Skeleton,SkeletonHelper,SkinnedMesh,SmoothShading,Sphere,SphereGeometry as SphereBufferGeometry,SphereGeometry,Spherical,SphericalHarmonics3,Spline,SplineCurve,SplineCurve3,SpotLight,SpotLightHelper,Sprite,SpriteMaterial,SrcAlphaFactor,SrcAlphaSaturateFactor,SrcColorFactor,StaticCopyUsage,StaticDrawUsage,StaticReadUsage,StereoCamera,StreamCopyUsage,StreamDrawUsage,StreamReadUsage,StringKeyframeTrack,SubtractEquation,SubtractiveBlending,TOUCH,TangentSpaceNormalMap,TetrahedronGeometry as TetrahedronBufferGeometry,TetrahedronGeometry,TextGeometry as TextBufferGeometry,TextGeometry,Texture,TextureLoader,TorusGeometry as TorusBufferGeometry,TorusGeometry,TorusKnotGeometry as TorusKnotBufferGeometry,TorusKnotGeometry,Triangle,TriangleFanDrawMode,TriangleStripDrawMode,TrianglesDrawMode,TubeGeometry as TubeBufferGeometry,TubeGeometry,UVMapping,Uint16Attribute,Uint16BufferAttribute,Uint32Attribute,Uint32BufferAttribute,Uint8Attribute,Uint8BufferAttribute,Uint8ClampedAttribute,Uint8ClampedBufferAttribute,Uniform,UniformsLib,UniformsUtils,UnsignedByteType,UnsignedInt248Type,UnsignedIntType,UnsignedShort4444Type,UnsignedShort5551Type,UnsignedShort565Type,UnsignedShortType,VSMShadowMap,Vector2,Vector3,Vector4,VectorKeyframeTrack,Vertex,VertexColors,VideoTexture,WebGL1Renderer,WebGLCubeRenderTarget,WebGLMultisampleRenderTarget,WebGLRenderTarget,WebGLRenderTargetCube,WebGLRenderer,WebGLUtils,WireframeGeometry,WireframeHelper,WrapAroundEnding,XHRLoader,ZeroCurvatureEnding,ZeroFactor,ZeroSlopeEnding,ZeroStencilOp,sRGBEncoding};","import Bubble from './field/bubble';\r\nimport Field from './field/field';\r\n\r\nlet canvas = document.getElementById(\"gameScreen\");\r\nlet field = new Field(canvas);\r\n\r\n//modal \r\nlet modal = document.getElementById('gameModal');\r\n//modal button \r\nlet modalButton = document.getElementById('modalButton');\r\n//close button\r\nlet closeButton = document.getElementById('close-button');\r\n//click listener;\r\nmodalButton.addEventListener('click', openModal);\r\nfunction openModal() {\r\n    modal.style.display = 'block';\r\n}\r\n\r\ncloseButton.addEventListener('click', closeModal);\r\nfunction closeModal() {\r\n    modal.style.display = 'none';\r\n}\r\n\r\nlet restartButton = document.getElementById('restart');\r\nrestartButton.addEventListener('click', restart);\r\nfunction restart() {\r\n    field.restart();\r\n}","import Bubble from './bubble';\r\nimport * as THREE from 'three';\r\n\r\nclass Field {\r\n    constructor(canvas) {\r\n        this.ctx = canvas.getContext('2d');\r\n        this.width = canvas.offsetWidth;\r\n        this.height = canvas.offsetHeight;\r\n        this.start = false;\r\n        this.bubble = new Bubble;\r\n        this.left = Math.floor(Math.random() * ((this.width - 200) - 204) + 204);\r\n        this.top = Math.floor(Math.random() * ((this.height - 300) - 200) + 200);\r\n        this.time = document.getElementById('timer');\r\n        this.totalTime = 60;\r\n        this.startGame = this.startGame.bind(this);\r\n        this.restartGame = this.restartGame.bind(this);\r\n        this.restart = this.restart.bind(this);\r\n        this.tick = this.tick.bind(this);\r\n        document.addEventListener('keypress', this.startGame())\r\n        this.background = new Audio('background.mp3');\r\n    }\r\n\r\n    startGame(e) {\r\n      return (e) => {\r\n        this.restartGame();\r\n      }\r\n    }\r\n\r\n    tick() {\r\n        this.totalTime--\r\n        this.time.innerText = `Time: ${this.totalTime} seconds`;\r\n        if ( this.totalTime > 0) {\r\n            setTimeout(this.tick, 1000);\r\n        }\r\n\r\n        if (this.totalTime === 0) {\r\n            this.endGame();\r\n        }\r\n    }\r\n\r\n    restart() {\r\n        this.totalTime = 60;\r\n        this.bubble.clearScore();\r\n    }\r\n\r\n    restartGame() {\r\n        document.getElementById('background').classList.remove('visible');\r\n        document.querySelector('.welcomeText').style.display = 'none';\r\n        this.bubble.drawRandomCircle({left: this.left, top: this.top});\r\n        this.tick();\r\n        this.totalTime = 60;\r\n        this.bubble.clearScore()\r\n        this.background.volume = 0.1;\r\n        this.background.play();\r\n    }\r\n\r\n    endGame() {\r\n        alert(`Final Score: ${this.bubble.totalScore}`)\r\n        document.getElementById('background').classList.add('visible'); \r\n        document.querySelector('.welcomeText').style.display = 'block';\r\n        this.totalTime = 60;\r\n        this.bubble.clearScore();\r\n        this.background.pause();\r\n        this.background.currentTime = 0;\r\n    }\r\n\r\n}\r\nexport default Field;"],"sourceRoot":""}